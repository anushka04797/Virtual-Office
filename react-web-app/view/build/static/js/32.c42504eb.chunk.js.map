{"version":3,"sources":["../node_modules/@mui/material/LinearProgress/linearProgressClasses.js","../node_modules/@mui/material/LinearProgress/LinearProgress.js","pages/WBS-create/createWBS.js"],"names":["getLinearProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_t5","_t6","_excluded","indeterminate1Keyframe","keyframes","indeterminate2Keyframe","bufferKeyframe","getColorShade","theme","color","palette","mode","lighten","main","darken","LinearProgressRoot","styled","name","overridesResolver","props","styles","ownerState","root","capitalize","variant","_extends","position","overflow","display","height","zIndex","colorAdjust","backgroundColor","content","left","top","right","bottom","opacity","transform","LinearProgressDashed","dashed","marginTop","width","backgroundImage","backgroundSize","backgroundPosition","css","LinearProgressBar1","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","transition","transformOrigin","LinearProgressBar2","bar2Indeterminate","bar2Buffer","LinearProgress","React","inProps","ref","useThemeProps","className","value","valueBuffer","other","_objectWithoutPropertiesLoose","classes","slots","bar1","bar2","composeClasses","useUtilityClasses","useTheme","rootProps","inlineStyles","undefined","Math","round","direction","process","_jsxs","clsx","role","children","_jsx","style","CreateNewWBS","dispatch","useDispatch","location","useLocation","useState","assigneeList","setAssigneeList","taskList","setTaskList","projects","useSelector","state","temp","Array","from","data","forEach","item","idx","parseFloat","project","remaining_hours","push","id","label","sub_task","has_permission","pm_projects","find","ele","getTaskList","option","console","log","sortBy","temp_task_list","assignees","element","assignee","sessionStorage","getItem","USER_ID","selectProjectRef","useRef","selectAssigneRef","selectTaskTitleRef","selectedTask","setSelectedTask","selectedSubTask","setSelectedSubTask","selectedProjectEndDate","setSelectedProjectEndDate","selectedAssignee","setselectedAssignee","getAssigneeList","fetchProjectsAssigneeThunk","work_package_index","temp_array","first_name","last_name","unshift","useSnackbar","enqueueSnackbar","reset_form","closeSnackbar","formCreateWbs","resetForm","current","select","clearValue","useFormik","initialValues","work_package_number","reporter","title","description","start_date","end_date","hours_worked","status","progress","comments","deliverable","validateOnChange","validateOnBlur","validate","values","errors","Date","length","onSubmit","setSubmitting","currentDate","JSON","stringify","API","post","then","res","success","fetchWbsThunk","fetchProjectsThunk","fetchProjectsForPMThunk","swal","catch","err","useEffect","task","all_projects","subtasks","set_selected_project","planned_delivery_date","setValues","options","onChange","newValue","actionMeta","action","touched","getOptionLabel","task_title","getOptionValue","planned_hours","handleChange","max","type","isMulti","assigneeArray","arr","shift","i","removedValue","splice","setFieldValue","isSubmitting","isValidating","onClick","handleSubmit"],"mappings":"0OACO,SAASA,EAA8BC,GAC5C,OAAOC,YAAqB,oBAAqBD,GAErBE,YAAuB,oBAAqB,CAAC,OAAQ,eAAgB,iBAAkB,cAAe,gBAAiB,SAAU,QAAS,SAAU,qBAAsB,uBAAwB,MAAO,kBAAmB,oBAAqB,oBAAqB,kBAAmB,aAAc,oBAAqB,eAA1V,I,YCCIC,EACAC,EACAC,EACAC,EACAC,EACAC,E,OAREC,EAAY,CAAC,YAAa,QAAS,QAAS,cAAe,WAwB3DC,EAAyBC,YAAUR,IAAOA,EAAE,oLAgB5CS,EAAyBD,YAAUP,IAAQA,EAAG,mLAgB9CS,EAAiBF,YAAUN,IAAQA,EAAG,4OAgCtCS,EAAgB,SAACC,EAAOC,GAC5B,MAAc,YAAVA,EACK,eAGqB,UAAvBD,EAAME,QAAQC,KAAmBC,YAAQJ,EAAME,QAAQD,GAAOI,KAAM,KAAQC,YAAON,EAAME,QAAQD,GAAOI,KAAM,KAGjHE,EAAqBC,YAAO,OAAQ,CACxCC,KAAM,oBACNxB,KAAM,OACNyB,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOE,KAAMF,EAAO,QAAD,OAASG,YAAWF,EAAWZ,SAAWW,EAAOC,EAAWG,YAPhER,EASxB,gBACDK,EADC,EACDA,WACAb,EAFC,EAEDA,MAFC,OAGGiB,YAAS,CACbC,SAAU,WACVC,SAAU,SACVC,QAAS,QACTC,OAAQ,EACRC,OAAQ,EAER,eAAgB,CACdC,YAAa,SAEfC,gBAAiBzB,EAAcC,EAAOa,EAAWZ,QAC3B,YAArBY,EAAWZ,OAA8C,WAAvBY,EAAWG,SAAwB,CACtEQ,gBAAiB,OACjB,YAAa,CACXC,QAAS,KACTP,SAAU,WACVQ,KAAM,EACNC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRL,gBAAiB,eACjBM,QAAS,KAEa,WAAvBjB,EAAWG,SAAwB,CACpCQ,gBAAiB,eACO,UAAvBX,EAAWG,SAAuB,CACnCe,UAAW,sBAEPC,EAAuBxB,YAAO,OAAQ,CAC1CC,KAAM,oBACNxB,KAAM,SACNyB,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOqB,OAAQrB,EAAO,cAAD,OAAeG,YAAWF,EAAWZ,YAPzCO,EAS1B,YAGG,IAFJK,EAEI,EAFJA,WACAb,EACI,EADJA,MAEMwB,EAAkBzB,EAAcC,EAAOa,EAAWZ,OACxD,OAAOgB,YAAS,CACdC,SAAU,WACVgB,UAAW,EACXb,OAAQ,OACRc,MAAO,QACe,YAArBtB,EAAWZ,OAAuB,CACnC6B,QAAS,IACR,CACDM,gBAAiB,mBAAF,OAAqBZ,EAArB,gBAA4CA,EAA5C,0BACfa,eAAgB,YAChBC,mBAAoB,cAErBC,YAAIhD,IAAQA,EAAG,sEAEZO,IACA0C,EAAqBhC,YAAO,OAAQ,CACxCC,KAAM,oBACNxB,KAAM,OACNyB,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAO6B,IAAK7B,EAAO,WAAD,OAAYG,YAAWF,EAAWZ,UAAmC,kBAAvBY,EAAWG,SAAsD,UAAvBH,EAAWG,UAAwBJ,EAAO8B,kBAA0C,gBAAvB7B,EAAWG,SAA6BJ,EAAO+B,gBAAwC,WAAvB9B,EAAWG,SAAwBJ,EAAOgC,cAPlQpC,EASxB,gBACDK,EADC,EACDA,WACAb,EAFC,EAEDA,MAFC,OAGGiB,YAAS,CACbkB,MAAO,OACPjB,SAAU,WACVQ,KAAM,EACNG,OAAQ,EACRF,IAAK,EACLkB,WAAY,wBACZC,gBAAiB,OACjBtB,gBAAsC,YAArBX,EAAWZ,MAAsB,eAAiBD,EAAME,QAAQW,EAAWZ,OAAOI,MAC3E,gBAAvBQ,EAAWG,SAA6B,CACzC6B,WAAY,cAAF,OArKgB,EAqKhB,aACc,WAAvBhC,EAAWG,SAAwB,CACpCM,OAAQ,EACRuB,WAAY,cAAF,OAxKgB,EAwKhB,iBACR,gBACFhC,EADE,EACFA,WADE,OAE0B,kBAAvBA,EAAWG,SAAsD,UAAvBH,EAAWG,UAAwBuB,YAAI/C,IAAQA,EAAG,iIAG3FG,MACFoD,EAAqBvC,YAAO,OAAQ,CACxCC,KAAM,oBACNxB,KAAM,OACNyB,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAO6B,IAAK7B,EAAO,WAAD,OAAYG,YAAWF,EAAWZ,UAAmC,kBAAvBY,EAAWG,SAAsD,UAAvBH,EAAWG,UAAwBJ,EAAOoC,kBAA0C,WAAvBnC,EAAWG,SAAwBJ,EAAOqC,cAPlMzC,EASxB,gBACDK,EADC,EACDA,WACAb,EAFC,EAEDA,MAFC,OAGGiB,YAAS,CACbkB,MAAO,OACPjB,SAAU,WACVQ,KAAM,EACNG,OAAQ,EACRF,IAAK,EACLkB,WAAY,wBACZC,gBAAiB,QACO,WAAvBjC,EAAWG,SAAwB,CACpCQ,gBAAsC,YAArBX,EAAWZ,MAAsB,eAAiBD,EAAME,QAAQW,EAAWZ,OAAOI,MAC7E,YAArBQ,EAAWZ,OAAuB,CACnC6B,QAAS,IACe,WAAvBjB,EAAWG,SAAwB,CACpCQ,gBAAiBzB,EAAcC,EAAOa,EAAWZ,OACjD4C,WAAY,cAAF,OAzMgB,EAyMhB,iBACR,gBACFhC,EADE,EACFA,WADE,OAE0B,kBAAvBA,EAAWG,SAAsD,UAAvBH,EAAWG,UAAwBuB,YAAI9C,IAAQA,EAAG,kIAG3FI,MASFqD,EAA8BC,cAAiB,SAAwBC,EAASC,GACpF,IAAM1C,EAAQ2C,YAAc,CAC1B3C,MAAOyC,EACP3C,KAAM,sBAIN8C,EAKE5C,EALF4C,UADF,EAMI5C,EAJFV,aAFF,MAEU,UAFV,EAGEuD,EAGE7C,EAHF6C,MACAC,EAEE9C,EAFF8C,YAJF,EAMI9C,EADFK,eALF,MAKY,gBALZ,EAOM0C,EAAQC,YAA8BhD,EAAOjB,GAE7CmB,EAAaI,YAAS,GAAIN,EAAO,CACrCV,QACAe,YAGI4C,EAzLkB,SAAA/C,GACxB,IACE+C,EAGE/C,EAHF+C,QACA5C,EAEEH,EAFFG,QACAf,EACEY,EADFZ,MAEI4D,EAAQ,CACZ/C,KAAM,CAAC,OAAD,eAAiBC,YAAWd,IAAUe,GAC5CiB,OAAQ,CAAC,SAAD,qBAAyBlB,YAAWd,KAC5C6D,KAAM,CAAC,MAAD,kBAAmB/C,YAAWd,KAAuB,kBAAZe,GAA2C,UAAZA,IAAwB,oBAAiC,gBAAZA,GAA6B,kBAA+B,WAAZA,GAAwB,cACnM+C,KAAM,CAAC,MAAmB,WAAZ/C,GAAA,kBAAmCD,YAAWd,IAAsB,WAAZe,GAAA,eAAgCD,YAAWd,KAAuB,kBAAZe,GAA2C,UAAZA,IAAwB,oBAAiC,WAAZA,GAAwB,eAElO,OAAOgD,YAAeH,EAAO7E,EAA+B4E,GA6K5CK,CAAkBpD,GAC5Bb,EAAQkE,cACRC,EAAY,GACZC,EAAe,CACnBN,KAAM,GACNC,KAAM,IAGR,GAAgB,gBAAZ/C,GAAyC,WAAZA,EAC/B,QAAcqD,IAAVb,EAAqB,CACvBW,EAAU,iBAAmBG,KAAKC,MAAMf,GACxCW,EAAU,iBAAmB,EAC7BA,EAAU,iBAAmB,IAC7B,IAAIpC,EAAYyB,EAAQ,IAEA,QAApBxD,EAAMwE,YACRzC,GAAaA,GAGfqC,EAAaN,KAAK/B,UAAlB,qBAA4CA,EAA5C,WACS0C,EAKb,GAAgB,WAAZzD,EACF,QAAoBqD,IAAhBZ,EAA2B,CAC7B,IAAI1B,GAAa0B,GAAe,GAAK,IAEb,QAApBzD,EAAMwE,YACRzC,GAAaA,GAGfqC,EAAaL,KAAKhC,UAAlB,qBAA4CA,EAA5C,WACS0C,EAKb,OAAoBC,eAAMnE,EAAoBU,YAAS,CACrDsC,UAAWoB,kBAAKf,EAAQ9C,KAAMyC,GAC9B1C,WAAYA,EACZ+D,KAAM,eACLT,EAAW,CACZd,IAAKA,GACJK,EAAO,CACRmB,SAAU,CAAa,WAAZ7D,EAAoC8D,cAAK9C,EAAsB,CACxEuB,UAAWK,EAAQ3B,OACnBpB,WAAYA,IACT,KAAmBiE,cAAKtC,EAAoB,CAC/Ce,UAAWK,EAAQE,KACnBjD,WAAYA,EACZkE,MAAOX,EAAaN,OACN,gBAAZ9C,EAA4B,KAAoB8D,cAAK/B,EAAoB,CAC3EQ,UAAWK,EAAQG,KACnBlD,WAAYA,EACZkE,MAAOX,EAAaL,cAsDXb,O,4NCgQA8B,UA9kBM,WACnB,IAAMC,EAAWC,cACbC,EAAWC,cAMf,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAWC,aAAY,SAACC,GAC5B,IAAIC,EAAO,GA2BX,OAzBAC,MAAMC,KAAKH,EAAMF,SAASM,MAAMC,SAAQ,SAACC,EAAMC,GAEzCC,WAAWF,EAAKG,QAAQC,iBAAmB,GAC7CT,EAAKU,KAAK,CACR/C,MAAO0C,EAAKG,QAAQG,GACpBC,MAAOP,EAAKG,QAAQK,SACpBV,KAAME,OAIRS,YAAe,0BACjBb,MAAMC,KAAKH,EAAMF,SAASkB,aAAaX,SAAQ,SAACC,EAAMC,GAChDC,WAAWF,EAAKG,QAAQC,iBAAmB,IAExCT,EAAKgB,MAAK,SAACC,GAAD,OAASA,EAAIL,QAAUP,EAAKG,QAAQK,aACjDb,EAAKU,KAAK,CACR/C,MAAO0C,EAAKG,QAAQG,GACpBC,MAAOP,EAAKG,QAAQK,SACpBV,KAAME,QAOTL,KAmCHkB,EAAc,SAACC,GAEnB,GADAC,QAAQC,IAAI,yBAA0BF,GACjCL,YAAe,yBAYlBlB,EAAY0B,IAAOH,EAAQ,mBAZiB,CAC5C,IAAII,EAAiB,GACrBJ,EAAOf,SAAQ,SAACC,GACdA,EAAKmB,UAAUpB,SAAQ,SAACqB,GACtBL,QAAQC,IAAII,EAAQC,SAASf,IACzBc,EAAQC,SAASf,IAAMgB,eAAeC,QAAQC,MAChDN,EAAeb,KAAKL,SAI1BT,EAAY0B,IAAOC,EAAgB,iBAMjCO,EAAmBC,mBACnBC,EAAmBD,mBACnBE,EAAqBF,mBAE3B,EAAwCvC,mBAAS,MAAjD,mBAAO0C,EAAP,KAAqBC,EAArB,KACA,EAA8C3C,mBAAS,IAAvD,mBAAO4C,EAAP,KAAwBC,EAAxB,KACA,EAA4D7C,mBAAS,IAArE,mBAAO8C,EAAP,KAA+BC,EAA/B,KACA,EAAgD/C,mBAAS,IAAzD,mBAAOgD,EAAP,KAAyBC,EAAzB,KA8BMC,EAAkB,SAACvB,GACvB/B,EAASuD,YAA0B,OAACxB,QAAD,IAACA,OAAD,EAACA,EAAQyB,qBAE5C,IAAIC,EAAa,GAEjB1B,EAAOK,UAAUpB,SAAQ,SAACC,GACxBwC,EAAWnC,KAAK,CACd/C,MAAO0C,EAAKqB,SAASf,GACrBC,MAAOP,EAAKqB,SAASoB,WAAa,IAAMzC,EAAKqB,SAASqB,UACtD5C,KAAME,EAAKqB,cAIfJ,IAAOuB,EAAY,SACnBA,EAAWG,QAAQ,CACjBrF,MAAO,MACPiD,MAAO,eAETlB,EAAgBmD,GAEhBzB,QAAQC,IAAI,QAASwB,GACrBzB,QAAQC,IAAI,YAAaF,IAsE3B,EAA2C8B,cAAnCC,EAAR,EAAQA,gBAyCFC,GAzCN,EAAyBC,cAyCN,WACjBC,EAAcC,YACdxB,EAAiByB,QAAQC,OAAOC,aAChCzB,EAAiBuB,QAAQC,OAAOC,aAChCxB,EAAmBsB,QAAQC,OAAOC,aAClC/D,EAAgB,MAIZ2D,EAAgBK,YAAU,CAC9BC,cAAe,CACbnD,QAAS,GACToD,oBAAqB,GACrBlC,SAAU,GACVmC,SAAUlC,eAAeC,QAAQC,KACjCiC,MAAO,GACPC,YAAa,GACbC,WAAY,GACZC,SAAU,GACVC,aAAc,IACdC,OAAQ,IACRC,SAAU,IACVC,SAAU,GACVC,YAAa,IAEfC,kBAAkB,EAClBC,gBAAgB,EAChBC,SApF+B,SAACC,GAChC,IAP4BV,EAAYC,EAOlCU,EAAS,GAWf,OAVKD,EAAOlE,UAASmE,EAAOnE,QAAU,uBACjCkE,EAAOZ,QAAOa,EAAOb,MAAQ,qBAC7BY,EAAOV,aAAYW,EAAOX,WAAa,0BACvCU,EAAOT,WAAUU,EAAOV,SAAW,wBAEtCS,EAAOV,aAbmBA,EAcLU,EAAOV,WAdUC,EAcES,EAAOT,SAX1C,IAAIW,KAAKX,GAAY,IAAIW,KAAKZ,MAanCW,EAAOV,SAAW,4CAChBS,EAAOhD,SAASmD,OAAS,IAAGF,EAAOjD,SAAW,wBAC3CiD,GAyEPG,SApEiB,SAACJ,EAAD,GAAgC,IAArBK,EAAoB,EAApBA,cACtBC,EAAc,IAAIJ,KAER,IAAIA,KAAKtC,GASX0C,GAAe,GAC3B5D,QAAQC,IAAI,SAAU4D,KAAKC,UAAU7B,EAAcqB,SACnDS,IAAIC,KAAK,cAAe/B,EAAcqB,QACnCW,MAAK,SAACC,GAELlE,QAAQC,IAAIiE,GACO,MAAfA,EAAInB,QAAuC,SAArBmB,EAAInF,KAAKoF,UACjCpC,IACAvD,EAAY,IACZR,EAASoG,YAAc7D,eAAeC,QAAQC,OAC9CzC,EAASqG,YAAmB9D,eAAeC,QAAQC,OACnDzC,EAASsG,YAAwB/D,eAAeC,QAAQC,OACxD8D,IAAK,WAAY,sBAAuB,eAG3CC,OAAM,SAACC,GACNzE,QAAQC,IAAIwE,GACZd,GAAc,QAGlB7B,EAAgB,kCAAmC,CACjD/H,QAAS,YAEXgI,QAoHJ,OApCA7F,IAAMwI,WAAU,WAAO,IAAD,EACpB,aAAIxG,EAASS,aAAb,OAAI,EAAgBgG,KAAM,CACxB,IAAIA,EAAOzG,EAASS,MAAMgG,KAC1B3E,QAAQC,IAAI,yBAA0B0E,GAd1C,SAA8BlF,GAC5B,IAAImF,EAAenG,EACnBuB,QAAQC,IAAI,WAAYxB,GACxBmG,EAAa5F,SAAQ,SAACC,EAAMC,GACtBD,EAAKO,OAASC,IAChBwB,EAAmBhC,GACnBa,EAAYb,EAAKF,KAAK8F,cASxBC,CAAqBH,EAAKlF,UAC1BsB,EAAgB4D,GAChBrD,EAAgBqD,GAChBtD,EAAoBsD,GACpBxD,EAA0BwD,EAAKI,uBAE/B9C,EAAc+C,UAAU,CACtB5F,QAASuF,EAAKpF,GACdiD,oBAAqBmC,EAAKnC,oBAC1BlC,SAAU2B,EAAcqB,OAAOhD,SAC/BmC,SAAUlC,eAAeC,QAAQC,KACjCiC,MAAOT,EAAcqB,OAAOZ,MAC5BC,YAAaV,EAAcqB,OAAOX,YAClCC,WAAYX,EAAcqB,OAAOV,WACjCC,SAAUZ,EAAcqB,OAAOT,SAC/BC,aAAcb,EAAcqB,OAAOR,aACnCC,OAAQd,EAAcqB,OAAOP,OAC7BC,SAAUf,EAAcqB,OAAON,SAC/BC,SAAUhB,EAAcqB,OAAOL,SAC/BC,YAAajB,EAAcqB,OAAOJ,iBAIrC,IAUD,mCACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,qBAAK5G,UAAU,iCAAf,SACE,eAAC,IAAD,CAAOA,UAAU,oBAAjB,UACE,eAAC,IAAD,CAAaA,UAAU,gBAAvB,UACG,IACD,oBAAIA,UAAU,yBAAd,6BAEF,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WAEE,sBAAKA,UAAU,iBAAf,UACE,cAAC,IAAD,CAAQA,UAAU,oBAAlB,4BAGA,cAAC,IAAD,CACEiD,GAAG,UACH0F,QAASxG,EAGTlC,MAAOyE,EACPkE,SAxSI,SAACC,EAAUC,GACrCpF,QAAQC,IAAR,kBAAuBmF,EAAWC,SAClCrF,QAAQC,IAAI,aAAckF,GAED,iBAArBC,EAAWC,QAEbpE,EAAmBkE,GACnBrF,EAAYqF,EAASpG,KAAK8F,UAC1B5C,EAAc+C,UAAU,CACtB5F,QAAS+F,EAASpG,KAAKK,QAAQG,GAC/BiD,oBAAqB2C,EAASpG,KAAKK,QAAQoD,oBAC3ClC,SAAU2B,EAAcqB,OAAOhD,SAC/BmC,SAAUlC,eAAeC,QAAQC,KACjCiC,MAAOT,EAAcqB,OAAOZ,MAC5BC,YAAaV,EAAcqB,OAAOX,YAClCC,WAAYX,EAAcqB,OAAOV,WACjCC,SAAUZ,EAAcqB,OAAOT,SAC/BC,aAAcb,EAAcqB,OAAOR,aACnCC,OAAQd,EAAcqB,OAAOP,OAC7BC,SAAUf,EAAcqB,OAAON,SAC/BC,SAAUhB,EAAcqB,OAAOL,SAC/BC,YAAajB,EAAcqB,OAAOJ,eAEN,SAArBkC,EAAWC,QACpBpE,EAAmB,OAiRC7E,IAAKsE,IAENuB,EAAcqD,QAAQlG,SACrB6C,EAAcsB,OAAOnE,SACnB,uBAAOtB,MAAO,CAAE9E,MAAO,OAAvB,SACGiJ,EAAcsB,OAAOnE,aAmB9B,sBAAK9C,UAAU,iBAAf,UACE,cAAC,IAAD,CAAQA,UAAU,oBAAlB,wBAGA,cAAC,IAAD,CACEiD,GAAG,aACH0F,QAAS1G,EACTgH,eAAgB,SAACxF,GAAD,OAAYA,EAAOyF,YACnCC,eAAgB,SAAC1F,GAAD,OAAYA,EAAOR,IACnC2F,SA3IM,SAACC,EAAUC,GACvB,MAAZD,IACF7D,EAAgB6D,GAEhBpE,EAAgBoE,GAChBhE,EAAyB,OAACgE,QAAD,IAACA,OAAD,EAACA,EAAUJ,wBAEb,iBAArBK,EAAWC,QACbpD,EAAc+C,UAAU,CACtB5F,QAAS+F,EAAS5F,GAClBiD,oBAAqBP,EAAcqB,OAAOd,oBAC1ClC,SAAU2B,EAAcqB,OAAOhD,SAC/BmC,SAAUlC,eAAeC,QAAQC,KACjCiC,MAAOT,EAAcqB,OAAOZ,MAC5BC,YAAaV,EAAcqB,OAAOX,YAClCC,WAAYX,EAAcqB,OAAOV,WACjCC,SAAUZ,EAAcqB,OAAOT,SAC/BC,aAAcb,EAAcqB,OAAOR,aACnCC,OAAQd,EAAcqB,OAAOP,OAC7BC,SAAUf,EAAcqB,OAAON,SAC/BC,SAAUhB,EAAcqB,OAAOL,SAC/BC,YAAajB,EAAcqB,OAAOJ,eAuHhB3G,MAAOuE,EACP1E,IAAKyE,IAENoB,EAAcqD,QAAQE,YACrBvD,EAAcsB,OAAOiC,YACnB,uBAAO1H,MAAO,CAAE9E,MAAO,OAAvB,SACGiJ,EAAcsB,OAAOiC,gBAIb,MAAhB1E,EACC,qBAAKxE,UAAU,iBAAf,SACE,cAAC,IAAD,CAAQtD,MAAM,UAAd,SACE,kCACE,wDAA+B,IAC9B8H,EAAaiE,sBACd,uBACA,gDAAuB,IACtBjE,EAAa4E,cACd,uBACA,kDAAyB,IACxB5E,EAAazB,gBACd,uBACA,+CAVF,IAUyByB,EAAa6B,mBAK1C,6BAGF,sBAAKrG,UAAU,iBAAf,UACE,cAAC,IAAD,CAAQA,UAAU,oBAAlB,uBAEA,cAAC,IAAD,CACEiD,GAAG,QACH/F,KAAK,QACL+C,MAAO0F,EAAcqB,OAAOZ,MAC5BwC,SAAUjD,EAAc0D,aACxBrJ,UAAU,uBAEX2F,EAAcqD,QAAQ5C,OACrBT,EAAcsB,OAAOb,OACnB,uBAAO5E,MAAO,CAAE9E,MAAO,OAAvB,SACGiJ,EAAcsB,OAAOb,WAK9B,sBAAKpG,UAAU,iBAAf,UACE,cAAC,IAAD,CAAQA,UAAU,oBAAlB,yBAIA,cAAC,IAAD,CACEiD,GAAG,cACH/F,KAAK,cACL+C,MAAO0F,EAAcqB,OAAOX,YAC5BuC,SAAUjD,EAAc0D,aACxBrJ,UAAU,0BAId,sBAAKA,UAAU,gBAAf,UACE,cAAC,IAAD,CAAQA,UAAU,oBAAlB,wBAIA,cAAC,IAAD,CACEsJ,IAAK1E,EACL2E,KAAK,OACLtG,GAAG,aACH/F,KAAK,aACL+C,MAAO0F,EAAcqB,OAAOV,WAC5BsC,SAAUjD,EAAc0D,aACxBrJ,UAAU,uBAEX2F,EAAcqD,QAAQ1C,YACrBX,EAAcsB,OAAOX,YACnB,uBAAO9E,MAAO,CAAE9E,MAAO,OAAvB,SACGiJ,EAAcsB,OAAOX,gBAK9B,sBAAKtG,UAAU,gBAAf,UACE,cAAC,IAAD,CAAQA,UAAU,oBAAlB,sBAEA,cAAC,IAAD,CACEsJ,IAAK1E,EACL2E,KAAK,OACLtG,GAAG,WACH/F,KAAK,WACL+C,MAAO0F,EAAcqB,OAAOT,SAC5BqC,SAAUjD,EAAc0D,aACxBrJ,UAAU,uBAEX2F,EAAcqD,QAAQzC,UACrBZ,EAAcsB,OAAOV,UACnB,uBAAO/E,MAAO,CAAE9E,MAAO,OAAvB,SACGiJ,EAAcsB,OAAOV,cAK9B,sBAAKvG,UAAU,iBAAf,UACE,cAAC,IAAD,CAAQA,UAAU,oBAAlB,yBAGA,cAAC,IAAD,CACEA,UAAU,qBACVF,IAAKwE,EACLqE,QAAS5G,EACTyH,SAAO,EACPZ,SAzYK,SAAC3I,EAAO6I,GACnC,IAAIW,EAAgB,GAChBC,EAAM,GACV,GAAsB,iBAAnBZ,EAAWC,OACdrF,QAAQC,IAAI,SAAUmF,GACtB/D,EAAoB9E,GACpByD,QAAQC,IAAI,OAAQmB,GACpB7E,EAAMyC,SAAQ,SAACC,GACb,GAAkB,OAAdA,EAAK1C,MAAgB,EACvByJ,EAAG,YAAO3H,IACN4H,QACJ5E,EAAoB2E,GACpBhG,QAAQC,IAAI,MAAO+F,GACnBhG,QAAQC,IAAI,MAAO+F,EAAIvC,QACvB,IAAK,IAAIyC,EAAI,EAAGA,EAAIF,EAAIvC,OAAQyC,IAC5BH,EAAcG,GAAKF,EAAIE,GAAG3J,MAE9ByD,QAAQC,IAAI,cAAe8F,QAI3BA,EAAczG,KAAKL,EAAK1C,eAIxB,GAAsB,gBAAnB6I,EAAWC,OAAuB,CACzCrF,QAAQC,IAAI,UAAWmF,EAAWe,cAClCH,EAAG,YAAO5E,GACVpB,QAAQC,IAAI,MAAO+F,GACnB,IAAI,IAAIE,EAAE,EAAEA,EAAEF,EAAIvC,OAAOyC,IAEpBd,EAAWe,cAAgBH,EAAIE,IAE7BF,EAAII,OAAOF,EAAG,GAGrB7E,EAAoB2E,GACpB,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAIvC,OAAQyC,IACxBH,EAAcG,GAAKF,EAAIE,GAAG3J,MAEpCyD,QAAQC,IAAI,iBAAkB8F,GAC9B9D,EAAcoE,cAAc,WAAYN,IAiWhBxJ,MAAO6E,IAERa,EAAcqD,QAAQhF,UACrB2B,EAAcsB,OAAOjD,UACnB,uBAAOxC,MAAO,CAAE9E,MAAO,OAAvB,SACGiJ,EAAcsB,OAAOjD,cAK9B,qBAAKhE,UAAU,YAAf,SAC2B,MA9OzC2F,EAAcqE,cAAiBrE,EAAcsE,cA+O3B,cAAC,IAAD,IAEA,sBAAKjK,UAAU,sCAAf,UACE,cAAC,IAAD,CACEuJ,KAAK,SACLW,QAASvE,EAAcwE,aACvBnK,UAAU,iCAHZ,wBAOA,cAAC,IAAD,CACEuJ,KAAK,SACLW,QAASzE,EACTzF,UAAU,iCAHZ,+C","file":"static/js/32.c42504eb.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLinearProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiLinearProgress', slot);\n}\nconst linearProgressClasses = generateUtilityClasses('MuiLinearProgress', ['root', 'colorPrimary', 'colorSecondary', 'determinate', 'indeterminate', 'buffer', 'query', 'dashed', 'dashedColorPrimary', 'dashedColorSecondary', 'bar', 'barColorPrimary', 'barColorSecondary', 'bar1Indeterminate', 'bar1Determinate', 'bar1Buffer', 'bar2Indeterminate', 'bar2Buffer']);\nexport default linearProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4,\n    _t5,\n    _t6;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useTheme from '../styles/useTheme';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getLinearProgressUtilityClass } from './linearProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TRANSITION_DURATION = 4; // seconds\n\nconst indeterminate1Keyframe = keyframes(_t || (_t = _`\n  0% {\n    left: -35%;\n    right: 100%;\n  }\n\n  60% {\n    left: 100%;\n    right: -90%;\n  }\n\n  100% {\n    left: 100%;\n    right: -90%;\n  }\n`));\nconst indeterminate2Keyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    left: -200%;\n    right: 100%;\n  }\n\n  60% {\n    left: 107%;\n    right: -8%;\n  }\n\n  100% {\n    left: 107%;\n    right: -8%;\n  }\n`));\nconst bufferKeyframe = keyframes(_t3 || (_t3 = _`\n  0% {\n    opacity: 1;\n    background-position: 0 -23px;\n  }\n\n  60% {\n    opacity: 0;\n    background-position: 0 -23px;\n  }\n\n  100% {\n    opacity: 1;\n    background-position: -200px -23px;\n  }\n`));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, variant],\n    dashed: ['dashed', `dashedColor${capitalize(color)}`],\n    bar1: ['bar', `barColor${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar1Indeterminate', variant === 'determinate' && 'bar1Determinate', variant === 'buffer' && 'bar1Buffer'],\n    bar2: ['bar', variant !== 'buffer' && `barColor${capitalize(color)}`, variant === 'buffer' && `color${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar2Indeterminate', variant === 'buffer' && 'bar2Buffer']\n  };\n  return composeClasses(slots, getLinearProgressUtilityClass, classes);\n};\n\nconst getColorShade = (theme, color) => {\n  if (color === 'inherit') {\n    return 'currentColor';\n  }\n\n  return theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.5);\n};\n\nconst LinearProgressRoot = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`], styles[ownerState.variant]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'block',\n  height: 4,\n  zIndex: 0,\n  // Fix Safari's bug during composition of different paint.\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  backgroundColor: getColorShade(theme, ownerState.color)\n}, ownerState.color === 'inherit' && ownerState.variant !== 'buffer' && {\n  backgroundColor: 'none',\n  '&::before': {\n    content: '\"\"',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'currentColor',\n    opacity: 0.3\n  }\n}, ownerState.variant === 'buffer' && {\n  backgroundColor: 'transparent'\n}, ownerState.variant === 'query' && {\n  transform: 'rotate(180deg)'\n}));\nconst LinearProgressDashed = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Dashed',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.dashed, styles[`dashedColor${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => {\n  const backgroundColor = getColorShade(theme, ownerState.color);\n  return _extends({\n    position: 'absolute',\n    marginTop: 0,\n    height: '100%',\n    width: '100%'\n  }, ownerState.color === 'inherit' && {\n    opacity: 0.3\n  }, {\n    backgroundImage: `radial-gradient(${backgroundColor} 0%, ${backgroundColor} 16%, transparent 42%)`,\n    backgroundSize: '10px 10px',\n    backgroundPosition: '0 -23px'\n  });\n}, css(_t4 || (_t4 = _`\n    animation: ${0} 3s infinite linear;\n  `), bufferKeyframe));\nconst LinearProgressBar1 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar1',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar1Indeterminate, ownerState.variant === 'determinate' && styles.bar1Determinate, ownerState.variant === 'buffer' && styles.bar1Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : theme.palette[ownerState.color].main\n}, ownerState.variant === 'determinate' && {\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}, ownerState.variant === 'buffer' && {\n  zIndex: 1,\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t5 || (_t5 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n    `), indeterminate1Keyframe));\nconst LinearProgressBar2 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar2',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar2Indeterminate, ownerState.variant === 'buffer' && styles.bar2Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left'\n}, ownerState.variant !== 'buffer' && {\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : theme.palette[ownerState.color].main\n}, ownerState.color === 'inherit' && {\n  opacity: 0.3\n}, ownerState.variant === 'buffer' && {\n  backgroundColor: getColorShade(theme, ownerState.color),\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t6 || (_t6 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;\n    `), indeterminate2Keyframe));\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLinearProgress'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    value,\n    valueBuffer,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const theme = useTheme();\n  const rootProps = {};\n  const inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      let transform = value - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar1.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      let transform = (valueBuffer || 0) - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar2.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(LinearProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other, {\n    children: [variant === 'buffer' ? /*#__PURE__*/_jsx(LinearProgressDashed, {\n      className: classes.dashed,\n      ownerState: ownerState\n    }) : null, /*#__PURE__*/_jsx(LinearProgressBar1, {\n      className: classes.bar1,\n      ownerState: ownerState,\n      style: inlineStyles.bar1\n    }), variant === 'determinate' ? null : /*#__PURE__*/_jsx(LinearProgressBar2, {\n      className: classes.bar2,\n      ownerState: ownerState,\n      style: inlineStyles.bar2\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default LinearProgress;","import {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CForm,\r\n  CLabel,\r\n  CInput,\r\n  CButton,\r\n  CSelect,\r\n  CTextarea,\r\n  CAlert,\r\n} from \"@coreui/react\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./createWBS.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchProjectsThunk,\r\n  fetchProjectsAssigneeThunk,\r\n  createWbsThunk,\r\n  fetchWbsThunk,\r\n  fetchProjectsForPMThunk,\r\n} from \"../../store/slices/ProjectsSlice\";\r\nimport Select from \"react-select\";\r\nimport { API, USER_ID } from \"../../Config\";\r\nimport { useFormik } from \"formik\";\r\nimport swal from \"sweetalert\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport sortBy from \"lodash/sortBy\";\r\nimport { has_permission } from \"../../helper.js\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport store from \"../../store/Store\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nconst CreateNewWBS = () => {\r\n  const dispatch = useDispatch();\r\n  let location = useLocation();\r\n  const remaining_hours = (remaining, total) => {\r\n    return String(parseFloat(total) - parseFloat(remaining));\r\n  };\r\n\r\n  // const [projects,setProjects] = useState([])\r\n  const [assigneeList, setAssigneeList] = useState([]);\r\n  const [taskList, setTaskList] = useState([]);\r\n\r\n  const projects = useSelector((state) => {\r\n    let temp = [];\r\n\r\n    Array.from(state.projects.data).forEach((item, idx) => {\r\n      // console.log('remaining hours ', remaining_hours(item.project.remaining_hours, item.project.planned_hours))\r\n      if (parseFloat(item.project.remaining_hours) > 0) {\r\n        temp.push({\r\n          value: item.project.id,\r\n          label: item.project.sub_task,\r\n          data: item,\r\n        });\r\n      }\r\n    });\r\n    if (has_permission(\"projects.add_projects\")) {\r\n      Array.from(state.projects.pm_projects).forEach((item, idx) => {\r\n        if (parseFloat(item.project.remaining_hours) > 0) {\r\n          // console.log(tempitem.label === item.project.sub_task))\r\n          if (!temp.find((ele) => ele.label === item.project.sub_task)) {\r\n            temp.push({\r\n              value: item.project.id,\r\n              label: item.project.sub_task,\r\n              data: item,\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n    // console.log(\"get project list: \", temp)\r\n    return temp;\r\n  });\r\n  //fetcing projects from store\r\n  const getProjectList = () => {\r\n    let temp = [];\r\n    console.log(\"projects\", store.getState().projects.data);\r\n    Array.from(store.getState().projects.data).forEach((item, idx) => {\r\n      // console.log('remaining hours ', remaining_hours(item.project.remaining_hours, item.project.planned_hours))\r\n      if (parseFloat(item.project.remaining_hours) > 0) {\r\n        temp.push({\r\n          value: item.project.id,\r\n          label: item.project.sub_task,\r\n          data: item,\r\n        });\r\n      }\r\n    });\r\n    if (has_permission(\"projects.add_projects\")) {\r\n      Array.from(store.getState().projects.pm_projects).forEach((item, idx) => {\r\n        if (parseFloat(item.project.remaining_hours) > 0) {\r\n          // console.log(tempitem.label === item.project.sub_task))\r\n          if (!temp.find((ele) => ele.label === item.project.sub_task)) {\r\n            temp.push({\r\n              value: item.project.id,\r\n              label: item.project.sub_task,\r\n              data: item,\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n    // console.log(\"get project list: \", temp)\r\n    // return temp\r\n    // setProjects(temp)\r\n  };\r\n\r\n  const getTaskList = (option) => {\r\n    console.log(\"task list###########: \", option);\r\n    if (!has_permission(\"projects.add_projects\")) {\r\n      var temp_task_list = [];\r\n      option.forEach((item) => {\r\n        item.assignees.forEach((element) => {\r\n          console.log(element.assignee.id);\r\n          if (element.assignee.id == sessionStorage.getItem(USER_ID)) {\r\n            temp_task_list.push(item);\r\n          }\r\n        });\r\n      });\r\n      setTaskList(sortBy(temp_task_list, \"task_title\"));\r\n    } else {\r\n      setTaskList(sortBy(option, \"task_title\"));\r\n    }\r\n  };\r\n\r\n  const selectProjectRef = useRef();\r\n  const selectAssigneRef = useRef();\r\n  const selectTaskTitleRef = useRef();\r\n\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [selectedSubTask, setSelectedSubTask] = useState({});\r\n  const [selectedProjectEndDate, setSelectedProjectEndDate] = useState(\"\");\r\n  const [selectedAssignee, setselectedAssignee] = useState([]);\r\n\r\n  const handleProjectChange = (newValue, actionMeta) => {\r\n    console.log(`action: ${actionMeta.action}`);\r\n    console.log(\"newValue: \", newValue);\r\n\r\n    if (actionMeta.action == \"select-option\") {\r\n      // getAssigneeList(newValue);\r\n      setSelectedSubTask(newValue);\r\n      getTaskList(newValue.data.subtasks);\r\n      formCreateWbs.setValues({\r\n        project: newValue.data.project.id,\r\n        work_package_number: newValue.data.project.work_package_number,\r\n        assignee: formCreateWbs.values.assignee,\r\n        reporter: sessionStorage.getItem(USER_ID),\r\n        title: formCreateWbs.values.title,\r\n        description: formCreateWbs.values.description,\r\n        start_date: formCreateWbs.values.start_date,\r\n        end_date: formCreateWbs.values.end_date,\r\n        hours_worked: formCreateWbs.values.hours_worked,\r\n        status: formCreateWbs.values.status,\r\n        progress: formCreateWbs.values.progress,\r\n        comments: formCreateWbs.values.comments,\r\n        deliverable: formCreateWbs.values.deliverable,\r\n      });\r\n    } else if (actionMeta.action == \"clear\") {\r\n      setSelectedSubTask(null);\r\n    }\r\n  };\r\n\r\n  const getAssigneeList = (option) => {\r\n    dispatch(fetchProjectsAssigneeThunk(option?.work_package_index));\r\n\r\n    var temp_array = [];\r\n\r\n    option.assignees.forEach((item) => {\r\n      temp_array.push({\r\n        value: item.assignee.id,\r\n        label: item.assignee.first_name + \" \" + item.assignee.last_name,\r\n        data: item.assignee,\r\n      });\r\n    });\r\n\r\n    sortBy(temp_array, \"label\");\r\n    temp_array.unshift({\r\n      value: \"All\",\r\n      label: \"Select All\",\r\n    });\r\n    setAssigneeList(temp_array);\r\n\r\n    console.log(\"array\", temp_array);\r\n    console.log(\"assignees\", option);\r\n  };\r\n\r\n  const handleAssigneeChange = (value, actionMeta) => {\r\n    let assigneeArray = [];\r\n    let arr = [];\r\n    if(actionMeta.action=='select-option'){\r\n    console.log(\"action\", actionMeta)\r\n    setselectedAssignee(value); //1 less value\r\n    console.log(\"rats\", selectedAssignee);\r\n    value.forEach((item) => {\r\n      if (item.value == \"All\") {\r\n        arr = [...assigneeList];\r\n        arr.shift();\r\n        setselectedAssignee(arr);\r\n        console.log(\"arr\", arr)\r\n        console.log(\"len\", arr.length)\r\n        for (let i = 0; i < arr.length; i++) \r\n            assigneeArray[i] = arr[i].value;\r\n       \r\n        console.log(\"assinearray\", assigneeArray);\r\n        \r\n      }\r\n       else {\r\n        assigneeArray.push(item.value);\r\n      } \r\n    });\r\n   }\r\n   else if(actionMeta.action=='remove-value'){\r\n    console.log(\"removed\", actionMeta.removedValue)\r\n    arr = [...selectedAssignee]\r\n    console.log(\"arr\", arr)\r\n    for(let i=0;i<arr.length;i++)\r\n    {\r\n      if(actionMeta.removedValue == arr[i])\r\n       {\r\n           arr.splice(i, 1);\r\n       }\r\n    }  \r\n    setselectedAssignee(arr);\r\n    for (let i = 0; i < arr.length; i++) \r\n            assigneeArray[i] = arr[i].value;\r\n  }\r\n  console.log(\"after removed \", assigneeArray);\r\n  formCreateWbs.setFieldValue(\"assignee\", assigneeArray);\r\n};\r\n\r\n  // form validation for WBS create\r\n  const is_before_start_date = (start_date, end_date) => {\r\n    // console.log('start date', new Date(start_date))\r\n    // console.log('end date', new Date(end_date))\r\n    return new Date(end_date) < new Date(start_date);\r\n  };\r\n\r\n  const validate_create_wbs_form = (values) => {\r\n    const errors = {};\r\n    if (!values.project) errors.project = \"Project is required\";\r\n    if (!values.title) errors.title = \"Title is required\";\r\n    if (!values.start_date) errors.start_date = \"Start date is required\";\r\n    if (!values.end_date) errors.end_date = \"End date is required\";\r\n    if (\r\n      values.start_date &&\r\n      is_before_start_date(values.start_date, values.end_date)\r\n    )\r\n      errors.end_date = \"End date can not be past from start date\";\r\n    if (values.assignee.length < 1) errors.assignee = \"Assignee is required\";\r\n    return errors;\r\n  };\r\n\r\n  //   create wbs method\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const create_wbs = (values, { setSubmitting }) => {\r\n    const currentDate = new Date();\r\n\r\n    const endDate = new Date(selectedProjectEndDate);\r\n\r\n    // console.log(\"end\", endDate);\r\n\r\n    //  console.log(\"difference\", endDate - currentDate);\r\n\r\n    // console.log(\"date\", selectedProjectEndDate);\r\n    // console.log(\"curr\", currentDate);\r\n    // console.log(\"type\" , typeof selectedProjectEndDate);\r\n    if (endDate - currentDate >= 0) {\r\n      console.log(\"values\", JSON.stringify(formCreateWbs.values));\r\n      API.post(\"wbs/create/\", formCreateWbs.values)\r\n        .then((res) => {\r\n          // setSubmitting(false)\r\n          console.log(res);\r\n          if (res.status === 200 && res.data.success === \"True\") {\r\n            reset_form();\r\n            setTaskList([]);\r\n            dispatch(fetchWbsThunk(sessionStorage.getItem(USER_ID)));\r\n            dispatch(fetchProjectsThunk(sessionStorage.getItem(USER_ID)));\r\n            dispatch(fetchProjectsForPMThunk(sessionStorage.getItem(USER_ID)));\r\n            swal(\"Created!\", \"Successfuly Created\", \"success\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setSubmitting(false);\r\n        });\r\n    } else {\r\n      enqueueSnackbar(\"Planned Delivery date is over! \", {\r\n        variant: \"warning\",\r\n      });\r\n      reset_form();\r\n    }\r\n  };\r\n\r\n  // form reset method\r\n  const reset_form = () => {\r\n    formCreateWbs.resetForm();\r\n    selectProjectRef.current.select.clearValue();\r\n    selectAssigneRef.current.select.clearValue();\r\n    selectTaskTitleRef.current.select.clearValue();\r\n    setAssigneeList([]);\r\n  };\r\n\r\n  // use formic for create WBS\r\n  const formCreateWbs = useFormik({\r\n    initialValues: {\r\n      project: \"\",\r\n      work_package_number: \"\",\r\n      assignee: [],\r\n      reporter: sessionStorage.getItem(USER_ID),\r\n      title: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      hours_worked: \"0\",\r\n      status: \"1\",\r\n      progress: \"0\",\r\n      comments: \"\",\r\n      deliverable: \"\",\r\n    },\r\n    validateOnChange: true,\r\n    validateOnBlur: true,\r\n    validate: validate_create_wbs_form,\r\n    onSubmit: create_wbs,\r\n  });\r\n\r\n  const handleTaskTitleChange = (newValue, actionMeta) => {\r\n    if (newValue != null) {\r\n      getAssigneeList(newValue);\r\n      //console.log(assigneeList);\r\n      setSelectedTask(newValue);\r\n      setSelectedProjectEndDate(newValue?.planned_delivery_date);\r\n    }\r\n    if (actionMeta.action == \"select-option\") {\r\n      formCreateWbs.setValues({\r\n        project: newValue.id,\r\n        work_package_number: formCreateWbs.values.work_package_number,\r\n        assignee: formCreateWbs.values.assignee,\r\n        reporter: sessionStorage.getItem(USER_ID),\r\n        title: formCreateWbs.values.title,\r\n        description: formCreateWbs.values.description,\r\n        start_date: formCreateWbs.values.start_date,\r\n        end_date: formCreateWbs.values.end_date,\r\n        hours_worked: formCreateWbs.values.hours_worked,\r\n        status: formCreateWbs.values.status,\r\n        progress: formCreateWbs.values.progress,\r\n        comments: formCreateWbs.values.comments,\r\n        deliverable: formCreateWbs.values.deliverable,\r\n      });\r\n    }\r\n  };\r\n\r\n  function is_form_submitting() {\r\n    // console.log(formCreateWbs.isSubmitting, formCreateWbs.isValidating)\r\n    if (formCreateWbs.isSubmitting && !formCreateWbs.isValidating) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  function set_selected_project(sub_task) {\r\n    let all_projects = projects;\r\n    console.log(\"projects\", projects);\r\n    all_projects.forEach((item, idx) => {\r\n      if (item.label == sub_task) {\r\n        setSelectedSubTask(item);\r\n        getTaskList(item.data.subtasks);\r\n      }\r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (location.state?.task) {\r\n      let task = location.state.task;\r\n      console.log(\"location data if block\", task);\r\n      set_selected_project(task.sub_task);\r\n      setSelectedTask(task);\r\n      getAssigneeList(task);\r\n      setselectedAssignee(task);\r\n      setSelectedProjectEndDate(task.planned_delivery_date);\r\n\r\n      formCreateWbs.setValues({\r\n        project: task.id,\r\n        work_package_number: task.work_package_number,\r\n        assignee: formCreateWbs.values.assignee,\r\n        reporter: sessionStorage.getItem(USER_ID),\r\n        title: formCreateWbs.values.title,\r\n        description: formCreateWbs.values.description,\r\n        start_date: formCreateWbs.values.start_date,\r\n        end_date: formCreateWbs.values.end_date,\r\n        hours_worked: formCreateWbs.values.hours_worked,\r\n        status: formCreateWbs.values.status,\r\n        progress: formCreateWbs.values.progress,\r\n        comments: formCreateWbs.values.comments,\r\n        deliverable: formCreateWbs.values.deliverable,\r\n      });\r\n    } else {\r\n    }\r\n  }, []);\r\n\r\n  // function compareTime(){\r\n  //     const currentDate = new Date();\r\n  //     console.log(currentDate);\r\n  //     if(selectedProjectEndDate < currentDate)\r\n  //       return false;\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow>\r\n          <div className=\"col-md-8 offset-md-2 col-sm-12\">\r\n            <CCard className=\"custom-wbs-card-1\">\r\n              <CCardHeader className=\"project-wbs-1\">\r\n                {\" \"}\r\n                <h4 className=\"section-name-wbscreate\">Create a WBS</h4>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <CContainer>\r\n                  <CForm>\r\n                    <CRow>\r\n                      {/**project name */}\r\n                      <div className=\"col-lg-12 mb-3\">\r\n                        <CLabel className=\"custom-label-wbs5\">\r\n                          Select Project\r\n                        </CLabel>\r\n                        <Select\r\n                          id=\"project\"\r\n                          options={projects}\r\n                          // getOptionLabel={option => option.task_delivery_order + \" / \" + option.sub_task}\r\n                          // getOptionValue={option => option.id}\r\n                          value={selectedSubTask}\r\n                          onChange={handleProjectChange}\r\n                          ref={selectProjectRef}\r\n                        />\r\n                        {formCreateWbs.touched.project &&\r\n                          formCreateWbs.errors.project && (\r\n                            <small style={{ color: \"red\" }}>\r\n                              {formCreateWbs.errors.project}\r\n                            </small>\r\n                          )}\r\n                      </div>\r\n                      {/*selectedSubTask != null ?\r\n                                                <div className=\"col-lg-12 mb-3\">\r\n                                                    <CAlert color=\"primary\">\r\n                                                        <small>\r\n                                                            <b>Planned Delivery Date: </b> {selectedTask.data.project.planned_delivery_date}\r\n                                                            <br />\r\n                                                            <b>Planned Hours: </b> {selectedTask.data.project.planned_hours}\r\n                                                            <br />\r\n                                                            <b>Remaining Hours: </b> {selectedTask.data.project.remaining_hours}\r\n                                                        </small>\r\n                                                    </CAlert>\r\n                                                </div> :\r\n                                                <></>\r\n                                            } \r\n                      {/**task title */}\r\n                      <div className=\"col-lg-12 mb-3\">\r\n                        <CLabel className=\"custom-label-wbs5\">\r\n                          Task Title\r\n                        </CLabel>\r\n                        <Select\r\n                          id=\"task_title\"\r\n                          options={taskList}\r\n                          getOptionLabel={(option) => option.task_title}\r\n                          getOptionValue={(option) => option.id}\r\n                          onChange={handleTaskTitleChange}\r\n                          value={selectedTask}\r\n                          ref={selectTaskTitleRef}\r\n                        />\r\n                        {formCreateWbs.touched.task_title &&\r\n                          formCreateWbs.errors.task_title && (\r\n                            <small style={{ color: \"red\" }}>\r\n                              {formCreateWbs.errors.task_title}\r\n                            </small>\r\n                          )}\r\n                      </div>\r\n                      {selectedTask != null ? (\r\n                        <div className=\"col-lg-12 mb-3\">\r\n                          <CAlert color=\"primary\">\r\n                            <small>\r\n                              <b>Planned Delivery Date: </b>{\" \"}\r\n                              {selectedTask.planned_delivery_date}\r\n                              <br />\r\n                              <b>Planned Hours: </b>{\" \"}\r\n                              {selectedTask.planned_hours}\r\n                              <br />\r\n                              <b>Remaining Hours: </b>{\" \"}\r\n                              {selectedTask.remaining_hours}\r\n                              <br />\r\n                              <b>Task details: </b> {selectedTask.description}\r\n                            </small>\r\n                          </CAlert>\r\n                        </div>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                      {/**wbs title */}\r\n                      <div className=\"col-lg-12 mb-3\">\r\n                        <CLabel className=\"custom-label-wbs5\">WBS Title</CLabel>\r\n                        {/* onChange={setWbsTitle} */}\r\n                        <CInput\r\n                          id=\"title\"\r\n                          name=\"title\"\r\n                          value={formCreateWbs.values.title}\r\n                          onChange={formCreateWbs.handleChange}\r\n                          className=\"custom-forminput-6\"\r\n                        ></CInput>\r\n                        {formCreateWbs.touched.title &&\r\n                          formCreateWbs.errors.title && (\r\n                            <small style={{ color: \"red\" }}>\r\n                              {formCreateWbs.errors.title}\r\n                            </small>\r\n                          )}\r\n                      </div>\r\n                      {/**WBS description */}\r\n                      <div className=\"col-lg-12 mb-3\">\r\n                        <CLabel className=\"custom-label-wbs5\">\r\n                          Description\r\n                        </CLabel>\r\n                        {/* onChange={setWbsDetails} */}\r\n                        <CTextarea\r\n                          id=\"description\"\r\n                          name=\"description\"\r\n                          value={formCreateWbs.values.description}\r\n                          onChange={formCreateWbs.handleChange}\r\n                          className=\"custom-forminput-6\"\r\n                        ></CTextarea>\r\n                      </div>\r\n                      {/**Start date */}\r\n                      <div className=\"col-lg-6 mb-3\">\r\n                        <CLabel className=\"custom-label-wbs5\">\r\n                          Start date\r\n                        </CLabel>\r\n                        {/* onChange={setWbsStartDate} */}\r\n                        <CInput\r\n                          max={selectedProjectEndDate}\r\n                          type=\"date\"\r\n                          id=\"start_date\"\r\n                          name=\"start_date\"\r\n                          value={formCreateWbs.values.start_date}\r\n                          onChange={formCreateWbs.handleChange}\r\n                          className=\"custom-forminput-6\"\r\n                        ></CInput>\r\n                        {formCreateWbs.touched.start_date &&\r\n                          formCreateWbs.errors.start_date && (\r\n                            <small style={{ color: \"red\" }}>\r\n                              {formCreateWbs.errors.start_date}\r\n                            </small>\r\n                          )}\r\n                      </div>\r\n                      {/**End date */}\r\n                      <div className=\"col-lg-6 mb-3\">\r\n                        <CLabel className=\"custom-label-wbs5\">End date</CLabel>\r\n                        {/* onChange={setWbsEndDate} */}\r\n                        <CInput\r\n                          max={selectedProjectEndDate}\r\n                          type=\"date\"\r\n                          id=\"end_date\"\r\n                          name=\"end_date\"\r\n                          value={formCreateWbs.values.end_date}\r\n                          onChange={formCreateWbs.handleChange}\r\n                          className=\"custom-forminput-6\"\r\n                        ></CInput>\r\n                        {formCreateWbs.touched.end_date &&\r\n                          formCreateWbs.errors.end_date && (\r\n                            <small style={{ color: \"red\" }}>\r\n                              {formCreateWbs.errors.end_date}\r\n                            </small>\r\n                          )}\r\n                      </div>\r\n                      {/**Assignees */}\r\n                      <div className=\"col-lg-12 mb-3\">\r\n                        <CLabel className=\"custom-label-wbs5\">\r\n                          Assignee(s)\r\n                        </CLabel>\r\n                        <Select\r\n                          className=\"custom-forminput-6\"\r\n                          ref={selectAssigneRef}\r\n                          options={assigneeList}\r\n                          isMulti\r\n                          onChange={handleAssigneeChange}\r\n                          value={selectedAssignee}\r\n                        />\r\n                        {formCreateWbs.touched.assignee &&\r\n                          formCreateWbs.errors.assignee && (\r\n                            <small style={{ color: \"red\" }}>\r\n                              {formCreateWbs.errors.assignee}\r\n                            </small>\r\n                          )}\r\n                      </div>\r\n                      {/**submit buttons */}\r\n                      <div className=\"col-md-12\">\r\n                        {is_form_submitting() == true ? (\r\n                          <LinearProgress />\r\n                        ) : (\r\n                          <div className=\"projectwbs-form-button-holders mt-3\">\r\n                            <CButton\r\n                              type=\"button\"\r\n                              onClick={formCreateWbs.handleSubmit}\r\n                              className=\"create-btn-prjctwbs create-wbs\"\r\n                            >\r\n                              Create WBS\r\n                            </CButton>\r\n                            <CButton\r\n                              type=\"button\"\r\n                              onClick={reset_form}\r\n                              className=\"create-btn-prjctwbs cancel-wbs\"\r\n                            >\r\n                              Cancel\r\n                            </CButton>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </CRow>\r\n                  </CForm>\r\n                </CContainer>\r\n              </CCardBody>\r\n            </CCard>\r\n          </div>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\nexport default CreateNewWBS;\r\n"],"sourceRoot":""}