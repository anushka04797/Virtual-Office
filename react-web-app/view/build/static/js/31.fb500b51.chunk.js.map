{"version":3,"sources":["components/scheduledMeetings/scheduledMeets.js","components/evms/evmsTable.js","components/projects-table/projectsTable.js","components/assignedProjects/assignedProjects.js","pages/dashboard/Dashboard.js","../node_modules/@mui/material/esm/LinearProgress/linearProgressClasses.js","../node_modules/@mui/material/esm/LinearProgress/LinearProgress.js","components/wbs-docs-upload/WBSFileUpload.js","pages/wbs-board/wbs-modal.js"],"names":["ScheduleMeetings","history","useHistory","dispatch","useDispatch","meeting","useSelector","state","meetings","data","React","useEffect","fetchMeetingList","sessionStorage","getItem","USER_ID","className","length","undefined","slice","map","item","idx","room_id","id","agenda","medium","start_time","color","onClick","push","pathname","EvmsView","evmsList","calculateCPI","ev","ac","Math","abs","console","log","Array","from","project","task_delivery_order","title","sub_task","earned_value","actual_cost","planned_value","ProjectsTableDashboard","projects","work_package_number","Number","parseFloat","planned_hours","toFixed","remaining_hours","planned_delivery_date","AssignedProjectsDashboard","wbs","temp_data","forEach","element","assignee","useState","updatedData","setUpdatedData","modal","setModal","modalData","setModalData","fetchWbsThunk","value","API","get","then","res","find","description","end_date","show","onClose","toggle","timeCardList","Dashboard","location","useLocation","useSnackbar","enqueueSnackbar","closeSnackbar","window","scrollTo","variant","message","has_permission","memo","getLinearProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_t5","_t6","_excluded","indeterminate1Keyframe","keyframes","indeterminate2Keyframe","bufferKeyframe","getColorShade","theme","vars","palette","LinearProgress","mode","lighten","main","darken","LinearProgressRoot","styled","name","overridesResolver","props","styles","ownerState","root","capitalize","_extends","position","overflow","display","height","zIndex","colorAdjust","backgroundColor","content","left","top","right","bottom","opacity","transform","LinearProgressDashed","dashed","marginTop","width","backgroundImage","backgroundSize","backgroundPosition","css","LinearProgressBar1","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","transition","transformOrigin","LinearProgressBar2","bar2Indeterminate","bar2Buffer","inProps","ref","useThemeProps","valueBuffer","other","_objectWithoutPropertiesLoose","classes","slots","bar1","bar2","composeClasses","useUtilityClasses","useTheme","rootProps","inlineStyles","round","direction","process","_jsxs","clsx","role","children","_jsx","style","WBSFileUpload","inputRef","useRef","files","setFiles","fileAvatars","setFileAvatars","htmlFor","type","onChange","event","file","target","URL","createObjectURL","onFileChange","accept","src","alt","index","arrayRemoveItem","WbsModal","hrsWorked","setHrsWorked","plannedHours","setPlannedHours","actualHour","setactualHour","remaininghrs","setremaininghrs","datecheck","setdatecheck","work_package_index","ep","i","estimated_person","start","start_date","end","moment","require","total_days","diff","total_hrs","tomorrow","Date","count","setDate","getDate","getDay","total_spent","hours_today","lastDate","currentDate","difference","getFullYear","getMonth","split","formWbsUpdate","useFormik","initialValues","details","status","hours_worked","progress","comments","deliverable","date_updated","actual_work_done","validateOnChange","validateOnBlur","validate","values","errors","onSubmit","setSubmitting","form_data","FormData","property","append","entries","pair","put","success","fetchProjectsForPMThunk","fetchProjectsThunk","swal","text","icon","catch","err","closeOnBackdrop","size","closeButton","task_title","maxlength","handleChange","fontSize","disabled","e","setFieldValue","min","maxLength","href","textDecoration","dataurl","filename","link","document","createElement","body","appendChild","download","click","BASE_URL","String","pop","isSubmitting","isValidating","handleSubmit","md","first_name","last_name","reporter"],"mappings":"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","file":"static/js/31.fb500b51.chunk.js","sourcesContent":["import React from 'react'\r\nimport { CButton, CCard, CCardBody, CAlert, CRow, CCol } from '@coreui/react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchMeetingList } from \"../../store/slices/MeetingSlice\";\r\nimport { USER_ID } from \"../../Config\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ScheduleMeetings = () => {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const meeting = useSelector(state => state.meetings.data);\r\n    React.useEffect(() => {\r\n        dispatch(fetchMeetingList(sessionStorage.getItem(USER_ID)))\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div className=\"main-holder-projects\">\r\n                <h3 className=\"projectsHeader\">\r\n                    Scheduled Meetings({meeting.length})\r\n                </h3>\r\n\r\n                <div className=\"card-holder1 \">\r\n                    {meeting != undefined && meeting.slice(0, 3).map((item, idx) => (\r\n                        <CCard className=\"project-card2\" key={idx}>\r\n                            <CCardBody>\r\n                                {item.room_id != \"\" &&\r\n                                <h6 className=\"id-no1\">room id: #{item.room_id}</h6>}\r\n                                {item.room_id == \"\" && <h6 className=\"id-no1\">meeting id: #{item.id}</h6>}\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Agenda:</span> {item.agenda}</h5>\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Location:</span> {item.medium == 0 ? 'Physical' :'Virtual'}</h5>\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Scheduled Date &amp; Time :</span> {item.start_time}</h5>\r\n                            </CCardBody>\r\n\r\n                        </CCard>\r\n                    ))}\r\n                    { /**If no meetings */}\r\n                    {meeting == undefined || meeting == '' ? (\r\n                        <CAlert className=\"no-value-show-alert\" color=\"primary\">Currently there are no upcoming meetings</CAlert>\r\n                    ) : <></>}\r\n                </div>\r\n                {meeting != undefined  && <CRow className=\"button-holder3\">\r\n                <CCol className=\"p-header-3 col-md-9 mt-2\">\r\n                       \r\n                    </CCol>\r\n\r\n                    <CCol className=\"col-md-3\">\r\n                    <CButton className=\"tiny-buttons1\"  onClick={() => history.push({pathname:'/dashboard/meetings'})}>View all</CButton>\r\n                    </CCol>\r\n                    </CRow>}\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nexport default ScheduleMeetings\r\n","import React, { useState } from 'react';\r\nimport './evmsTable.css';\r\nimport { CButton, CCard, CCardBody, CAlert, CRow, CCol } from '@coreui/react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchEvmsThunk } from '../../store/slices/EvmsSlice';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nconst EvmsView = () => {\r\n    let history = useHistory();\r\n    \r\n    var cpiVal\r\n    const evmsList = useSelector(state => state.evmsList.data)\r\n    console.log('evms from dashboard', evmsList)\r\n    function calculateCPI(ev,ac){\r\n      let val = Math.abs(ev/ac)\r\n\r\n      return val;\r\n\r\n}\r\n\r\n\r\n  \r\n   \r\n    return (\r\n        <>\r\n            <div className=\"main-holder-projects\">\r\n                <h3 className=\"projectsHeader\">\r\n                    EVMS Summary ({evmsList.length})\r\n                </h3>\r\n                <div className=\"card-holder1\">\r\n                    {evmsList != undefined && Array.from(evmsList).slice(0, 3).map((item, idx) => (\r\n                        <CCard className=\"project-card1\" key={idx}>\r\n                            <CCardBody>\r\n                                <h6 className=\"id-no1\">{item.project.task_delivery_order.title} / {item.project.sub_task}</h6>\r\n                                <h5 className=\"card-details2\"><span className=\"p-header-4\">Cost Performance Index (CPI) :</span><span> {calculateCPI(item.earned_value,item.actual_cost)}</span><small className=\"ml-1 star-color\">*(CPI{'>'}1, within budget.CPI {'<'}1, over budget)</small></h5>\r\n                                <h5 className=\"card-details2\"><span className=\"p-header-4\">Schedule Performance Index (SPI) :</span><span> {calculateCPI(item.earned_value,item.project.planned_value)}</span><small className=\"ml-1 star-color\">*(SPI {'>'}1, within schedule,SPI {'<'}1, behind schedule)</small></h5>\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    ))}\r\n                    { /**If no evmsList */}\r\n                    {evmsList == undefined || evmsList == 0 ? (\r\n\r\n\r\n\r\n                        <CAlert className=\"no-value-show-alert\" color=\"primary\">Currently there are no projects assigned to you</CAlert>\r\n\r\n\r\n                    ) : null\r\n\r\n\r\n                    }\r\n\r\n                </div>\r\n                {evmsList != undefined &&\r\n                    <CRow className=\"button-holder3\">\r\n                         <CCol className=\"p-header-3 col-md-9 mt-2\">\r\n                       \r\n                    </CCol>\r\n\r\n                    <CCol className=\"col-md-3\"><CButton className=\"tiny-buttons1\" onClick={() => history.push({ pathname: '/dashboard/EVMS/view' })}>View all</CButton>\r\n                    </CCol>\r\n                    </CRow>}\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default EvmsView;","import React, { useEffect } from 'react';\r\nimport './projectsTable.css';\r\nimport { CButton, CCard, CCardBody, CAlert, CRow, CCol } from '@coreui/react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { fetchProjectsThunk } from \"../../store/slices/ProjectsSlice\";\r\n// import { USER_ID } from \"../../Config\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst ProjectsTableDashboard = () => {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const projects = useSelector(state => state.projects.data);\r\n    useEffect(() => {\r\n        console.log(\"ProjectsList\", projects)\r\n    }, [projects])\r\n    return (\r\n        <>\r\n            <div className=\"main-holder-projects\">\r\n                <h3 className=\"projectsHeader\">\r\n                    Assigned Project({projects.length})\r\n                </h3>\r\n\r\n                <div className=\"card-holder1\">\r\n                    {projects != undefined && Array.from(projects).slice(0, 3).map((item, idx) => (\r\n                        <CCard className=\"project-card1\" key={idx} onClick={() => history.push({ pathname: 'dashboard/Projects/assigned-projects/details/' + item.project.work_package_number + '/' })}>\r\n                            <CCardBody>\r\n                                {/* <h6 className=\"id-no1\">Work Package Number: # {item.project.work_package_number}</h6> */}\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Project Name: </span> {item.project.sub_task}</h5>\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Planned Hours: </span> {Number(parseFloat(item.project.planned_hours)).toFixed(2)}</h5>\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Remaining Hours: </span> {Number(parseFloat(item.project.remaining_hours)).toFixed(2)}</h5>\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Planned Delivery Date : </span>{item.project.planned_delivery_date}</h5>\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    ))}\r\n                    { /**If no projects */}\r\n                    {projects == '' || projects == undefined ? (\r\n                        <CAlert className=\"no-value-show-alert\" color=\"primary\">Currently there are no projects assigned to you</CAlert>\r\n                    ) : null\r\n                    }\r\n                </div>\r\n                {projects != undefined && <CRow className=\"button-holder3\">\r\n                    <CCol className=\"p-header-3 col-md-9 mt-2\">\r\n                       \r\n                    </CCol>\r\n\r\n                    <CCol className=\"col-md-3\">\r\n                    <CButton className=\"tiny-buttons1\" onClick={() => history.push({ pathname: '/dashboard/Projects/assigned-projects' })}>View all</CButton>\r\n                    </CCol>\r\n                    </CRow>}\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ProjectsTableDashboard;\r\n","import React, { useState } from \"react\";\r\nimport { CButton, CCard, CCardBody, CAlert, CRow, CCol } from \"@coreui/react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchWbsThunk } from \"../../store/slices/WbsSlice\";\r\nimport WbsModal from \"../../pages/wbs-board/wbs-modal\";\r\n// import { fetchUserWiseWbsThunk } from '../../store/slices/WbsSlice';\r\nimport { API, USER_ID } from \"../../Config\";\r\n\r\nconst AssignedProjectsDashboard = () => {\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const wbs = useSelector((state) => {\r\n    // state.wbs.data\r\n    var temp_data = [];\r\n    state.wbs.data.forEach((element) => {\r\n      if (element.assignee.id == sessionStorage.getItem(USER_ID)) {\r\n        temp_data.push(element);\r\n        // console.log(element)\r\n      }\r\n    });\r\n    return temp_data;\r\n  });\r\n  console.log(wbs);\r\n  const [updatedData, setUpdatedData] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const [modalData, setModalData] = useState(null);\r\n  const editWbsModal = (value) => {\r\n    API.get(\"wbs/time-card/list/\" + value + \"/\").then((res) => {\r\n      console.log(\"time-card list result\", res);\r\n      setUpdatedData(res.data);\r\n    });\r\n    setModalData(wbs.find((element) => element.id == value));\r\n    setModal(true);\r\n  };\r\n  const toggle = () => {\r\n    setModalData(null);\r\n    setModal(!modal);\r\n  };\r\n\r\n  const onWbsUpdate = () => {\r\n    setModal(false);\r\n    dispatch(fetchWbsThunk(sessionStorage.getItem(USER_ID)));\r\n    setModalData(null);\r\n  };\r\n\r\n  React.useEffect(() => { dispatch(fetchWbsThunk(sessionStorage.getItem(USER_ID)));}, []);\r\n  return (\r\n    <>\r\n      <div className=\"main-holder-projects\">\r\n        <h3 className=\"projectsHeader\">WBS Board({wbs.length})</h3>\r\n\r\n        <div className=\"card-holder1\">\r\n          {wbs != undefined &&\r\n            wbs.slice(0, 3).map((item, idx) => (\r\n              // item.assignee.id == sessionStorage.getItem(USER_ID) &&\r\n              <CCard\r\n                className=\"project-card1\"\r\n                key={idx}\r\n                onClick={() => editWbsModal(item.id)}\r\n              >\r\n                <CCardBody>\r\n                  <h5 className=\"card-details1\">\r\n                    <span className=\"p-header-3\">Project: </span>{\" \"}\r\n                    {item.project.sub_task}\r\n                  </h5>\r\n                  <h6 className=\"card-details1\">\r\n                    <span className=\"p-header-3\">WBS Title:</span> {item.title}\r\n                  </h6>\r\n                  <h6 className=\"card-details1\">\r\n                    <span className=\"p-header-3\">WBS Description:</span>{\" \"}\r\n                    {item.description}\r\n                  </h6>\r\n                  <h6 className=\"card-details1\">\r\n                    <span className=\"p-header-3\">End Date :</span>{\" \"}\r\n                    {item.end_date}\r\n                  </h6>\r\n                </CCardBody>\r\n              </CCard>\r\n            ))}\r\n          {/**If no wbs */}\r\n          {wbs == undefined || wbs == 0 ? (\r\n            <CAlert className=\"no-value-show-alert\" color=\"primary\">\r\n              Currently there are no WBS assigned to you\r\n            </CAlert>\r\n          ) : null}\r\n        </div>\r\n        {wbs != undefined && (\r\n          <CRow className=\"button-holder3\">\r\n            <CCol className=\"p-header-3 col-md-9 mt-2\">\r\n             \r\n            </CCol>\r\n\r\n            <CCol className=\"col-md-3\">\r\n              <CButton\r\n                className=\"tiny-buttons1\"\r\n                onClick={() =>\r\n                  history.push({ pathname: \"/dashboard/WBS/board\" })\r\n                }\r\n              >\r\n                View all\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n        )}\r\n      </div>\r\n      {modalData != null && (\r\n        <WbsModal\r\n          show={modal}\r\n          onClose={onWbsUpdate}\r\n          toggle={toggle}\r\n          data={modalData}\r\n          timeCardList={updatedData}\r\n        ></WbsModal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default AssignedProjectsDashboard;\r\n","import React, { Suspense } from \"react\";\r\nimport { CCol, CContainer, CFade, CRow, CAlert, CButton } from \"@coreui/react\";\r\nimport innerRoutes from \"../../routes/DashboardRoutes\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./dashboard.css\";\r\nimport ScheduledMeetings from \"../../components/scheduledMeetings/scheduledMeets\";\r\nimport EvmsShow from \"../../components/evms/evmsTable\";\r\nimport ProjectTables from \"../../components/projects-table/projectsTable\";\r\nimport AssignedToMe from \"../../components/assignedProjects/assignedProjects\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { has_permission } from \"../../helper\";\r\nconst loading = (\r\n  <div className=\"pt-3 text-center\">\r\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\r\n  </div>\r\n);\r\n\r\nconst Dashboard = () => {\r\n let history = useHistory();\r\n  let location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  React.useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    console.log(\"dashboard mounted\", location.state);\r\n    if (location.state?.from == \"login\") {\r\n      enqueueSnackbar(\"Welcome \", { variant: \"success\" });\r\n    }\r\n    if (location.state?.message) {\r\n      console.log(\"message\", location.state.message);\r\n      enqueueSnackbar(location.state.message, { variant: \"warning\" });\r\n    }\r\n    //console.log(new Date(JSON.parse(sessionStorage.getItem('TOKEN')).time).toISOString())\r\n  }, []);\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        {/**Row for showing da tables */}\r\n        <CRow>\r\n        {has_permission('projects.add_projects') &&\r\n          <CAlert className=\"no-value-show-alert text-center\" color=\"primary\">\r\n            Click here to create a New Project\r\n            <div>\r\n              <CButton\r\n                className=\"evms-from-details\"\r\n                onClick={() =>\r\n                  history.push({ pathname: \"/dashboard/Projects/create-new-project\" })\r\n                }\r\n              >\r\n                Create Project\r\n              </CButton>\r\n            </div>\r\n          </CAlert>}\r\n          <div className=\"col-lg-5 offset-lg-1\">\r\n            <ProjectTables />\r\n          </div>\r\n          <div className=\"col-lg-5\">\r\n            <AssignedToMe />\r\n          </div>\r\n          <div className=\"col-lg-5 offset-lg-1\">\r\n            <ScheduledMeetings />\r\n          </div>\r\n          {has_permission(\"evms.view_evms\") && (\r\n            <div className=\"col-lg-5 \">\r\n              <EvmsShow />\r\n            </div>\r\n          )}\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Dashboard);\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLinearProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiLinearProgress', slot);\n}\nconst linearProgressClasses = generateUtilityClasses('MuiLinearProgress', ['root', 'colorPrimary', 'colorSecondary', 'determinate', 'indeterminate', 'buffer', 'query', 'dashed', 'dashedColorPrimary', 'dashedColorSecondary', 'bar', 'barColorPrimary', 'barColorSecondary', 'bar1Indeterminate', 'bar1Determinate', 'bar1Buffer', 'bar2Indeterminate', 'bar2Buffer']);\nexport default linearProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4,\n    _t5,\n    _t6;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useTheme from '../styles/useTheme';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getLinearProgressUtilityClass } from './linearProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TRANSITION_DURATION = 4; // seconds\n\nconst indeterminate1Keyframe = keyframes(_t || (_t = _`\n  0% {\n    left: -35%;\n    right: 100%;\n  }\n\n  60% {\n    left: 100%;\n    right: -90%;\n  }\n\n  100% {\n    left: 100%;\n    right: -90%;\n  }\n`));\nconst indeterminate2Keyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    left: -200%;\n    right: 100%;\n  }\n\n  60% {\n    left: 107%;\n    right: -8%;\n  }\n\n  100% {\n    left: 107%;\n    right: -8%;\n  }\n`));\nconst bufferKeyframe = keyframes(_t3 || (_t3 = _`\n  0% {\n    opacity: 1;\n    background-position: 0 -23px;\n  }\n\n  60% {\n    opacity: 0;\n    background-position: 0 -23px;\n  }\n\n  100% {\n    opacity: 1;\n    background-position: -200px -23px;\n  }\n`));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, variant],\n    dashed: ['dashed', `dashedColor${capitalize(color)}`],\n    bar1: ['bar', `barColor${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar1Indeterminate', variant === 'determinate' && 'bar1Determinate', variant === 'buffer' && 'bar1Buffer'],\n    bar2: ['bar', variant !== 'buffer' && `barColor${capitalize(color)}`, variant === 'buffer' && `color${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar2Indeterminate', variant === 'buffer' && 'bar2Buffer']\n  };\n  return composeClasses(slots, getLinearProgressUtilityClass, classes);\n};\n\nconst getColorShade = (theme, color) => {\n  if (color === 'inherit') {\n    return 'currentColor';\n  }\n\n  if (theme.vars) {\n    return theme.vars.palette.LinearProgress[`${color}Bg`];\n  }\n\n  return theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.5);\n};\n\nconst LinearProgressRoot = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`], styles[ownerState.variant]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'block',\n  height: 4,\n  zIndex: 0,\n  // Fix Safari's bug during composition of different paint.\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  backgroundColor: getColorShade(theme, ownerState.color)\n}, ownerState.color === 'inherit' && ownerState.variant !== 'buffer' && {\n  backgroundColor: 'none',\n  '&::before': {\n    content: '\"\"',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'currentColor',\n    opacity: 0.3\n  }\n}, ownerState.variant === 'buffer' && {\n  backgroundColor: 'transparent'\n}, ownerState.variant === 'query' && {\n  transform: 'rotate(180deg)'\n}));\nconst LinearProgressDashed = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Dashed',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.dashed, styles[`dashedColor${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => {\n  const backgroundColor = getColorShade(theme, ownerState.color);\n  return _extends({\n    position: 'absolute',\n    marginTop: 0,\n    height: '100%',\n    width: '100%'\n  }, ownerState.color === 'inherit' && {\n    opacity: 0.3\n  }, {\n    backgroundImage: `radial-gradient(${backgroundColor} 0%, ${backgroundColor} 16%, transparent 42%)`,\n    backgroundSize: '10px 10px',\n    backgroundPosition: '0 -23px'\n  });\n}, css(_t4 || (_t4 = _`\n    animation: ${0} 3s infinite linear;\n  `), bufferKeyframe));\nconst LinearProgressBar1 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar1',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar1Indeterminate, ownerState.variant === 'determinate' && styles.bar1Determinate, ownerState.variant === 'buffer' && styles.bar1Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : (theme.vars || theme).palette[ownerState.color].main\n}, ownerState.variant === 'determinate' && {\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}, ownerState.variant === 'buffer' && {\n  zIndex: 1,\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t5 || (_t5 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n    `), indeterminate1Keyframe));\nconst LinearProgressBar2 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar2',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar2Indeterminate, ownerState.variant === 'buffer' && styles.bar2Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left'\n}, ownerState.variant !== 'buffer' && {\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : (theme.vars || theme).palette[ownerState.color].main\n}, ownerState.color === 'inherit' && {\n  opacity: 0.3\n}, ownerState.variant === 'buffer' && {\n  backgroundColor: getColorShade(theme, ownerState.color),\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t6 || (_t6 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;\n    `), indeterminate2Keyframe));\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLinearProgress'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    value,\n    valueBuffer,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const theme = useTheme();\n  const rootProps = {};\n  const inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      let transform = value - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar1.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      let transform = (valueBuffer || 0) - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar2.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(LinearProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other, {\n    children: [variant === 'buffer' ? /*#__PURE__*/_jsx(LinearProgressDashed, {\n      className: classes.dashed,\n      ownerState: ownerState\n    }) : null, /*#__PURE__*/_jsx(LinearProgressBar1, {\n      className: classes.bar1,\n      ownerState: ownerState,\n      style: inlineStyles.bar1\n    }), variant === 'determinate' ? null : /*#__PURE__*/_jsx(LinearProgressBar2, {\n      className: classes.bar2,\n      ownerState: ownerState,\n      style: inlineStyles.bar2\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default LinearProgress;","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    CForm,\r\n    CLabel,\r\n    CInput,\r\n    CCardBody,\r\n    CCard,\r\n    CButton,\r\n    CContainer,\r\n    CCol,CRow,\r\n} from \"@coreui/react\";\r\nimport \"./uploadForm.css\";\r\nimport { API, USER_ID } from \"../../Config\";\r\nimport { arrayRemoveItem } from \"../../helper\";\r\nimport swal from \"sweetalert\";\r\nimport {useRef} from 'react';\r\n\r\nconst WBSFileUpload = (props) => {\r\n    const inputRef = useRef();\r\n    const [selectedFile,setSelectedFile] = useState()\r\n    const setSelectedProject = useState()\r\n    const [files, setFiles] = useState(props.files)\r\n    const [fileAvatars, setFileAvatars] = useState([])\r\n    const upload = () => {\r\n        let formData = new FormData()\r\n        // formData.append('project', selectedProject.data.project.id)\r\n        formData.append('files', files.length)\r\n        formData.append('upload_by', sessionStorage.getItem(USER_ID))\r\n        Array.from(files).forEach((file, idx) => {\r\n            formData.append('file' + (idx + 1), file)\r\n        })\r\n        API.post('project/shared/document/create/', formData).then((res) => {\r\n            setSelectedProject(null)\r\n            setFileAvatars([])\r\n            setFiles([])\r\n            swal('Uploaded', 'Files are uploaded', 'success')\r\n        })\r\n    }\r\n    function onFileChange(event) {\r\n        let file = event.target.files[0]\r\n        event.target.value=null\r\n        setFiles([...files, file]);\r\n        setFileAvatars([...fileAvatars, URL.createObjectURL(file)]);\r\n        props.setFiles([...files, file])\r\n    }\r\n    function remove_file(index) {\r\n        console.log('on remove',arrayRemoveItem(files, files[index]))\r\n        setFileAvatars(arrayRemoveItem(fileAvatars, fileAvatars[index]))\r\n        setFiles(arrayRemoveItem(files, files[index]))\r\n        props.setFiles(arrayRemoveItem(files, files[index]))\r\n        // inputRef.current.value = null;\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <CCard className=\"mt-2 upload-docs\">\r\n                <CCardBody>\r\n                    <CContainer>\r\n                        {/**Project Name */}\r\n                        \r\n                        {/**upload files box */}\r\n                        <CCol className=\"mb-1\">\r\n                            <CLabel htmlFor=\"attachments\" className=\"custom-label-5\">\r\n                                Upload Documents\r\n                            </CLabel>\r\n                            <CLabel className=\"custom-file-upload\">\r\n                                <CInput\r\n                                    type=\"file\"\r\n                                    id=\"file\"\r\n                                    ref={inputRef}\r\n                                    className=\"form-control form-control-file\"\r\n                                    onChange={(event) => onFileChange(event)}\r\n                                    accept=\".xlsx, .xls, .csv, .pdf, image/*, application/gzip, .zip, .tar, .txt, .doc, .docx, .pptx, .ppt\"\r\n                                />\r\n                                <img\r\n                                    src={\"assets/icons/upload-thin.svg\"}\r\n                                    alt=\"\"\r\n                                    className=\"upload-icon\"\r\n                                // onClick={()=>{document.getElementById('file').click()}}\r\n                                />\r\n                            </CLabel>\r\n                        </CCol>\r\n                        <CCol>\r\n                        {/* <CButton\r\n                            type=\"button\" \r\n                            onClick = {upload}\r\n                            color=\"primary\"\r\n                          >\r\n                            Upload\r\n                          </CButton> */}\r\n                        </CCol>\r\n                        {/**display uploaded files */}\r\n                        <div className=\"mb-2\">\r\n                            <div className=\"row\">\r\n                                {fileAvatars.map((file, idx) => (\r\n                                    <div key={idx} className=\"col-md-6 col-sm-6 col-sm-4\">\r\n                                        <div className=\"file-attached-ongoing rounded-pill\">\r\n                                            <CButton className=\"remove-file-ongoing\" type=\"button\" onClick={() => { remove_file(idx) }}>\r\n                                                <img\r\n                                                    src={\"assets/icons/icons8-close-64-blue.svg\"}\r\n                                                    className=\"close-icon-size\"\r\n                                                />\r\n                                            </CButton>\r\n                                            {files[idx].name}\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        {/**Submit buttons */}\r\n                        {/* <div className=\"mb-3 mt-4\">\r\n                            <div className=\"project-form-button-holders \">\r\n                                <CButton className=\"profile-form-btn update-profile\" type=\"button\" onClick={upload}>Upload Documents</CButton>\r\n                                <CButton className=\"profile-form-btn cancel-update\">Cancel</CButton>\r\n                            </div>\r\n                        </div> */}\r\n\r\n                    </CContainer>\r\n                </CCardBody>\r\n            </CCard>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WBSFileUpload;\r\n","import {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CForm,\r\n  CLabel,\r\n  CInput,\r\n  CButton,\r\n  CModal,\r\n  CModalBody,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CTextarea,\r\n} from \"@coreui/react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { form, useFormik } from \"formik\";\r\nimport { API, BASE_URL, USER_ID } from \"../../Config\";\r\nimport swal from \"sweetalert\";\r\nimport {\r\n  fetchProjectsAssigneeThunk,\r\n  fetchProjectsForPMThunk,\r\n  fetchProjectsThunk,\r\n} from \"../../store/slices/ProjectsSlice\";\r\nimport { fetchWbsThunk } from \"../../store/slices/WbsSlice\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport moment from \"moment\";\r\nimport { has_permission } from \"../../helper.js\";\r\nimport WBSFileUpload from \"../../components/wbs-docs-upload/WBSFileUpload\";\r\n\r\nconst WbsModal = (props) => {\r\n  console.log(\"props wbs modal: \", props);\r\n  const [deliverableView, setDeliverableView] = useState(true);\r\n  const [hrsWorked, setHrsWorked] = useState(true);\r\n  const [plannedHours, setPlannedHours] = useState();\r\n  const [actualHour, setactualHour] = useState();\r\n  const [remaininghrs, setremaininghrs] = useState();\r\n  const [datecheck, setdatecheck] = useState();\r\n  const [balancehrs, setbalancehrs] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n  const wbsStatusArray = [\r\n    {\r\n      title: \"To Do\",\r\n      status: 1,\r\n    },\r\n    {\r\n      title: \"Ongoing\",\r\n      status: 2,\r\n    },\r\n    {\r\n      title: \"Done\",\r\n      status: 3,\r\n    },\r\n  ];\r\n\r\n  // const reset_form = () => {\r\n  //     formWbsUpdate.resetForm();\r\n  //     selectProjectRef.current.select.clearValue();\r\n  //     selectAssigneRef.current.select.clearValue();\r\n  //     selectTaskTitleRef.current.select.clearValue();\r\n  //     setAssigneeList([]);\r\n  //   };\r\n\r\n  React.useEffect(() => {\r\n    API.get(\r\n      \"project/assignee/list/\" + props.data.project.work_package_index + \"/\"\r\n    ).then((res) => {\r\n      let ep = 0;\r\n      for (let i = 0; i < res.data.data.length; i++) {\r\n        console.log(\"id\", res.data.data[i].assignee.id);\r\n        if (props.data.assignee.id == res.data.data[i].assignee.id) {\r\n          ep = res.data.data[i].estimated_person;\r\n        }\r\n      }\r\n\r\n      const start = props.data.project.start_date;\r\n      const end = props.data.project.planned_delivery_date;\r\n\r\n      const moment = require(\"moment\");\r\n      let total_days = moment(end).diff(moment(start), \"days\");\r\n      total_days = total_days + 1;\r\n\r\n      let total_hrs = total_days * 8;\r\n\r\n      const tomorrow = new Date(start);\r\n\r\n      let count = 0;\r\n      for (let i = 0; i < total_days; i++) {\r\n        tomorrow.setDate(tomorrow.getDate() + 1);\r\n\r\n        if (tomorrow.getDay() == 5 || tomorrow.getDay() == 6) {\r\n          count = count + 1;\r\n        }\r\n      }\r\n\r\n      count = count * 8;\r\n      total_hrs = total_hrs - count;\r\n\r\n      let total_spent = 0;\r\n      for (const item in props.timeCardList.data) {\r\n        total_spent += parseFloat(props.timeCardList.data[item].hours_today);\r\n      }\r\n\r\n      setactualHour(Number(total_spent).toFixed(2));\r\n\r\n      total_hrs = total_hrs * ep;\r\n      setPlannedHours(Number(total_hrs).toFixed(2));\r\n\r\n      setremaininghrs(Number(total_hrs - total_spent).toFixed(2));\r\n    });\r\n\r\n    const lastDate = props.data.end_date;\r\n\r\n    const currentDate = new Date();\r\n    const day = `${currentDate.getFullYear()}-${\r\n      currentDate.getMonth() + 1\r\n    }-${currentDate.getDate()}`;\r\n    const cday = day.split(\"-\");\r\n\r\n    const endDateArray = lastDate.split(\"-\");\r\n\r\n    const difference = moment(props.data.end_date, \"YYYY-MM-DD\").diff(\r\n      moment(currentDate, \"YYYY-MM-DD\"),\r\n      \"days\"\r\n    );\r\n\r\n    setdatecheck(difference);\r\n  }, [props]);\r\n\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n  const updateWbs = (data, { setSubmitting }) => {\r\n    let form_data = new FormData()\r\n    form_data.append('total_files',files.length)\r\n    for (const property in formWbsUpdate.values) {\r\n      form_data.append(property,formWbsUpdate.values[property])\r\n    }\r\n    for (let index=1;index<=files.length;index++){\r\n      form_data.append('file'+index,files[index-1])\r\n    }\r\n    for (var pair of form_data.entries()) {\r\n      console.log(pair[0]+ ', ' + pair[1]); \r\n    }\r\n    if (datecheck >= 0) {\r\n      API.put(\"wbs/update/\" + props.data.id + \"/\", form_data)\r\n        .then((res) => {\r\n          if (res.status == 200 && res.data.success == \"True\") {\r\n            dispatch(fetchProjectsForPMThunk(sessionStorage.getItem(USER_ID)));\r\n            dispatch(fetchProjectsThunk(sessionStorage.getItem(USER_ID)));\r\n            dispatch(fetchWbsThunk(sessionStorage.getItem(USER_ID)));\r\n            swal({\r\n              title: \"Good job! WBS updated successfully!\",\r\n              text: \"\",\r\n              icon: \"success\",\r\n            });\r\n            props.onClose();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      setSubmitting(false);\r\n      enqueueSnackbar(\"Planned Delivery date is over! \", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const validateWbsCreateForm = (values) => {\r\n    const errors = {};\r\n    if (!values.title) errors.title = \"Title is required!\";\r\n    if (!values.actual_work_done)\r\n      errors.actual_work_done =\r\n        \"Actual work done today is required! (250 charracters)\";\r\n    return errors;\r\n  };\r\n  const [files, setFiles] = useState([]);\r\n  const setDocFiles = (files) => {\r\n    setFiles(files);\r\n  };\r\n  const formWbsUpdate = useFormik({\r\n    initialValues: {\r\n      project: props.data.project.id,\r\n      assignee: props.data.assignee.id,\r\n      title: props.data.title,\r\n      details: props.data.project.description,\r\n      status: props.data.status,\r\n      description: props.data.description,\r\n      start_date: props.data.start_date,\r\n      end_date: props.data.end_date,\r\n      hours_worked: props.data.hours_worked,\r\n      progress: props.data.progress,\r\n      comments: props.data.comments,\r\n      deliverable: props.data.deliverable,\r\n      date_updated: \"\",\r\n      actual_work_done: \"\",\r\n      remaining_hours: \"\",\r\n    },\r\n    validateOnChange: true,\r\n    validateOnBlur: true,\r\n    validate: validateWbsCreateForm,\r\n    onSubmit: updateWbs,\r\n  });\r\n\r\n  // const total_hours = () => {\r\n  //   console.log(\"ep\", props.data);\r\n  //   const start = props.data.start_date;\r\n  //   const end = props.data.end_date;\r\n\r\n  //   const moment = require(\"moment\");\r\n  //   const total_days = moment(end).diff(moment(start), \"days\");\r\n\r\n  //   console.log(\"dddddddd\", total_days);\r\n\r\n  //   let total_hrs = total_days * 24;\r\n\r\n  //   console.log(\"11111\", total_hrs);\r\n  //   console.log(\"1\", end);\r\n\r\n  //   const startd = new Date(start).toString();\r\n  //   console.log(\"string\", startd);\r\n  //   const tomorrow = new Date(start);\r\n\r\n  //   let count = 0;\r\n  //   for (let i = 0; i < total_days; i++) {\r\n  //     tomorrow.setDate(tomorrow.getDate() + 1);\r\n  //     if (tomorrow.getDay() == 5 || tomorrow.getDay() == 6) {\r\n  //       count = count + 1;\r\n  //     }\r\n  //   }\r\n  //   count = count * 24;\r\n  //   total_hrs = total_hrs - count;\r\n\r\n  //   let total_spent = 0;\r\n  //   for (const item in props.timeCardList.data) {\r\n  //     console.log(\"input hours\", props.timeCardList.data[item].hours_today);\r\n\r\n  //     total_spent += parseFloat(props.timeCardList.data[item].hours_today);\r\n  //   }\r\n  //   console.log(\"spent\", total_spent);\r\n  //   //setactualHour(Number(total_spent).toFixed(2));\r\n\r\n  //   const remaining_hrs = plannedHours - total_spent;\r\n  //   const hours = {\r\n  //     allocated_hours: total_hrs,\r\n  //     spent_hours: total_spent,\r\n  //     remaining_hours: remaining_hrs,\r\n  //   };\r\n  //   return hours;\r\n  // };\r\n\r\n  function is_form_submitting() {\r\n    console.log(formWbsUpdate.isSubmitting, formWbsUpdate.isValidating);\r\n    //total_hours();\r\n    if (formWbsUpdate.isSubmitting && !formWbsUpdate.isValidating) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function download(dataurl, filename) {\r\n    const link = document.createElement(\"a\");\r\n    document.body.appendChild(link);\r\n    link.href = dataurl;\r\n    link.target=\"_blank\"\r\n    link.download = \"\";\r\n    link.click();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CModal\r\n        closeOnBackdrop={false}\r\n        show={props.show}\r\n        onClose={props.toggle}\r\n        size=\"xl\"\r\n      >\r\n        <CModalHeader closeButton>\r\n          {props.data.project &&\r\n            props.data.project.task_delivery_order.title + \" / \"}\r\n          {props.data.project && props.data.project.sub_task + \" / \"}\r\n          {props.data.project && props.data.project.task_title}\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            <div className=\"col-lg-8 mb-3 border-right\">\r\n              <CForm>\r\n                <CRow>\r\n                  <div className=\"col-lg-12 mb-3\">\r\n                    <p>\r\n                      <b>Project Details :</b> {props.data.project.description}\r\n                    </p>\r\n                  </div>\r\n                </CRow>\r\n                <CRow>\r\n                  <div className=\"col-lg-12 mb-3\">\r\n                    <CLabel className=\"custom-label-wbs5\">Title</CLabel>\r\n                    <CInput\r\n                      id=\"title\"\r\n                      name=\"title\"\r\n                      maxlength=\"20\"\r\n                      className=\"custom-forminput-5\"\r\n                      onChange={formWbsUpdate.handleChange}\r\n                      value={formWbsUpdate.values.title}\r\n                      \r\n                    />\r\n                    <div className=\"float-right\">\r\n                      {formWbsUpdate.values.title.length}/20\r\n                    </div>\r\n                    {formWbsUpdate.errors.title && (\r\n                      <p\r\n                        className=\"error\"\r\n                        style={{ fontSize: \"14px !important\" }}\r\n                      >\r\n                        {formWbsUpdate.errors.title}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                </CRow>\r\n                <CRow>\r\n                  <div className=\"col-md-12 mb-3\">\r\n                    <CLabel className=\"custom-label-wbs5\">Description</CLabel>\r\n                    <CTextarea\r\n                      maxlength=\"300\"\r\n                      id=\"description\"\r\n                      name=\"description\"\r\n                      className=\"custom-forminput-5 text-box-height\"\r\n                      onChange={formWbsUpdate.handleChange}\r\n                      value={formWbsUpdate.values.description}\r\n                    ></CTextarea>\r\n                    <div className=\"float-right\">\r\n                      {formWbsUpdate.values.description.length}/300\r\n                    </div>\r\n                  </div>\r\n                </CRow>\r\n                <CRow>\r\n                  {has_permission(\"projects.add_projects\") && (\r\n                    <div className=\"col-lg-6 mb-3\">\r\n                      <CLabel className=\"custom-label-wbs5\">Start date</CLabel>\r\n                      <CInput\r\n                        id=\"start_date\"\r\n                        name=\"start_date\"\r\n                        type=\"date\"\r\n                        className=\"custom-forminput-5\"\r\n                        onChange={formWbsUpdate.handleChange}\r\n                        value={formWbsUpdate.values.start_date}\r\n                      ></CInput>\r\n                    </div>\r\n                  )}\r\n                  {has_permission(\"projects.add_projects\") && (\r\n                    <div className=\"col-lg-6 mb-3\">\r\n                      <CLabel className=\"custom-label-wbs5\">End date</CLabel>\r\n                      <CInput\r\n                        id=\"end_date\"\r\n                        name=\"end_date\"\r\n                        type=\"date\"\r\n                        className=\"custom-forminput-5\"\r\n                        onChange={formWbsUpdate.handleChange}\r\n                        value={formWbsUpdate.values.end_date}\r\n                        // disabled\r\n                      ></CInput>\r\n                    </div>\r\n                  )}\r\n\r\n                  {!has_permission(\"projects.add_projects\") && (\r\n                    <div className=\"col-lg-6 mb-3\">\r\n                      <CLabel className=\"custom-label-wbs5\">Start date</CLabel>\r\n                      <CInput\r\n                        id=\"start_date\"\r\n                        name=\"start_date\"\r\n                        type=\"date\"\r\n                        className=\"custom-forminput-5\"\r\n                        onChange={formWbsUpdate.handleChange}\r\n                        value={formWbsUpdate.values.start_date}\r\n                        disabled\r\n                      ></CInput>\r\n                    </div>\r\n                  )}\r\n                  {!has_permission(\"projects.add_projects\") && (\r\n                    <div className=\"col-lg-6 mb-3\">\r\n                      <CLabel className=\"custom-label-wbs5\">End date</CLabel>\r\n                      <CInput\r\n                        id=\"end_date\"\r\n                        name=\"end_date\"\r\n                        type=\"date\"\r\n                        className=\"custom-forminput-5\"\r\n                        onChange={formWbsUpdate.handleChange}\r\n                        value={formWbsUpdate.values.end_date}\r\n                        disabled\r\n                      ></CInput>\r\n                    </div>\r\n                  )}\r\n                </CRow>\r\n                {/*Actual work today */}\r\n                <CRow>\r\n                  <div className=\"col-lg-12 mb-3\">\r\n                    <CLabel className=\"custom-label-wbs5\">\r\n                      Actual Work Today\r\n                    </CLabel>\r\n                    <CInput\r\n                      id=\"actual_work_done\"\r\n                      type=\"text\"\r\n                      name=\"actual_work_done\"\r\n                      className=\"custom-forminpput-5\"\r\n                      onChange={(e) => {\r\n                        formWbsUpdate.setFieldValue(\r\n                          \"actual_work_done\",\r\n                          e.target.value\r\n                        );\r\n                        if (\r\n                          e.target.value == null ||\r\n                          e.target.value.length == 0\r\n                        ) {\r\n                          setHrsWorked(true);\r\n                        } else {\r\n                          setHrsWorked(false);\r\n                        }\r\n                      }}\r\n                      value={formWbsUpdate.values.actual_work_done}\r\n                    ></CInput>\r\n                    {formWbsUpdate.errors.actual_work_done && (\r\n                      <p\r\n                        className=\"error\"\r\n                        style={{ fontSize: \"14px !important\" }}\r\n                      >\r\n                        {formWbsUpdate.errors.actual_work_done}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                </CRow>\r\n                <CRow>\r\n                  <div className=\"col-lg-12 mb-3\">\r\n                    <CLabel className=\"custom-label-wbs5\">Hours worked</CLabel>\r\n                    <CInput\r\n                      id=\"hours_worked\"\r\n                      name=\"hours_worked\"\r\n                      type=\"number\"\r\n                      className=\"custom-forminput-5\"\r\n                      onChange={formWbsUpdate.handleChange}\r\n                      value={formWbsUpdate.values.hours_worked}\r\n                      disabled={hrsWorked}\r\n                      min=\"0.00\"\r\n                    ></CInput>\r\n                  </div>\r\n                </CRow>\r\n                <CRow>\r\n                  <div className=\"col-lg-12 mb-3\">\r\n                    <CLabel className=\"custom-label-wbs5\">Comments</CLabel>\r\n                    <CTextarea\r\n                      maxLength='200'\r\n                      id=\"comments\"\r\n                      name=\"comments\"\r\n                      className=\"custom-forminput-5\"\r\n                      onChange={formWbsUpdate.handleChange}\r\n                      value={formWbsUpdate.values.comments}\r\n                    ></CTextarea>\r\n                    <div className=\"float-right\">\r\n                      {formWbsUpdate.values.comments.length}/200\r\n                    </div>\r\n                  </div>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol className=\"col-lg-6\">\r\n                    <WBSFileUpload files={files} setFiles={setDocFiles} />\r\n                  </CCol>\r\n                  <CCol className=\"col-lg-6\">\r\n                    <div>\r\n                      Uploaded Documents\r\n                    </div>\r\n                    <ul>\r\n                    {props.data.files.length>0 && Array.from(props.data.files).map((item,idx)=>(\r\n                      <li><a key={idx} href=\"javascript:void(0);\" style={{textDecoration:'underline'}} onClick={()=>download(BASE_URL+item.file,'test.jpg')}>{idx+1}. {String(item.file).split('/').pop().slice(0,30)}</a></li>\r\n                    ))}\r\n                    </ul>\r\n                    \r\n                  </CCol>\r\n                </CRow>\r\n                {props.data.assignee.id == sessionStorage.getItem(USER_ID) && (\r\n                  <div>\r\n                    {is_form_submitting() == true ? (\r\n                      <LinearProgress />\r\n                    ) : (\r\n                      <div>\r\n                        {props.data.status != 3 && props.data.status != 4 && (\r\n                          <CButton\r\n                            type=\"button\"\r\n                             //onClick= {handleUpdate()}\r\n                            onClick={formWbsUpdate.handleSubmit}\r\n                            color=\"primary\"\r\n                          >\r\n                            Update\r\n                          </CButton>\r\n                        )}{\" \"}\r\n                        <CButton color=\"secondary\" onClick={props.toggle}>\r\n                          Cancel\r\n                        </CButton>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </CForm>\r\n            </div>\r\n\r\n            <CRow className=\"col-lg-4 mb-3\">\r\n              <div>\r\n                <CCol md=\"12\">\r\n                  <p>\r\n                    Assignee:\r\n                    <br></br>\r\n                    {/* Pial Noman */}\r\n                    <span className=\"wbs-reporter-name\">\r\n                      {props.data.assignee?.first_name != undefined &&\r\n                        props.data.assignee.first_name +\r\n                          \" \" +\r\n                          props.data.assignee.last_name}\r\n                    </span>\r\n                  </p>\r\n                </CCol>\r\n                <CCol md=\"12\">\r\n                  <p>\r\n                    Created By:\r\n                    <br></br>\r\n                    {/* Pial Noman */}\r\n                    <span className=\"wbs-reporter-name\">\r\n                      {props.data.reporter?.first_name != undefined &&\r\n                        props.data.reporter.first_name +\r\n                          \" \" +\r\n                          props.data.reporter.last_name}\r\n                    </span>\r\n                  </p>\r\n                </CCol>\r\n                <CCol md=\"12\">\r\n                  <p className=\"custom-label-wbs5\">\r\n                    Planned Hours :<br></br>\r\n                    {Number(parseFloat(plannedHours)).toFixed(2)}\r\n                  </p>\r\n                </CCol>\r\n                <CCol md=\"12\">\r\n                  <p>\r\n                    Actual Hours :<br></br>\r\n                    {Number(actualHour).toFixed(2)}\r\n                  </p>\r\n                </CCol>\r\n                <CCol md=\"12\">\r\n                  <p>\r\n                    Balance hours:\r\n                    <br></br>\r\n                    {remaininghrs == null ? (\r\n                      <LinearProgress />\r\n                    ) : (\r\n                      Number(remaininghrs).toFixed(2)\r\n                    )}\r\n                  </p>\r\n                </CCol>\r\n\r\n                {/**actual work list show */}\r\n                <CCol md=\"12\">\r\n                  <div className=\"task-list\">\r\n                    <p>Actual Worked :</p>\r\n                    <ol className=\"task-list-show\">\r\n                      {props.timeCardList?.data != undefined\r\n                        ? Array.from(props.timeCardList.data).map((item) => (\r\n                            <li className=\"task-list-show-item\">\r\n                              {item.actual_work_done +\r\n                                \" ➤ \" +\r\n                                Number(item.hours_today).toFixed(2) +\r\n                                \" hr(s)\"}\r\n                                <p>@ {item.date_updated} </p>\r\n                            </li>\r\n                          ))\r\n                        : \"No task has been done so far.\"}\r\n                    </ol>\r\n                  </div>\r\n                </CCol>\r\n              </div>\r\n            </CRow>\r\n          </CRow>\r\n        </CModalBody>\r\n      </CModal>\r\n    </>\r\n  );\r\n};\r\nexport default WbsModal;\r\n"],"sourceRoot":""}