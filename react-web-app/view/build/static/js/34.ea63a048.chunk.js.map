{"version":3,"sources":["pages/WBS-create/createWBS.js","../node_modules/@mui/material/esm/LinearProgress/linearProgressClasses.js","../node_modules/@mui/material/esm/LinearProgress/LinearProgress.js","components/wbs-docs-upload/WBSFileUpload.js"],"names":["CreateNewWBS","dispatch","useDispatch","useState","assigneeList","setAssigneeList","taskList","setTaskList","projects","useSelector","state","temp","Array","from","data","forEach","item","idx","parseFloat","project","remaining_hours","push","value","id","label","sub_task","has_permission","pm_projects","find","ele","getTaskList","option","console","log","sortBy","temp_task_list","assignees","element","assignee","sessionStorage","getItem","USER_ID","selectProjectRef","useRef","selectAssigneRef","selectTaskTitleRef","selectedTask","setSelectedTask","selectedSubTask","setSelectedSubTask","selectedProjectEndDate","setSelectedProjectEndDate","selectedProjectStartDate","setSelectedProjectStartDate","selectedAssignee","setselectedAssignee","getAssigneeList","fetchProjectsAssigneeThunk","work_package_index","temp_array","assignee_ids","first_name","last_name","unshift","useSnackbar","enqueueSnackbar","closeSnackbar","files","setFiles","reset_form","formCreateWbs","resetForm","current","select","clearValue","useFormik","initialValues","work_package_number","reporter","title","description","start_date","end_date","hours_worked","status","progress","comments","deliverable","validateOnChange","validateOnBlur","validate","values","errors","Date","length","onSubmit","setSubmitting","currentDate","cday","getFullYear","getMonth","getDate","split","cdate","moment","parseInt","edate","diff","JSON","stringify","form_data","FormData","property","append","index","entries","pair","API","post","then","res","success","fetchWbsThunk","fetchProjectsThunk","fetchProjectsForPMThunk","swal","catch","err","variant","location","useLocation","React","useEffect","task","all_projects","subtasks","set_selected_project","result","slice","planned_delivery_date","setValues","className","options","onChange","newValue","actionMeta","action","ref","touched","style","color","getOptionLabel","task_title","getOptionValue","Number","planned_hours","toFixed","name","maxlength","handleChange","max","min","type","isMulti","assigneeArray","arr","shift","i","removedValue","splice","setFieldValue","isSubmitting","isValidating","onClick","handleSubmit","getLinearProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_t5","_t6","_excluded","indeterminate1Keyframe","keyframes","indeterminate2Keyframe","bufferKeyframe","getColorShade","theme","vars","palette","LinearProgress","mode","lighten","main","darken","LinearProgressRoot","styled","overridesResolver","props","styles","ownerState","root","capitalize","_extends","position","overflow","display","height","zIndex","colorAdjust","backgroundColor","content","left","top","right","bottom","opacity","transform","LinearProgressDashed","dashed","marginTop","width","backgroundImage","backgroundSize","backgroundPosition","css","LinearProgressBar1","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","transition","transformOrigin","LinearProgressBar2","bar2Indeterminate","bar2Buffer","inProps","useThemeProps","valueBuffer","other","_objectWithoutPropertiesLoose","classes","slots","bar1","bar2","composeClasses","useUtilityClasses","useTheme","rootProps","inlineStyles","undefined","Math","round","direction","process","_jsxs","clsx","role","children","_jsx","WBSFileUpload","inputRef","fileAvatars","setFileAvatars","htmlFor","event","file","target","URL","createObjectURL","onFileChange","accept","src","alt","map","arrayRemoveItem"],"mappings":"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","file":"static/js/34.ea63a048.chunk.js","sourcesContent":["import {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CForm,\r\n  CLabel,\r\n  CInput,\r\n  CButton,\r\n  CSelect,\r\n  CTextarea,\r\n  CAlert,\r\n} from \"@coreui/react\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./createWBS.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchProjectsThunk,\r\n  fetchProjectsAssigneeThunk,\r\n  createWbsThunk,\r\n  fetchWbsThunk,\r\n  fetchProjectsForPMThunk,\r\n} from \"../../store/slices/ProjectsSlice\";\r\nimport Select from \"react-select\";\r\nimport { API, FILE_API, USER_ID } from \"../../Config\";\r\nimport { useFormik } from \"formik\";\r\nimport swal from \"sweetalert\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport sortBy from \"lodash/sortBy\";\r\nimport { has_permission } from \"../../helper.js\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport store from \"../../store/Store\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport moment from \"moment\";\r\nimport WBSFileUpload from \"../../components/wbs-docs-upload/WBSFileUpload\";\r\n\r\nconst CreateNewWBS = () => {\r\n  const dispatch = useDispatch();\r\n \r\n  const remaining_hours = (remaining, total) => {\r\n    return String(parseFloat(total) - parseFloat(remaining));\r\n  };\r\n\r\n  // const [projects,setProjects] = useState([])\r\n  const [assigneeList, setAssigneeList] = useState([]);\r\n  const [taskList, setTaskList] = useState([]);\r\n\r\n  const projects = useSelector((state) => {\r\n    let temp = [];\r\n\r\n    Array.from(state.projects.data).forEach((item, idx) => {\r\n      // console.log('remaining hours ', remaining_hours(item.project.remaining_hours, item.project.planned_hours))\r\n      if (parseFloat(item.project.remaining_hours) > 0) {\r\n        temp.push({\r\n          value: item.project.id,\r\n          label: item.project.sub_task,\r\n          data: item,\r\n        });\r\n      }\r\n    });\r\n    if (has_permission(\"projects.add_projects\")) {\r\n      Array.from(state.projects.pm_projects).forEach((item, idx) => {\r\n        if (parseFloat(item.project.remaining_hours) > 0) {\r\n          // console.log(tempitem.label === item.project.sub_task))\r\n          if (!temp.find((ele) => ele.label === item.project.sub_task)) {\r\n            temp.push({\r\n              value: item.project.id,\r\n              label: item.project.sub_task,\r\n              data: item,\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n    // console.log(\"get project list: \", temp)\r\n    return temp;\r\n  });\r\n  //fetcing projects from store\r\n  const getProjectList = () => {\r\n    let temp = [];\r\n    console.log(\"projects!!!!!!!!\", store.getState().projects.data);\r\n    Array.from(store.getState().projects.data).forEach((item, idx) => {\r\n      // console.log('remaining hours ', remaining_hours(item.project.remaining_hours, item.project.planned_hours))\r\n      if (parseFloat(item.project.remaining_hours) > 0) {\r\n        temp.push({\r\n          value: item.project.id,\r\n          label: item.project.sub_task,\r\n          data: item,\r\n        });\r\n      }\r\n    });\r\n    if (has_permission(\"projects.add_projects\")) {\r\n\r\n      Array.from(store.getState().projects.pm_projects).forEach((item, idx) => {\r\n        console.log(\"ooooooo \", item)\r\n        if (parseFloat(item.project.remaining_hours) > 0) {\r\n          // console.log(tempitem.label === item.project.sub_task))\r\n          if (!temp.find((ele) => ele.label === item.project.sub_task)) {\r\n            temp.push({\r\n              value: item.project.id,\r\n              label: item.project.sub_task,\r\n              data: item,\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n    // console.log(\"get project list: \", temp)\r\n    // return temp\r\n    // setProjects(temp)\r\n  };\r\n\r\n  const getTaskList = (option) => {\r\n    console.log(\"task list###########: \", option);\r\n    if (!has_permission(\"projects.add_projects\")) {\r\n      var temp_task_list = [];\r\n      option.forEach((item) => {\r\n        item.assignees.forEach((element) => {\r\n          console.log(element.assignee.id);\r\n          if (element.assignee.id == sessionStorage.getItem(USER_ID)) {\r\n            temp_task_list.push(item);\r\n          }\r\n        });\r\n      });\r\n      setTaskList(sortBy(temp_task_list, \"task_title\"));\r\n    } else {\r\n      setTaskList(sortBy(option, \"task_title\"));\r\n    }\r\n  };\r\n\r\n  const selectProjectRef = useRef();\r\n  const selectAssigneRef = useRef();\r\n  const selectTaskTitleRef = useRef();\r\n  \r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [selectedSubTask, setSelectedSubTask] = useState({});\r\n  const [selectedProjectEndDate, setSelectedProjectEndDate] = useState(\"\");\r\n  const [selectedProjectStartDate, setSelectedProjectStartDate]= useState(\"\");\r\n  const [selectedAssignee, setselectedAssignee] = useState([]);\r\n\r\n  const handleProjectChange = (newValue, actionMeta) => {\r\n    console.log(`action: ${actionMeta.action}`);\r\n    console.log(\"newValue: \", newValue);\r\n\r\n    if (actionMeta.action == \"select-option\") {\r\n      // getAssigneeList(newValue);\r\n      setSelectedSubTask(newValue);\r\n      getTaskList(newValue.data.subtasks);\r\n      formCreateWbs.setValues({\r\n        project: newValue.data.project.id,\r\n        work_package_number: newValue.data.project.work_package_number,\r\n        assignee: formCreateWbs.values.assignee,\r\n        reporter: sessionStorage.getItem(USER_ID),\r\n        title: formCreateWbs.values.title,\r\n        description: formCreateWbs.values.description,\r\n        start_date: formCreateWbs.values.start_date,\r\n        end_date: formCreateWbs.values.end_date,\r\n        hours_worked: formCreateWbs.values.hours_worked,\r\n        status: formCreateWbs.values.status,\r\n        progress: formCreateWbs.values.progress,\r\n        comments: formCreateWbs.values.comments,\r\n        deliverable: formCreateWbs.values.deliverable,\r\n      });\r\n    } else if (actionMeta.action == \"clear\") {\r\n      setSelectedSubTask(null);\r\n    }\r\n  };\r\n\r\n  const getAssigneeList = (option) => {\r\n    dispatch(fetchProjectsAssigneeThunk(option?.work_package_index));\r\n\r\n    var temp_array = [];\r\n    let assignee_ids=[]\r\n\r\n    option.assignees.forEach((item) => {\r\n      assignee_ids.push(item.assignee.id)\r\n      temp_array.push({\r\n        value: item.assignee.id,\r\n        label: item.assignee.first_name + \" \" + item.assignee.last_name,\r\n        data: item.assignee,\r\n      });\r\n    });\r\n\r\n    temp_array=sortBy(temp_array, \"label\");\r\n    temp_array.unshift({\r\n      value: \"All\",\r\n      label: \"Select All\",\r\n    });\r\n    setAssigneeList(temp_array);\r\n    return {assignees:temp_array,assignee_ids:assignee_ids}\r\n  };\r\n\r\n  const handleAssigneeChange = (value, actionMeta) => {\r\n    let assigneeArray = [];\r\n    let arr = [];\r\n    if (actionMeta.action == 'select-option') {\r\n      console.log(\"action\", actionMeta)\r\n      setselectedAssignee(value); //1 less value\r\n      console.log(\"rats\", selectedAssignee);\r\n      value.forEach((item) => {\r\n        if (item.value == \"All\") {\r\n          arr = [...assigneeList];\r\n          arr.shift();\r\n          setselectedAssignee(arr);\r\n          console.log(\"arr\", arr)\r\n          console.log(\"len\", arr.length)\r\n          for (let i = 0; i < arr.length; i++)\r\n            assigneeArray[i] = arr[i].value;\r\n\r\n          console.log(\"assinearray\", assigneeArray);\r\n        }\r\n        else {\r\n          assigneeArray.push(item.value);\r\n        }\r\n      });\r\n    }\r\n    else if (actionMeta.action == 'remove-value') {\r\n      console.log(\"removed\", actionMeta.removedValue)\r\n      arr = [...selectedAssignee]\r\n      console.log(\"arr\", arr)\r\n      for (let i = 0; i < arr.length; i++) {\r\n        if (actionMeta.removedValue == arr[i]) {\r\n          arr.splice(i, 1);\r\n        }\r\n      }\r\n      setselectedAssignee(arr);\r\n      for (let i = 0; i < arr.length; i++)\r\n        assigneeArray[i] = arr[i].value;\r\n    }\r\n\r\n    console.log(\"action \", actionMeta);\r\n\r\n    if (actionMeta.action == 'clear') {\r\n      setselectedAssignee(null);\r\n    }\r\n    console.log(\"after removed \", assigneeArray);\r\n    formCreateWbs.setFieldValue(\"assignee\", assigneeArray);\r\n  };\r\n\r\n  // form validation for WBS create\r\n  const is_before_start_date = (start_date, end_date) => {\r\n    // console.log('start date', new Date(start_date))\r\n    // console.log('end date', new Date(end_date))\r\n    return new Date(end_date) < new Date(start_date);\r\n  };\r\n\r\n  const validate_create_wbs_form = (values) => {\r\n    const errors = {};\r\n    if (!values.project) errors.project = \"Project is required\";\r\n    if (!values.title) errors.title = \"Title is required\";\r\n    if (!values.start_date) errors.start_date = \"Start date is required\";\r\n    if (!values.end_date) errors.end_date = \"End date is required\";\r\n    if (\r\n      values.start_date &&\r\n      is_before_start_date(values.start_date, values.end_date)\r\n    )\r\n      errors.end_date = \"End date can not be past from start date\";\r\n    if (values.assignee.length < 1) errors.assignee = \"Assignee is required\";\r\n    return errors;\r\n  };\r\n\r\n  //   create wbs method\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const [files, setFiles] = useState([])\r\n  const setDocFiles = (files) => {\r\n    console.log('parent files',files)\r\n    setFiles(files)\r\n  }\r\n  const removeUploadedFiles = () => {\r\n    setFiles([])\r\n  }\r\n  const create_wbs = (values, { setSubmitting }) => {\r\n    \r\n    const currentDate = new Date();\r\n    const day = `${currentDate.getFullYear()}-${currentDate.getMonth() + 1}-${currentDate.getDate()}`;\r\n    const cday = day.split(\"-\")\r\n    const endDateArray = selectedProjectEndDate.split(\"-\");\r\n\r\n    let cdate = moment([parseInt(cday[0]), parseInt(cday[1])-1, parseInt(cday[2])])\r\n    let edate = moment(selectedProjectEndDate);\r\n    const difference = cdate.diff(edate, 'days');\r\n\r\n    if (difference <= 0) {\r\n      console.log(\"values\", JSON.stringify(formCreateWbs.values));\r\n      let data={\"project\":1,\"work_package_number\":\"1001\",\"assignee\":[3,2],\"reporter\":\"2\",\"title\":\"efrefre\",\"description\":\"referfref\",\"start_date\":\"2022-10-10\",\"end_date\":\"2022-10-31\",\"hours_worked\":\"0\",\"status\":\"1\",\"progress\":\"0\",\"comments\":\"\",\"deliverable\":\"\"}\r\n      let form_data = new FormData()\r\n      console.log('total',files.length)\r\n      form_data.append('total_files',files.length)\r\n      for (const property in formCreateWbs.values) {\r\n        form_data.append(property,formCreateWbs.values[property])\r\n      }\r\n      for (let index=1;index<=files.length;index++){\r\n        form_data.append('file'+index,files[index-1])\r\n      }\r\n      for (var pair of form_data.entries()) {\r\n        console.log(pair[0]+ ', ' + pair[1]); \r\n      }\r\n      API.post(\"wbs/create/\", form_data).then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200 && res.data.success === \"True\") {\r\n          reset_form();\r\n          setTaskList([]);\r\n          removeUploadedFiles()\r\n          dispatch(fetchWbsThunk(sessionStorage.getItem(USER_ID)));\r\n          dispatch(fetchProjectsThunk(sessionStorage.getItem(USER_ID)));\r\n          dispatch(fetchProjectsForPMThunk(sessionStorage.getItem(USER_ID)));\r\n          swal(\"WBS Created Successfully !\", \"\", \"success\");\r\n        }\r\n        reset_form();\r\n        setSelectedTask(null)\r\n      })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setSubmitting(false);\r\n        });\r\n    } else {\r\n      enqueueSnackbar(\"Planned Delivery date is over! \", {\r\n        variant: \"warning\",\r\n      });\r\n      setSubmitting(false)\r\n      // reset_form();\r\n      // setSelectedTask(null)\r\n    }\r\n  };\r\n\r\n  // form reset method\r\n  const reset_form = () => {\r\n    formCreateWbs.resetForm();\r\n    selectProjectRef.current.select.clearValue();\r\n    selectAssigneRef.current.select.clearValue();\r\n    selectTaskTitleRef.current.select.clearValue();\r\n    setSelectedProjectEndDate()\r\n    setSelectedProjectStartDate()\r\n    setSelectedTask(null)\r\n    setAssigneeList([]);\r\n  };\r\n\r\n  // use formic for create WBS\r\n  const formCreateWbs = useFormik({\r\n    initialValues: {\r\n      project: \"\",\r\n      work_package_number: \"\",\r\n      assignee: [],\r\n      reporter: sessionStorage.getItem(USER_ID),\r\n      title: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      hours_worked: \"0\",\r\n      status: \"1\",\r\n      progress: \"0\",\r\n      comments: \"\",\r\n      deliverable: \"\",\r\n    },\r\n    validateOnChange: true,\r\n    validateOnBlur: true,\r\n    validate: validate_create_wbs_form,\r\n    onSubmit: create_wbs,\r\n  });\r\n\r\n  const handleTaskTitleChange = (newValue, actionMeta) => {\r\n    if (newValue != null) {\r\n      getAssigneeList(newValue);\r\n      console.log('task', newValue.start_date);\r\n      setSelectedTask(newValue);\r\n      setSelectedProjectEndDate(newValue?.planned_delivery_date);\r\n      setSelectedProjectStartDate(newValue?.start_date)\r\n\r\n    }\r\n    if (actionMeta.action == \"select-option\") {\r\n      formCreateWbs.setValues({\r\n        project: newValue.id,\r\n        work_package_number: formCreateWbs.values.work_package_number,\r\n        assignee: formCreateWbs.values.assignee,\r\n        reporter: sessionStorage.getItem(USER_ID),\r\n        title: formCreateWbs.values.title,\r\n        description: formCreateWbs.values.description,\r\n        start_date: formCreateWbs.values.start_date,\r\n        end_date: formCreateWbs.values.end_date,\r\n        hours_worked: formCreateWbs.values.hours_worked,\r\n        status: formCreateWbs.values.status,\r\n        progress: formCreateWbs.values.progress,\r\n        comments: formCreateWbs.values.comments,\r\n        deliverable: formCreateWbs.values.deliverable,\r\n      });\r\n    }\r\n  };\r\n\r\n  function is_form_submitting() {\r\n    // console.log(formCreateWbs.isSubmitting, formCreateWbs.isValidating)\r\n    if (formCreateWbs.isSubmitting && !formCreateWbs.isValidating) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  function set_selected_project(sub_task) {\r\n    let all_projects = projects;\r\n    console.log(\"projects\", projects);\r\n    all_projects.forEach((item, idx) => {\r\n      if (item.label == sub_task) {\r\n        setSelectedSubTask(item);\r\n        getTaskList(item.data.subtasks);\r\n      }\r\n    });\r\n  }\r\n  let location = useLocation();\r\n  React.useEffect(() => {\r\n    console.log(\"location \", location)\r\n    if (location.state?.task) {\r\n      let task = location.state.task;\r\n      console.log(\"location data if block\", task);\r\n      set_selected_project(task.sub_task);\r\n      setSelectedTask(task);\r\n      let result=getAssigneeList(task);\r\n      console.log('shifted result',result.assignees.slice(1))\r\n      setselectedAssignee(result.assignees.slice(1));\r\n      \r\n      setSelectedProjectEndDate(task.planned_delivery_date);\r\n      //console.log(\"start date\", task)\r\n      setSelectedProjectStartDate(task.start_date)\r\n\r\n      formCreateWbs.setValues({\r\n        project: task.id,\r\n        work_package_number: task.work_package_number,\r\n        assignee: result.assignee_ids,\r\n        reporter: sessionStorage.getItem(USER_ID),\r\n        title: formCreateWbs.values.title,\r\n        description: formCreateWbs.values.description,\r\n        start_date: formCreateWbs.values.start_date,\r\n        end_date: formCreateWbs.values.end_date,\r\n        hours_worked: formCreateWbs.values.hours_worked,\r\n        status: formCreateWbs.values.status,\r\n        progress: formCreateWbs.values.progress,\r\n        comments: formCreateWbs.values.comments,\r\n        deliverable: formCreateWbs.values.deliverable,\r\n      });\r\n    } else {\r\n    }\r\n  }, []);\r\n\r\n  // function compareTime(){\r\n  //     const currentDate = new Date();\r\n  //     console.log(currentDate);\r\n  //     if(selectedProjectEndDate < currentDate)\r\n  //       return false;\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow>\r\n          <div className=\"col-md-8 offset-md-2 col-sm-12\">\r\n            <CCard className=\"custom-wbs-card-1\">\r\n              <CCardHeader className=\"project-wbs-1\">\r\n                {\" \"}\r\n                <h4 className=\"section-name-wbscreate\">Create a WBS</h4>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <CContainer>\r\n                  <CForm>\r\n                    <CRow>\r\n                      {/**project name */}\r\n                      <div className=\"col-lg-12 mb-3\">\r\n                        <CLabel className=\"custom-label-wbs5\">\r\n                          Select Project\r\n                        </CLabel>\r\n                        <Select\r\n                          id=\"project\"\r\n                          options={projects}\r\n                          // getOptionLabel={option => option.task_delivery_order + \" / \" + option.sub_task}\r\n                          // getOptionValue={option => option.id}\r\n                          value={selectedSubTask}\r\n                          onChange={handleProjectChange}\r\n                          ref={selectProjectRef}\r\n                        />\r\n                        {formCreateWbs.touched.project &&\r\n                          formCreateWbs.errors.project && (\r\n                            <small style={{ color: \"red\" }}>\r\n                              {formCreateWbs.errors.project}\r\n                            </small>\r\n                          )}\r\n                      </div>\r\n                      {/*selectedSubTask != null ?\r\n                                                <div className=\"col-lg-12 mb-3\">\r\n                                                    <CAlert color=\"primary\">\r\n                                                        <small>\r\n                                                            <b>Planned Delivery Date: </b> {selectedTask.data.project.planned_delivery_date}\r\n                                                            <br />\r\n                                                            <b>Planned Hours: </b> {selectedTask.data.project.planned_hours}\r\n                                                            <br />\r\n                                                            <b>Remaining Hours: </b> {selectedTask.data.project.remaining_hours}\r\n                                                        </small>\r\n                                                    </CAlert>\r\n                                                </div> :\r\n                                                <></>\r\n                                            } \r\n                      {/**task title */}\r\n                      <div className=\"col-lg-12 mb-3\">\r\n                        <CLabel className=\"custom-label-wbs5\">\r\n                          Task Title\r\n                        </CLabel>\r\n                        <Select\r\n                          id=\"task_title\"\r\n                          options={taskList}\r\n                          getOptionLabel={(option) => option.task_title}\r\n                          getOptionValue={(option) => option.id}\r\n                          onChange={handleTaskTitleChange}\r\n                          value={selectedTask}\r\n                          ref={selectTaskTitleRef}\r\n                        />\r\n                        {formCreateWbs.touched.task_title &&\r\n                          formCreateWbs.errors.task_title && (\r\n                            <small style={{ color: \"red\" }}>\r\n                              {formCreateWbs.errors.task_title}\r\n                            </small>\r\n                          )}\r\n                      </div>\r\n                      {selectedTask != null ? (\r\n                        <div className=\"col-lg-12 mb-3\">\r\n                          <CAlert color=\"primary\">\r\n                            <small>\r\n                              <b>Planned Delivery Date: </b>{\" \"}\r\n                              {selectedTask.planned_delivery_date}\r\n                              <br />\r\n                              <b>Planned Hours: </b>{\" \"}\r\n                              {Number(parseFloat(selectedTask.planned_hours)).toFixed(2)}\r\n                              <br />\r\n                              <b>Remaining Hours: </b>{\" \"}\r\n                              {Number(parseFloat(selectedTask.remaining_hours)).toFixed(2)}\r\n                              <br />\r\n                              <b>Task details: </b> {selectedTask.description}\r\n                            </small>\r\n                          </CAlert>\r\n                        </div>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                      {/**wbs title */}\r\n                      <div className=\"col-lg-12 mb-3\">\r\n                        <CLabel className=\"custom-label-wbs5\">WBS Title</CLabel>\r\n                        {/* onChange={setWbsTitle} */}\r\n                        <CInput\r\n                          id=\"title\"\r\n                          name=\"title\"\r\n                          maxlength=\"50\"\r\n                          value={formCreateWbs.values.title}\r\n                          onChange={formCreateWbs.handleChange}\r\n                          className=\"custom-forminput-6\"\r\n                        ></CInput>\r\n                        <div className=\"float-right\">\r\n                          {formCreateWbs.values.title.length}/50\r\n                        </div>\r\n                        {formCreateWbs.touched.title &&\r\n                          formCreateWbs.errors.title && (\r\n                            <small style={{ color: \"red\" }}>\r\n                              {formCreateWbs.errors.title}\r\n                            </small>\r\n                          )}\r\n                      </div>\r\n                      {/**WBS description */}\r\n                      <div className=\"col-lg-12 mb-3\">\r\n                        <CLabel className=\"custom-label-wbs5\">\r\n                          Description\r\n                        </CLabel>\r\n                        {/* onChange={setWbsDetails} */}\r\n                        <CTextarea\r\n                          maxlength=\"120\"\r\n                          id=\"description\"\r\n                          name=\"description\"\r\n                          value={formCreateWbs.values.description}\r\n                          onChange={formCreateWbs.handleChange}\r\n                          className=\"custom-forminput-6\"\r\n                        ></CTextarea>\r\n                        { <div className=\"float-right\">{(formCreateWbs.values.description).length}/120</div>}\r\n                      </div>\r\n\r\n                      {/**Start date */}\r\n                      <div className=\"col-lg-6 mb-3\">\r\n                        <CLabel className=\"custom-label-wbs5\">\r\n                          Start date\r\n                        </CLabel>\r\n                        {/* onChange={setWbsStartDate} */}\r\n                        <CInput\r\n                          max={selectedProjectEndDate}\r\n                          min = {selectedProjectStartDate}\r\n                          type=\"date\"\r\n                          id=\"start_date\"\r\n                          name=\"start_date\"\r\n                          value={formCreateWbs.values.start_date}\r\n                          onChange={formCreateWbs.handleChange}\r\n                          className=\"custom-forminput-6\"\r\n                          \r\n                        ></CInput>\r\n                        {formCreateWbs.touched.start_date &&\r\n                          formCreateWbs.errors.start_date && (\r\n                            <small style={{ color: \"red\" }}>\r\n                              {formCreateWbs.errors.start_date}\r\n                            </small>\r\n                          )}\r\n                      </div>\r\n                      {/**End date */}\r\n                      <div className=\"col-lg-6 mb-3\">\r\n                        <CLabel className=\"custom-label-wbs5\">End date</CLabel>\r\n                        {/* onChange={setWbsEndDate} */}\r\n                        <CInput\r\n                          max={selectedProjectEndDate}\r\n                          min = {formCreateWbs.values.start_date}\r\n                          type=\"date\"\r\n                          id=\"end_date\"\r\n                          name=\"end_date\"\r\n                          value={formCreateWbs.values.end_date}\r\n                          onChange={formCreateWbs.handleChange}\r\n                          className=\"custom-forminput-6\"\r\n                        ></CInput>\r\n                        {formCreateWbs.touched.end_date &&\r\n                          formCreateWbs.errors.end_date && (\r\n                            <small style={{ color: \"red\" }}>\r\n                              {formCreateWbs.errors.end_date}\r\n                            </small>\r\n                          )}\r\n                      </div>\r\n                      {/**Assignees */}\r\n                      <div className=\"col-lg-12 mb-3\">\r\n                        <CLabel className=\"custom-label-wbs5\">\r\n                          Assignee(s)\r\n                        </CLabel>\r\n                        <Select\r\n                          className=\"custom-forminput-6\"\r\n                          ref={selectAssigneRef}\r\n                          options={assigneeList}\r\n                          isMulti\r\n                          onChange={handleAssigneeChange}\r\n                          value={selectedAssignee}\r\n                        />\r\n                        {formCreateWbs.touched.assignee &&\r\n                          formCreateWbs.errors.assignee && (\r\n                            <small style={{ color: \"red\" }}>\r\n                              {formCreateWbs.errors.assignee}\r\n                            </small>\r\n                          )}\r\n                      </div>\r\n                      <div className=\"col-lg-12\">\r\n                        <WBSFileUpload files={files} setFiles={setDocFiles} />\r\n                      </div>\r\n                      {/**submit buttons */}\r\n                      <CCol>\r\n                      <div className=\"col-md-12\">\r\n                        {is_form_submitting() == true ? (\r\n                          <LinearProgress />\r\n                        ) : (\r\n                          <div className=\"projectwbs-form-button-holders mt-3\">\r\n                            <CButton\r\n                              type=\"button\"\r\n                              onClick={formCreateWbs.handleSubmit}\r\n                              className=\"create-btn-prjctwbs create-wbs\"\r\n                            >\r\n                              Create WBS\r\n                            </CButton>\r\n                            <CButton\r\n                              type=\"button\"\r\n                              onClick={reset_form}\r\n                              className=\"create-btn-prjctwbs cancel-wbs\"\r\n                            >\r\n                              Cancel\r\n                            </CButton>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  </CForm>\r\n                </CContainer>\r\n              </CCardBody>\r\n            </CCard>\r\n          </div>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\nexport default CreateNewWBS;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLinearProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiLinearProgress', slot);\n}\nconst linearProgressClasses = generateUtilityClasses('MuiLinearProgress', ['root', 'colorPrimary', 'colorSecondary', 'determinate', 'indeterminate', 'buffer', 'query', 'dashed', 'dashedColorPrimary', 'dashedColorSecondary', 'bar', 'barColorPrimary', 'barColorSecondary', 'bar1Indeterminate', 'bar1Determinate', 'bar1Buffer', 'bar2Indeterminate', 'bar2Buffer']);\nexport default linearProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4,\n    _t5,\n    _t6;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useTheme from '../styles/useTheme';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getLinearProgressUtilityClass } from './linearProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TRANSITION_DURATION = 4; // seconds\n\nconst indeterminate1Keyframe = keyframes(_t || (_t = _`\n  0% {\n    left: -35%;\n    right: 100%;\n  }\n\n  60% {\n    left: 100%;\n    right: -90%;\n  }\n\n  100% {\n    left: 100%;\n    right: -90%;\n  }\n`));\nconst indeterminate2Keyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    left: -200%;\n    right: 100%;\n  }\n\n  60% {\n    left: 107%;\n    right: -8%;\n  }\n\n  100% {\n    left: 107%;\n    right: -8%;\n  }\n`));\nconst bufferKeyframe = keyframes(_t3 || (_t3 = _`\n  0% {\n    opacity: 1;\n    background-position: 0 -23px;\n  }\n\n  60% {\n    opacity: 0;\n    background-position: 0 -23px;\n  }\n\n  100% {\n    opacity: 1;\n    background-position: -200px -23px;\n  }\n`));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, variant],\n    dashed: ['dashed', `dashedColor${capitalize(color)}`],\n    bar1: ['bar', `barColor${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar1Indeterminate', variant === 'determinate' && 'bar1Determinate', variant === 'buffer' && 'bar1Buffer'],\n    bar2: ['bar', variant !== 'buffer' && `barColor${capitalize(color)}`, variant === 'buffer' && `color${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar2Indeterminate', variant === 'buffer' && 'bar2Buffer']\n  };\n  return composeClasses(slots, getLinearProgressUtilityClass, classes);\n};\n\nconst getColorShade = (theme, color) => {\n  if (color === 'inherit') {\n    return 'currentColor';\n  }\n\n  if (theme.vars) {\n    return theme.vars.palette.LinearProgress[`${color}Bg`];\n  }\n\n  return theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.5);\n};\n\nconst LinearProgressRoot = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`], styles[ownerState.variant]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'block',\n  height: 4,\n  zIndex: 0,\n  // Fix Safari's bug during composition of different paint.\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  backgroundColor: getColorShade(theme, ownerState.color)\n}, ownerState.color === 'inherit' && ownerState.variant !== 'buffer' && {\n  backgroundColor: 'none',\n  '&::before': {\n    content: '\"\"',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'currentColor',\n    opacity: 0.3\n  }\n}, ownerState.variant === 'buffer' && {\n  backgroundColor: 'transparent'\n}, ownerState.variant === 'query' && {\n  transform: 'rotate(180deg)'\n}));\nconst LinearProgressDashed = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Dashed',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.dashed, styles[`dashedColor${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => {\n  const backgroundColor = getColorShade(theme, ownerState.color);\n  return _extends({\n    position: 'absolute',\n    marginTop: 0,\n    height: '100%',\n    width: '100%'\n  }, ownerState.color === 'inherit' && {\n    opacity: 0.3\n  }, {\n    backgroundImage: `radial-gradient(${backgroundColor} 0%, ${backgroundColor} 16%, transparent 42%)`,\n    backgroundSize: '10px 10px',\n    backgroundPosition: '0 -23px'\n  });\n}, css(_t4 || (_t4 = _`\n    animation: ${0} 3s infinite linear;\n  `), bufferKeyframe));\nconst LinearProgressBar1 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar1',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar1Indeterminate, ownerState.variant === 'determinate' && styles.bar1Determinate, ownerState.variant === 'buffer' && styles.bar1Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : (theme.vars || theme).palette[ownerState.color].main\n}, ownerState.variant === 'determinate' && {\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}, ownerState.variant === 'buffer' && {\n  zIndex: 1,\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t5 || (_t5 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n    `), indeterminate1Keyframe));\nconst LinearProgressBar2 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar2',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar2Indeterminate, ownerState.variant === 'buffer' && styles.bar2Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left'\n}, ownerState.variant !== 'buffer' && {\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : (theme.vars || theme).palette[ownerState.color].main\n}, ownerState.color === 'inherit' && {\n  opacity: 0.3\n}, ownerState.variant === 'buffer' && {\n  backgroundColor: getColorShade(theme, ownerState.color),\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t6 || (_t6 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;\n    `), indeterminate2Keyframe));\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLinearProgress'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    value,\n    valueBuffer,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const theme = useTheme();\n  const rootProps = {};\n  const inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      let transform = value - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar1.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      let transform = (valueBuffer || 0) - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar2.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(LinearProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other, {\n    children: [variant === 'buffer' ? /*#__PURE__*/_jsx(LinearProgressDashed, {\n      className: classes.dashed,\n      ownerState: ownerState\n    }) : null, /*#__PURE__*/_jsx(LinearProgressBar1, {\n      className: classes.bar1,\n      ownerState: ownerState,\n      style: inlineStyles.bar1\n    }), variant === 'determinate' ? null : /*#__PURE__*/_jsx(LinearProgressBar2, {\n      className: classes.bar2,\n      ownerState: ownerState,\n      style: inlineStyles.bar2\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default LinearProgress;","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    CForm,\r\n    CLabel,\r\n    CInput,\r\n    CCardBody,\r\n    CCard,\r\n    CButton,\r\n    CContainer,\r\n    CCol,CRow,\r\n} from \"@coreui/react\";\r\nimport \"./uploadForm.css\";\r\nimport { API, USER_ID } from \"../../Config\";\r\nimport { arrayRemoveItem } from \"../../helper\";\r\nimport swal from \"sweetalert\";\r\nimport {useRef} from 'react';\r\n\r\nconst WBSFileUpload = (props) => {\r\n    const inputRef = useRef();\r\n    const [selectedFile,setSelectedFile] = useState()\r\n    const setSelectedProject = useState()\r\n    const [files, setFiles] = useState(props.files)\r\n    const [fileAvatars, setFileAvatars] = useState([])\r\n    const upload = () => {\r\n        let formData = new FormData()\r\n        // formData.append('project', selectedProject.data.project.id)\r\n        formData.append('files', files.length)\r\n        formData.append('upload_by', sessionStorage.getItem(USER_ID))\r\n        Array.from(files).forEach((file, idx) => {\r\n            formData.append('file' + (idx + 1), file)\r\n        })\r\n        API.post('project/shared/document/create/', formData).then((res) => {\r\n            setSelectedProject(null)\r\n            setFileAvatars([])\r\n            setFiles([])\r\n            swal('Uploaded', 'Files are uploaded', 'success')\r\n        })\r\n    }\r\n    function onFileChange(event) {\r\n        let file = event.target.files[0]\r\n        event.target.value=null\r\n        setFiles([...files, file]);\r\n        setFileAvatars([...fileAvatars, URL.createObjectURL(file)]);\r\n        props.setFiles([...files, file])\r\n    }\r\n    function remove_file(index) {\r\n        console.log('on remove',arrayRemoveItem(files, files[index]))\r\n        setFileAvatars(arrayRemoveItem(fileAvatars, fileAvatars[index]))\r\n        setFiles(arrayRemoveItem(files, files[index]))\r\n        props.setFiles(arrayRemoveItem(files, files[index]))\r\n        // inputRef.current.value = null;\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <CCard className=\"mt-2 upload-docs\">\r\n                <CCardBody>\r\n                    <CContainer>\r\n                        {/**Project Name */}\r\n                        \r\n                        {/**upload files box */}\r\n                        <CCol className=\"mb-1\">\r\n                            <CLabel htmlFor=\"attachments\" className=\"custom-label-5\">\r\n                                Upload Documents\r\n                            </CLabel>\r\n                            <CLabel className=\"custom-file-upload\">\r\n                                <CInput\r\n                                    type=\"file\"\r\n                                    id=\"file\"\r\n                                    ref={inputRef}\r\n                                    className=\"form-control form-control-file\"\r\n                                    onChange={(event) => onFileChange(event)}\r\n                                    accept=\".xlsx, .xls, .csv, .pdf, image/*, application/gzip, .zip, .tar, .txt, .doc, .docx, .pptx, .ppt\"\r\n                                />\r\n                                <img\r\n                                    src={\"assets/icons/upload-thin.svg\"}\r\n                                    alt=\"\"\r\n                                    className=\"upload-icon\"\r\n                                // onClick={()=>{document.getElementById('file').click()}}\r\n                                />\r\n                            </CLabel>\r\n                        </CCol>\r\n                        <CCol>\r\n                        {/* <CButton\r\n                            type=\"button\" \r\n                            onClick = {upload}\r\n                            color=\"primary\"\r\n                          >\r\n                            Upload\r\n                          </CButton> */}\r\n                        </CCol>\r\n                        {/**display uploaded files */}\r\n                        <div className=\"mb-2\">\r\n                            <div className=\"row\">\r\n                                {fileAvatars.map((file, idx) => (\r\n                                    <div key={idx} className=\"col-md-6 col-sm-6 col-sm-4\">\r\n                                        <div className=\"file-attached-ongoing rounded-pill\">\r\n                                            <CButton className=\"remove-file-ongoing\" type=\"button\" onClick={() => { remove_file(idx) }}>\r\n                                                <img\r\n                                                    src={\"assets/icons/icons8-close-64-blue.svg\"}\r\n                                                    className=\"close-icon-size\"\r\n                                                />\r\n                                            </CButton>\r\n                                            {files[idx].name}\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        {/**Submit buttons */}\r\n                        {/* <div className=\"mb-3 mt-4\">\r\n                            <div className=\"project-form-button-holders \">\r\n                                <CButton className=\"profile-form-btn update-profile\" type=\"button\" onClick={upload}>Upload Documents</CButton>\r\n                                <CButton className=\"profile-form-btn cancel-update\">Cancel</CButton>\r\n                            </div>\r\n                        </div> */}\r\n\r\n                    </CContainer>\r\n                </CCardBody>\r\n            </CCard>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WBSFileUpload;\r\n"],"sourceRoot":""}