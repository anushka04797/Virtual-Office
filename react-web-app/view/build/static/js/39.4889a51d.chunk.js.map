{"version":3,"sources":["pages/timecards/addTimecardItem.js","pages/timecards/Edit.js","pages/timecards/timeCard.js","../node_modules/lodash/orderBy.js"],"names":["AddTimecardItms","props","useState","modal","setModal","holidays","useSelector","state","items","Array","from","data","forEach","item","idx","push","label","holiday_title","value","id","projects","setProjects","selectedProject","setselectedProject","worktypes","temp","title","description","console","log","dispatch","useDispatch","formAddTimecard","hours_spent_left","employee","useFormik","initialValues","project","task_title","actual_work_done","hours","hours_type","wbs","hour_description","assignee","validateOnChange","validateOnBlur","validate","values","errors","parseInt","onSubmit","API","post","then","res","onClose","resetForm","setSelectedType","setWbsList","setSelectedWbs","swal","useEffect","fetchHolidays","fetchUserHoursUsedAndLeft","temp_projects","get","index","length","sub_task","selectedType","wbsList","selectedWbs","reset_form","closeOnBackdrop","show","toggle","size","closeButton","className","htmlFor","loseMenuOnSelect","isClearable","isMulti","name","options","onChange","option","setValues","touched","style","color","actionMeta","setFieldValue","type","placeholder","min","e","target","wbslistArray","i","wbs_list","assignee_id","onClick","handleSubmit","EditTimeCard","formEditTimeCard","time_type","hours_today","setSubmitting","put","status","statusText","catch","err","work_package_number","defaultValue","filter","t","class","handleChange","disabled","rows","TimeCards","profile_details","profile","selectedAssignee","setSelectedAssignee","update","usersData","setUsersData","pdfData","setPdfData","setPdfTitle","location","useLocation","assigneeList","setAssigneeList","non_submitted_total_tc","setNonSubmittedTotalTC","startDate","setStartDate","endDate","setEndDate","totalHrs","setTotalHrs","setModalData","row","setRow","get_assignee_tc","dateRange","start","end","first_name","last_name","filteredData","p","date_updated","tableData","hours_total","total_not_submitted","submitted","element","parseFloat","WP","Description","Type","date_created","orderBy","capitalize","string","undefined","charAt","toUpperCase","slice","toLowerCase","modaladdItem","setmodalAddItem","show_edit_modal","setShowEditModal","React","window","scrollTo","has_permission","sessionStorage","getItem","USER_ID","find","user","unshift","editForm","assigneeSelect","assigneeSelectPM","todate","temp_hrs","colourStyles","provided","fontSize","sdate","Date","edate","getDay","moment","subtract","toDate","format","nextSatDay","satday","add","Edit","onAdd","xl","lg","md","closeMenuOnSelect","minHeight","classNamePrefix","styles","fields","key","_style","width","_classes","primary","hover","striped","bordered","sorter","itemsPerPage","pagination","scopedSlots","Action","role","Number","toFixed","text","icon","buttons","dangerMode","willDelete","doc","jsPDF","setFontSize","content","startY","head","body","map","elt","day","time","toLocaleString","hour","minute","hour12","autoTable","lastAutoTable","finalY","exportPDF","formData","FormData","append","output","FILE_API","days","todayDate","save","open","backgroundColor","baseOrderBy","require","isArray","module","exports","collection","iteratees","orders","guard"],"mappings":"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","file":"static/js/39.4889a51d.chunk.js","sourcesContent":["import { useFormik } from \"formik\";\r\nimport {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CForm,\r\n  CLabel,\r\n  CInput,\r\n  CButton,\r\n  CModal,\r\n  CModalBody,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalTitle,\r\n  CTextarea,\r\n} from \"@coreui/react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./timeCards.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport { API, USER_ID } from \"../../Config\";\r\nimport swal from 'sweetalert'\r\nimport { fetchHolidays } from \"../../store/slices/HolidaySlice\";\r\nimport { fetchUserHoursUsedAndLeft } from \"../../store/slices/TimecardSlice\";\r\nimport { hours_spent_left } from \"../../helper\";\r\n\r\nconst AddTimecardItms = (props) => {\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    setModal(!modal);\r\n  };\r\n  const holidays=useSelector((state)=>{\r\n    let items=[]\r\n    Array.from(state.holidays.data).forEach((item,idx)=>{\r\n      items.push({label:item.holiday_title,value:item.id,data:item})\r\n    })\r\n    return items\r\n  })\r\n  const [projects,setProjects]=useState([])\r\n  const [selectedProject, setselectedProject]=useState(\"\")\r\n  \r\n  const worktypes= useSelector(state=>{\r\n    let temp=[]\r\n    Array.from(state.worktypes.data).forEach((item,idx)=>{\r\n      temp.push({label:item.title,value:item.title,description:item.description,data:item})\r\n    })\r\n    console.log(\"worktype\", temp)\r\n    return temp\r\n  })\r\n  const dispatch = useDispatch()\r\n  const hours_left=hours_spent_left(props.employee.id)\r\n  const onSave = (values) => {\r\n    console.log(\"values\", formAddTimecard.values);\r\n    const data={\r\n      hours_type:formAddTimecard.values.hours_type,\r\n      hours:formAddTimecard.values.hours,\r\n      hour_description:formAddTimecard.values.hour_description?formAddTimecard.values.hour_description:'',\r\n      assignee:props.employee,\r\n      actual_work_done:formAddTimecard.values.actual_work_done,\r\n      project:formAddTimecard.values.project,\r\n      wbs:formAddTimecard.values.wbs,\r\n      task_title:formAddTimecard.values.task_title\r\n    }\r\n    API.post('wbs/time-card/add/', data).then((res) => {\r\n      console.log(res.data)\r\n      props.onClose()\r\n      // props.onAdd()\r\n      toggleModal()\r\n      formAddTimecard.resetForm()\r\n      \r\n      setSelectedType({label : null, value : null })\r\n      setWbsList()\r\n      setSelectedWbs(null)\r\n      setselectedProject(null)\r\n      swal('Successfully Added!', '', 'success')\r\n    })\r\n\r\n    setModal(false)\r\n  }\r\n\r\n  const validateAddItemForm=(values)=>{\r\n    const errors = {};\r\n    if (!values.hours_type) errors.hours_type = \"Hour Type is required!\"\r\n    //if (!values.hours) errors.hours = \"Hour is required!\"\r\n    if (!values.project) errors.project = \"Project is required!\"\r\n    if (!values.wbs) errors.wbs = \"Wbs is required!\"\r\n    if (!values.actual_work_done) errors.actual_work_done = \"Details is required!\"\r\n    if (parseInt(values.hours) < 1) errors.hours = \"Invalid hours value!\"\r\n    return errors;\r\n  }\r\n  \r\n  const formAddTimecard = useFormik({\r\n    initialValues: {\r\n      project: \"\",\r\n      task_title: \"\",\r\n      actual_work_done: \"\",\r\n      hours: \"\",\r\n      hours_type: \"\",\r\n      wbs: \"\",\r\n      hour_description:\"\",\r\n      assignee: props.employee\r\n    },\r\n    validateOnChange: true,\r\n    validateOnBlur: true,\r\n    validate: validateAddItemForm,\r\n    onSubmit: onSave,\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log('add tc props',props.employee);\r\n    dispatch(fetchHolidays());\r\n    dispatch(fetchUserHoursUsedAndLeft())\r\n    let temp_projects=[]\r\n    API.get('project/assigned/all/'+props.employee+'/').then(res=>{\r\n      console.log('assigned projects',res.data)\r\n      for(let index=0;index<res.data.data.length;index++){\r\n        temp_projects.push({label:res.data.data[index].project.sub_task,value:res.data.data[index].project.id,data:res.data.data[index]})\r\n      }\r\n      console.log('temp p',temp_projects)\r\n      setProjects(temp_projects)\r\n    })\r\n    \r\n  }, [props]);\r\n\r\n  const [selectedType, setSelectedType] = useState({ label: \"\", value: \"\" });\r\n  const [wbsList, setWbsList] = useState();\r\n  const [selectedWbs, setSelectedWbs] = useState();\r\n\r\n  const handleHoursTypeChange = (option) => {\r\n    setSelectedType(option);\r\n    \r\n    if(option.label != 'RHR' && option.label != 'WFH' && option.label != 'OTO' && option.label != 'OTS'){\r\n      console.log('if')\r\n      \r\n      formAddTimecard.setValues({\r\n        hours_type:option.value,\r\n        actual_work_done:option.description,\r\n      });\r\n    }\r\n    else{\r\n      console.log('else')\r\n      formAddTimecard.setValues({\r\n        hours_type:option.value,\r\n        actual_work_done:'',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleHolidayChange=(value,actionMeta)=>{\r\n    console.log(value)\r\n    formAddTimecard.setFieldValue('hours',value.data.hours)\r\n  }\r\n\r\n  const handlewbsChange = (option) => {\r\n    setSelectedWbs(option);\r\n    console.log(\"WBS\", option);\r\n    formAddTimecard.setFieldValue(\r\n      \"wbs\",\r\n      option.value,\r\n    );\r\n  };\r\n\r\n  const handleProjectChange = (option) => {\r\n    setselectedProject(option)\r\n    console.log(\"selected Project\", option.value)\r\n     formAddTimecard.setFieldValue(\"project\", option.value);\r\n     let wbslistArray = [];\r\n     for (let i = 0; i < option.data.project.wbs_list.length; i++) {\r\n       if (parseInt(option.data.project.wbs_list[i].assignee_id) == parseInt(props.employee)) {\r\n         wbslistArray.push({\r\n           value: option.data.project.wbs_list[i].id,\r\n           label: option.data.project.wbs_list[i].title,\r\n           data: option.data.project.wbs_list[i],\r\n        });\r\n      }\r\n    }\r\n    setWbsList(wbslistArray);\r\n  };\r\n\r\n  const reset_form = () => {\r\n    formAddTimecard.resetForm();\r\n    setSelectedType({label : null, value : null })\r\n    setWbsList()\r\n    setSelectedWbs(null)\r\n    setselectedProject(null)\r\n\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <CModal\r\n        closeOnBackdrop={false}\r\n        show={props.show}\r\n        onClose={()=>{props.onClose();reset_form()}}\r\n        toggle={props.toggle}\r\n        size=\"lg\"\r\n      >\r\n        <CForm>\r\n          <CModalHeader closeButton>\r\n            Enter New Timecard Item Details\r\n          </CModalHeader>\r\n          <CModalBody>\r\n            <CRow>\r\n              <CCol className=\"col-md-12 mb-3\">\r\n                {/*Type : {row?.time_type}*/}\r\n                <CLabel\r\n                  className=\"custom-label-5\"\r\n                  htmlFor=\"assigneeSelectPM\"\r\n                  loseMenuOnSelect={true}\r\n                  isClearable={false}\r\n                  isMulti={false}\r\n                >\r\n                  Hour Type :\r\n                </CLabel>\r\n                <Select\r\n                  id=\"hours_type\"\r\n                  name=\"hours_type\"\r\n                  options={worktypes}\r\n                  onChange={handleHoursTypeChange}\r\n                  value={selectedType}\r\n                />\r\n                {formAddTimecard.touched.hours_type && formAddTimecard.errors.hours_type && <small style={{ color: 'red' }}>{formAddTimecard.errors.hours_type}</small>}\r\n              </CCol>\r\n              {selectedType.label == 'HOL' && <CCol className=\"col-md-12 mb-3\">\r\n                <CLabel className=\"custom-label-wbs5\">Select Holiday : </CLabel>\r\n                <Select\r\n                  id=\"project\"\r\n                  name=\"project\"\r\n                  className=\"custom-forminput-5\"\r\n                  onChange={handleHolidayChange}\r\n                  options={holidays}\r\n                />\r\n              </CCol>}\r\n              <CCol className=\"col-md-12 mb-3\">\r\n                <CLabel className=\"custom-label-wbs5\"> Hour(s) : </CLabel>\r\n                <CInput\r\n                  type=\"number\"\r\n                  aria-label=\"default input example\"\r\n                  id=\"hours\"\r\n                  name=\"hours\"\r\n                  className=\"custom-forminput-5\"\r\n                  placeholder=\"0.00\"\r\n                  //onChange={formAddTimecard.handleChange}\r\n                 \r\n                  min=\"0.00\"\r\n                  onChange={(e) => {\r\n                    formAddTimecard.setFieldValue(\r\n                      \"hours\",\r\n                      e.target.value\r\n                    );\r\n                  }}\r\n                  value={formAddTimecard.values.hours}\r\n                />\r\n                {formAddTimecard.touched.hours && formAddTimecard.errors.hours && <small style={{ color: 'red' }}>{formAddTimecard.errors.hours}</small>}\r\n              </CCol>\r\n\r\n              <CCol className=\"col-md-12 mb-3\">\r\n                  <CLabel\r\n                    className=\"custom-label-wbs5\"\r\n                    htmlFor=\"assigneeSelectPM\"\r\n                    loseMenuOnSelect={true}\r\n                    isClearable={false}\r\n                    isMulti={false}\r\n                  >\r\n                    Project :{\" \"}\r\n                  </CLabel>\r\n\r\n                  <Select\r\n                    id=\"project\"\r\n                    name=\"project\"\r\n                    className=\"custom-forminput-5\"\r\n                    onChange={handleProjectChange}\r\n                    options={projects}\r\n                    value = {selectedProject}\r\n                  />\r\n                  {formAddTimecard.touched.project && formAddTimecard.errors.project && <small style={{ color: 'red' }}>{formAddTimecard.errors.project}</small>}\r\n                </CCol>\r\n\r\n                <CCol className=\"col-md-12 mb-3\">\r\n                  {/*Type : {row?.time_type}*/}\r\n                  <CLabel\r\n                    className=\"custom-label-5\"\r\n                    htmlFor=\"assigneeSelectPM\"\r\n                    loseMenuOnSelect={true}\r\n                    isClearable={false}\r\n                    isMulti={false}\r\n                  >\r\n                    WBS :\r\n                  </CLabel>\r\n                  <Select\r\n                    id=\"wbs\"\r\n                    name=\"wbs\"\r\n                    className=\"custom-forminput-5\"\r\n                    options={wbsList}\r\n                    onChange={handlewbsChange}\r\n                    value={selectedWbs}\r\n                  />\r\n                  {formAddTimecard.touched.wbs && formAddTimecard.errors.wbs && <small style={{ color: 'red' }}>{formAddTimecard.errors.wbs}</small>}\r\n                </CCol>\r\n                <CCol className=\"col-md-12 mb-3\">\r\n                  <CLabel>Actual Work :</CLabel>\r\n                  <CTextarea\r\n                    type=\"text\"\r\n                    id=\"actual_work_done\"\r\n                    name=\"actual_work_done\"\r\n                    className=\"custom-forminput-5\"\r\n                    //onChange={formAddTimecard.handleChange}\r\n                    onChange={(e) => {\r\n                      formAddTimecard.setFieldValue(\r\n                        \"actual_work_done\",\r\n                        e.target.value\r\n                      );\r\n                    }}\r\n                    value={formAddTimecard.values.actual_work_done}\r\n                  />\r\n                  {formAddTimecard.touched.actual_work_done && formAddTimecard.errors.actual_work_done && <small style={{ color: 'red' }}>{formAddTimecard.errors.actual_work_done}</small>}\r\n                </CCol>\r\n            </CRow>\r\n          </CModalBody>\r\n        </CForm>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\" type=\"button\" onClick={formAddTimecard.handleSubmit}>\r\n            Add\r\n          </CButton>{\" \"}\r\n          <CButton color=\"secondary\" type=\"button\" onClick={()=>{props.onClose();reset_form()}}>\r\n            Cancel\r\n\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </>\r\n  );\r\n};\r\nexport default AddTimecardItms;\r\n","import { useFormik } from \"formik\";\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CForm,\r\n  CLabel,\r\n  CInput,\r\n  CButton,\r\n  CDataTable,\r\n  CBadge,\r\n  CModal,\r\n  CModalBody,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalTitle,\r\n  CTextarea,\r\n} from \"@coreui/react\";\r\nimport Select from \"react-select\";\r\nimport { API } from \"../../Config\";\r\nimport swal from \"sweetalert\";\r\nimport { useSelector } from \"react-redux\";\r\nconst EditTimeCard = (props) => {\r\n  const types = [\r\n    { label: \"RHR\", value: \"RHR\" },\r\n    { label: \"SIC\", value: \"SIC\" },\r\n    { label: \"VAC\", value: \"VAC\" },\r\n    { label: \"OTS\", value: \"OTS\" },\r\n    { label: \"OTO\", value: \"OTO\" },\r\n    { label: \"HOL\", value: \"HOL\" },\r\n    { label: \"WFH\", value: \"WFH\" },\r\n    { label: \"COM\", value: \"COM\" },\r\n    { label: \"PB1\", value: \"PB1\" },\r\n    { label: \"PB2\", value: \"PB2\" },\r\n  ];\r\n  const worktypes = useSelector((state) => {\r\n    let temp = [];\r\n    Array.from(state.worktypes.data).forEach((item, idx) => {\r\n      temp.push({\r\n        label: item.title,\r\n        value: item.title,\r\n        description: item.description,\r\n        data: item,\r\n      });\r\n    });\r\n    return temp;\r\n  });\r\n  const edit_time_card = (values, { setSubmitting }) => {\r\n    console.log(values);\r\n    API.put(\"wbs/time-card/update/\" + props.data.id + \"/\", values)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.status == 200 && res.statusText == \"OK\") {\r\n          formEditTimeCard.resetForm();\r\n          props.onClose();\r\n          swal(\"Well Done!\", \"Your timecard is updated\", \"success\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const formEditTimeCard = useFormik({\r\n    initialValues: {\r\n      actual_work_done: \"\",\r\n      time_type: \"\",\r\n      hours_today: \"\",\r\n    },\r\n    onSubmit: edit_time_card,\r\n  });\r\n  const handleSelectChange = (value, actionMeta) => {\r\n    console.log(value);\r\n    formEditTimeCard.setFieldValue(\"time_type\", value.value);\r\n  };\r\n  useEffect(() => {\r\n    if (props.data) {\r\n      formEditTimeCard.setValues({\r\n        actual_work_done: props.data.actual_work_done,\r\n        time_type: props.data.time_type,\r\n        hours_today: props.data.hours_today,\r\n      });\r\n    }\r\n  }, [props.data]);\r\n\r\n  const oncancel = () => {\r\n    formEditTimeCard.setValues({\r\n      actual_work_done: props.data.actual_work_done,\r\n      time_type: props.data.time_type,\r\n      hours_today: props.data.hours_today,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CModal\r\n        //show={showModal}\r\n        show={props.show}\r\n        onClose={() => props.onClose()}\r\n        toggle={props.toggle}\r\n        size=\"lg\"\r\n      >\r\n        <CModalHeader closeButton>\r\n          {\" \"}\r\n          Project Name (Work Package) :{\" \"}\r\n          {props.data?.project != null\r\n            ? props.data.project.sub_task +\r\n              \"(\" +\r\n              props.data?.project.work_package_number +\r\n              \")\"\r\n            : \"N/A\"}\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            <CCol className=\"col-md-12 mb-3\">\r\n              {/*Type : {props.data?.time_type}*/}\r\n              <CLabel\r\n                className=\"custom-label-5\"\r\n                htmlFor=\"assigneeSelectPM\"\r\n                loseMenuOnSelect={true}\r\n                isClearable={false}\r\n                isMulti={false}\r\n              >\r\n                Type :\r\n              </CLabel>\r\n              <Select\r\n                options={worktypes}\r\n                onChange={handleSelectChange}\r\n                defaultValue={types.filter(\r\n                  (t) => t.value === props.data?.time_type\r\n                )}\r\n              />\r\n            </CCol>\r\n            <CCol className=\"col-md-12 mb-3\">\r\n              <CLabel class=\"form-label\"> Hour(s):</CLabel>\r\n\r\n              <CInput\r\n                className=\"custom-forminput-5\"\r\n                type=\"number\"\r\n                aria-label=\"default input example\"\r\n                id=\"hours_today\"\r\n                name=\"hours_today\"\r\n                placeholder=\"0.00\"\r\n                min=\"0.00\"\r\n                value={formEditTimeCard.values.hours_today}\r\n                onChange={formEditTimeCard.handleChange}\r\n              ></CInput>\r\n              {/*{sethour(props.data?.sethour)}*/}\r\n            </CCol>\r\n            <CCol className=\"col-md-12 mb-3\">\r\n              <CLabel class=\"form-label\"> Task Title : </CLabel>\r\n              <CInput\r\n                value={\r\n                  props.data?.project != null\r\n                    ? props.data.project.task_title\r\n                    : \"N/A\"\r\n                }\r\n                disabled\r\n              ></CInput>\r\n            </CCol>\r\n            <CCol className=\"col-md-12 mb-3\">\r\n              <CLabel class=\"form-label\">Actual Work :</CLabel>\r\n              <CTextarea\r\n                class=\"form-control\"\r\n                id=\"actual_work_done\"\r\n                name=\"actual_work_done\"\r\n                rows=\"3\"\r\n                value={formEditTimeCard.values.actual_work_done}\r\n                onChange={formEditTimeCard.handleChange}\r\n              >\r\n                {\" \"}\r\n              </CTextarea>\r\n            </CCol>\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\" onClick={formEditTimeCard.handleSubmit}>\r\n            save\r\n          </CButton>{\" \"}\r\n          <CButton\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              props.onClose();\r\n              oncancel();\r\n            }}\r\n          >\r\n            Cancel\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditTimeCard;\r\n","import {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CForm,\r\n  CLabel,\r\n  CButton,\r\n  CDataTable,\r\n  CBadge,\r\n} from \"@coreui/react\";\r\nimport orderBy from \"lodash/orderBy\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./timeCards.css\";\r\nimport Select from \"react-select\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FILE_API, USER_ID } from \"../../Config\";\r\nimport { API } from \"../../Config\";\r\nimport { has_permission } from \"../../helper\";\r\nimport { useFormik } from \"formik\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport moment from \"moment\";\r\nimport swal from \"sweetalert\";\r\nimport AddTimecardItms from \"./addTimecardItem\";\r\nimport EditTimeCard from \"./Edit\";\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst TimeCards = () => {\r\n  const profile_details = useSelector((state) => state.profile.data);\r\n  const [selectedAssignee, setSelectedAssignee] = useState();\r\n  const dispatch = useDispatch();\r\n  const [update, setUpdate] = useState(0);\r\n  const [usersData, setUsersData] = useState([]);\r\n  const [pdfData, setPdfData] = useState([]);\r\n  const [pdfTitle, setPdfTitle] = useState();\r\n  let location = useLocation();\r\n  const [assigneeList, setAssigneeList] = useState([]);\r\n  const [non_submitted_total_tc, setNonSubmittedTotalTC] = useState(0);\r\n  // const [selectedEmployee, setSelectedEmployee] = useState(initialState)\r\n  {\r\n    /**fetch all assignees for PM */\r\n  }\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [totalHrs, setTotalHrs] = useState(0);\r\n  const [modalData, setModalData] = useState(\"\");\r\n  const [row, setRow] = useState();\r\n\r\n  const getTimeCards = (values) => {\r\n    console.log(\"working\");\r\n    setStartDate(values.startDate);\r\n    setEndDate(values.todate);\r\n    var temp_hrs = 0;\r\n    // const section = document.querySelector(\"#tableRef\");\r\n    // section.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n    if (\r\n      has_permission(\"projects.add_projects\") &&\r\n      has_permission(\"wbs.change_timecard\") &&\r\n      has_permission(\"wbs.add_timecard\")\r\n    ) {\r\n      // console.log('values from timecards', values)\r\n      API.get(\"wbs/user/time-card/list/\" + values.assigneeSelectPM + \"/\").then(\r\n        (res) => {\r\n          console.log(res.data.data);\r\n          let temp = [];\r\n          Array.from(res.data.data).forEach((item, idx) => {\r\n            temp.push({ data: item });\r\n          });\r\n\r\n          let filteredData = [];\r\n          filteredData = temp.filter(\r\n            (p) =>\r\n              p.data.date_updated >= values.startDate &&\r\n              p.data.date_updated <= values.todate\r\n          );\r\n          // console.log('timecard for id', filteredData)\r\n          setPdfData(filteredData);\r\n          var tableData = [];\r\n          for (let index = 0; index < filteredData.length; index++) {\r\n            const element = filteredData[index];\r\n            temp_hrs += parseFloat(element.data.hours_today);\r\n            tableData.push({\r\n              WP: element.data.project?.work_package_number\r\n                ? element.data.project.work_package_number\r\n                : \"-\",\r\n              \"Project Name\": element.data.project?.sub_task\r\n                ? element.data.project.sub_task\r\n                : \"-\",\r\n              \"Task Title\": element.data.project.task_title\r\n                ? element.data.project.task_title\r\n                : \"-\",\r\n              Description: element.data.actual_work_done\r\n                ? element.data.actual_work_done\r\n                : \"-\",\r\n              \"Hour(s)\": element.data.hours_today,\r\n              Type: element.data.time_type,\r\n              \"Date Created\": element.data.date_created,\r\n              data: element.data,\r\n            });\r\n          }\r\n          setTotalHrs(temp_hrs);\r\n          setUsersData(tableData);\r\n        }\r\n      );\r\n    } else {\r\n      // console.log('values from timecards', values)\r\n      API.get(\"wbs/user/time-card/list/\" + values.assigneeSelect + \"/\").then(\r\n        (res) => {\r\n          let temp = [];\r\n          setPdfTitle(\r\n            profile_details.first_name + \" \" + profile_details.last_name\r\n          );\r\n          Array.from(res.data.data).forEach((item, idx) => {\r\n            // temp.push({data:item.date_updated >=values.startDate && item.date_updated <= values.todate})\r\n            temp.push({ data: item });\r\n          });\r\n\r\n          let filteredData = [];\r\n          filteredData = temp.filter(\r\n            (p) =>\r\n              p.data.date_updated >= values.startDate &&\r\n              p.data.date_updated <= values.todate\r\n          );\r\n          console.log(\"timecard for id\", filteredData);\r\n\r\n          setPdfData(filteredData);\r\n          setModalData(filteredData);\r\n\r\n          var tableData = [];\r\n          for (let index = 0; index < filteredData.length; index++) {\r\n            const element = filteredData[index];\r\n            temp_hrs += parseFloat(element.data.hours_today);\r\n            tableData.push({\r\n              WP: element.data.project\r\n                ? element.data.project.work_package_number\r\n                : \"-\",\r\n              \"Project Name\":\r\n                element.data.project != null\r\n                  ? element.data.project?.sub_task\r\n                  : \"-\",\r\n              \"Task Title\":\r\n                element.data.project != null\r\n                  ? element.data.project.task_title\r\n                  : \"-\",\r\n              Description: element.data.actual_work_done\r\n                ? element.data.actual_work_done\r\n                : \"\",\r\n              \"Hour(s)\": element.data.hours_today,\r\n              Type: element.data.time_type,\r\n              \"Date Created\": element.data.date_created,\r\n              data: element.data,\r\n            });\r\n            //console.log(\"table\", tableData);\r\n          }\r\n          console.log(\"table\", tableData);\r\n          setUsersData(tableData);\r\n          setTotalHrs(temp_hrs);\r\n        }\r\n      );\r\n    }\r\n  };\r\n  const get_assignee_tc = (assignee) => {\r\n    console.log(\"get_tc\", assignee);\r\n\r\n    const { start, end } = dateRange();\r\n    setPdfTitle(assignee.first_name + \" \" + assignee.last_name);\r\n    API.get(\"wbs/user/time-card/list/\" + assignee.id + \"/\").then((res) => {\r\n      console.log(\"assignee tc\", res.data);\r\n      // setPdfTitle(\r\n      //   profile_details.first_name + \" \" + profile_details.last_name\r\n      // );\r\n      let temp = [];\r\n      Array.from(res.data.data).forEach((item, idx) => {\r\n        console.log(\"res\", res.data.data)\r\n        temp.push({ data: item });\r\n      });\r\n      let filteredData = temp;\r\n      filteredData = temp.filter(\r\n        (p) => p.data.date_updated >= start && p.data.date_updated <= end\r\n      );\r\n      console.log(\"filtered\", filteredData);\r\n      setPdfData(filteredData);\r\n      var tableData = [];\r\n      let hours_total = 0;\r\n      let total_not_submitted = 0;\r\n      for (let index = 0; index < filteredData.length; index++) {\r\n        if (filteredData[index].data.submitted == false) {\r\n          total_not_submitted++;\r\n        }\r\n        const element = filteredData[index];\r\n        \r\n        hours_total += parseFloat(element.data.hours_today);\r\n        console.log(\"ele\", element.data)\r\n        tableData.push({\r\n          WP: element.data.project\r\n            ? element.data.project.work_package_number\r\n            : \"-\",\r\n          \"Project Name\":\r\n            element.data.project != null ? element.data.project?.sub_task : \"-\",\r\n          \"Task Title\":\r\n            element.data.project != null\r\n              ? element.data.project?.task_title\r\n              : \"-\",\r\n          Description: element.data?.actual_work_done\r\n            ? element.data?.actual_work_done\r\n            : \"-\",\r\n          \"Hour(s)\": element.data.hours_today,\r\n          Type: element.data.time_type,\r\n          \"Date Created\": element.data.date_created,\r\n          data: element.data,\r\n          id: element.data.id,\r\n        });\r\n      }\r\n      setTotalHrs(hours_total);\r\n      setUsersData(orderBy(tableData, \"id\", \"desc\"));\r\n      setNonSubmittedTotalTC(total_not_submitted);\r\n      console.log(\"selected\", selectedAssignee);\r\n    });\r\n  };\r\n  function capitalize(string) {\r\n    if (string != undefined) {\r\n      return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  const [modaladdItem, setmodalAddItem] = useState(false);\r\n  const [show_edit_modal, setShowEditModal] = useState(false);\r\n  const handleAssigneeChange = (option) => {\r\n    setSelectedAssignee(option);\r\n    setPdfTitle(option.label);\r\n    get_assignee_tc(option.data);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    console.log(\"executing effect\");\r\n    window.scrollTo(0, 0);\r\n    const { start, end } = dateRange();\r\n\r\n    // setSelectedAssignee({label:profile_details.first_name+' '+profile_details.last_name,value:profile_details.id,data:profile_details})\r\n    setTotalHrs(0);\r\n    if (\r\n      has_permission(\"projects.change_projectassignee\") ||\r\n      has_permission(\"projects.add_projectassignee\")\r\n    ) {\r\n      API.get(\r\n        \"project/assignees/all/\" + sessionStorage.getItem(USER_ID) + \"/\"\r\n      ).then((res) => {\r\n        let temp = [];\r\n        Array.from(res.data.data).forEach((item, idx) => {\r\n          temp.push({\r\n            data: item,\r\n            value: item.id,\r\n            label:\r\n              capitalize(item.first_name) + \" \" + capitalize(item.last_name),\r\n          });\r\n        });\r\n        if (!temp.find((item) => item.value == res.data.user.id)) {\r\n          temp.unshift({\r\n            data: res.data.user,\r\n            value: res.data.user.id,\r\n            label:\r\n              capitalize(res.data.user.first_name) +\r\n              \" \" +\r\n              capitalize(res.data.user.last_name),\r\n          });\r\n        }\r\n        setAssigneeList(orderBy(temp, \"label\"));\r\n        if (selectedAssignee == null || selectedAssignee == undefined) {\r\n          if (location.state?.assignee && temp.length > 0) {\r\n            let assignee_id = location.state.assignee;\r\n            setSelectedAssignee(temp.find((item) => item.value == assignee_id));\r\n            get_assignee_tc(\r\n              temp.find((item) => item.value == assignee_id).data\r\n            );\r\n          } else {\r\n            setSelectedAssignee({\r\n              data: res.data.user,\r\n              value: res.data.user.id,\r\n              label:\r\n                capitalize(res.data.user.first_name) +\r\n                \" \" +\r\n                capitalize(res.data.user.last_name),\r\n            });\r\n            get_assignee_tc(res.data.user);\r\n          }\r\n          setPdfTitle(\r\n            capitalize(res.data.user.first_name) +\r\n              \" \" +\r\n              capitalize(res.data.user.last_name)\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      if (selectedAssignee == null || selectedAssignee == undefined) {\r\n        setSelectedAssignee({\r\n          data: profile_details,\r\n          value: profile_details.id,\r\n          label:\r\n            capitalize(profile_details.first_name) +\r\n            \" \" +\r\n            capitalize(profile_details.last_name),\r\n        });\r\n        setPdfTitle(\r\n          capitalize(profile_details.first_name) +\r\n            \" \" +\r\n            capitalize(profile_details.last_name)\r\n        );\r\n        get_assignee_tc(profile_details);\r\n      }\r\n    }\r\n  }, [update]);\r\n  useEffect(() => {\r\n    if (location.state?.assignee && assigneeList.length > 0) {\r\n      let assignee_id = location.state.assignee;\r\n      console.log(\"predefined id\", assignee_id);\r\n      console.log(\r\n        \"found user\",\r\n        assigneeList.find((item) => item.value == assignee_id)\r\n      );\r\n      // setSelectedAssignee(assigneeList.find(item=>item.value==assignee_id))\r\n      setSelectedAssignee(\r\n        assigneeList.find((item) => item.value == assignee_id)\r\n      );\r\n      setPdfTitle(assigneeList.find((item) => item.value == assignee_id).label);\r\n      get_assignee_tc(\r\n        assigneeList.find((item) => item.value == assignee_id).data\r\n      );\r\n      console.log(\r\n        assigneeList.find((item) => item.value == assignee_id).data,\r\n        \"from useeffect\"\r\n      );\r\n    }\r\n  }, [assigneeList]);\r\n  const validateEditForm = (values) => {\r\n    const errors = {};\r\n\r\n    if (!values.startDate)\r\n      errors.startDate = \"Start Date selection is required\";\r\n    if (!values.todate) errors.todate = \"To date selection is required\";\r\n    return errors;\r\n  };\r\n\r\n  const editForm = useFormik({\r\n    initialValues: {\r\n      assigneeSelect: sessionStorage.getItem(USER_ID),\r\n      assigneeSelectPM: sessionStorage.getItem(USER_ID),\r\n      startDate: \"\",\r\n      todate: \"\",\r\n    },\r\n    validateOnBlur: true,\r\n    validateOnChange: true,\r\n    validate: validateEditForm,\r\n    onSubmit: getTimeCards,\r\n  });\r\n\r\n  const colourStyles = {\r\n    // control: (styles, state) => ({ ...styles,height:\"35px\", fontSize: '14px !important', lineHeight: '1.42857', borderRadius: \"8px\",borderRadius:\".25rem\",color:\"rgb(133,133,133)\",border:state.isFocused ? '2px solid #0065ff' :'inherit'}),\r\n    option: (provided, state) => ({ ...provided, fontSize: \"14px !important\" }),\r\n  };\r\n  {\r\n    /**export fetched tabledata to excel */\r\n  }\r\n  const fileType =\r\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n  const fileExtension = \".xlsx\";\r\n\r\n  const exportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title =\r\n      \"Timecard of\" +\r\n      \" \" +\r\n      selectedAssignee.data.first_name +\r\n      \" \" +\r\n      selectedAssignee.data.last_name;\r\n    const headers = [\r\n      [\r\n        \"WP\",\r\n        \"Project Name\",\r\n        \"Task Title\",\r\n        \"Description\",\r\n        \"Hour(s)\",\r\n        \"Type\",\r\n        \"Date Created\",\r\n      ],\r\n    ];\r\n    const uData = pdfData.map((elt, idx) => [\r\n      elt.data.project.work_package_number,\r\n      elt.data.project.sub_task,\r\n      elt.data.project.task_title,\r\n      elt.data.actual_work_done,\r\n      elt.data.hours_today,\r\n      elt.data.time_type,\r\n      elt.data.date_created,\r\n    ]);\r\n    let content = {\r\n      startY: 145,\r\n      head: headers,\r\n      body: uData,\r\n    };\r\n\r\n    let day = new Date();\r\n    let time = day.toLocaleString(\"en-US\", {\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n      hour12: true,\r\n    });\r\n    day = moment(day).format(\"DD/MM/YY\");\r\n    const edate = moment(endDate).format(\"DD/MM/YYYY\");\r\n    doc.setFontSize(17);\r\n    doc.text(170, 50, \"Datasoft Manufacturing & Assembly\");\r\n    doc.setFontSize(13);\r\n    doc.text(245, 75, \"Gulshan Branch\");\r\n    doc.setFontSize(11);\r\n    doc.text(42, 105, \"Employee Time Card\");\r\n    doc.text(410, 105, \"Week-Ending: \" + edate); //+ edate)\r\n    doc.text(\r\n      42,\r\n      125,\r\n      \"Name: \" +\r\n        selectedAssignee.data.first_name +\r\n        \" \" +\r\n        selectedAssignee.data.last_name\r\n    ); //+ name)\r\n\r\n    let date = new Date();\r\n    doc.autoTable(content);\r\n    doc.text(\r\n      42,\r\n      doc.lastAutoTable.finalY + 25,\r\n      \"From \" + startDate + \" to \" + endDate\r\n    );\r\n    doc.text(\r\n      250,\r\n      doc.lastAutoTable.finalY + 25,\r\n      \" Total Hours \" + Number(totalHrs).toFixed(2)\r\n    );\r\n    doc.text(\r\n      396,\r\n      doc.lastAutoTable.finalY + 25,\r\n      \"Submitted on : \" + time + \"  \" + day\r\n    );\r\n    return doc;\r\n  };\r\n\r\n  const showModal = (tableItem) => {\r\n    setRow(tableItem.data);\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  const onAddItem = () => {\r\n    setmodalAddItem(false);\r\n    get_assignee_tc(selectedAssignee.data);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once submitted, you will not be able to revert!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        let temp = \"\";\r\n        for (let i = 0; i < usersData.length; i++) {\r\n          //console.log(\"data\", usersData[i]);\r\n          // temp.push(usersData[i].data.id)\r\n          if (i == usersData.length - 1) {\r\n            temp += usersData[i].data.id;\r\n          } else {\r\n            temp += usersData[i].data.id + \",\";\r\n          }\r\n        }\r\n\r\n        let doc = exportPDF();\r\n        let formData = new FormData();\r\n        formData.append(\"employee\", selectedAssignee.value);\r\n        formData.append(\"time_cards\", temp);\r\n        formData.append(\"week_start\", startDate);\r\n        formData.append(\"week_end\", endDate);\r\n        formData.append(\"pdf_file\", doc.output(\"datauristring\"));\r\n\r\n        FILE_API.post(\"wbs/time-card/submit/\", formData).then((res) => {\r\n          console.log(res.data);\r\n          let day = new Date();\r\n          const weekday = [\r\n            \"Sunday\",\r\n            \"Monday\",\r\n            \"Tuesday\",\r\n            \"Wednesday\",\r\n            \"Thursday\",\r\n            \"Friday\",\r\n            \"Saturday\",\r\n          ];\r\n          let days = weekday[day.getDay()];\r\n          let todayDate = moment(day).format(\"DD-MM-YYYY\");\r\n\r\n          // dispatch(fetchAllTimecardsPmThunk(selectedAssignee.value))\r\n          get_assignee_tc(selectedAssignee.data);\r\n          doc.save(\r\n            selectedAssignee.data.first_name +\r\n              \"_\" +\r\n              selectedAssignee.data.last_name +\r\n              \"_\" +\r\n              days +\r\n              \"_\" +\r\n              todayDate +\r\n              \".pdf\"\r\n          );\r\n          window.open(doc.output(\"bloburl\"), \"_blank\");\r\n          swal(\r\n            \"Submitted\",\r\n            \"Your selected time cards are submitted!\",\r\n            \"success\"\r\n          );\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const dateRange = () => {\r\n    var sdate = new Date();\r\n    var edate = new Date();\r\n\r\n    for (let i = 0; i < 7; i++) {\r\n      if (sdate.getDay() === 0) {\r\n        console.log(\"start\", sdate);\r\n        break;\r\n      } else {\r\n        sdate = moment(sdate).subtract(1, \"day\").toDate();\r\n      }\r\n    }\r\n    console.log(\"end date\", edate);\r\n\r\n    setStartDate(moment(sdate).format(\"YYYY-MM-DD\"));\r\n    setEndDate(nextSatDay());\r\n    // editForm.setValues({\r\n    //   assigneeSelect: sessionStorage.getItem(USER_ID),\r\n    //   assigneeSelectPM: sessionStorage.getItem(USER_ID),\r\n    //   startDate: moment(sdate).format('YYYY-MM-DD'),\r\n    //   todate:  moment(edate).format('YYYY-MM-DD'),\r\n    // })\r\n    return {\r\n      start: moment(sdate).format(\"YYYY-MM-DD\"),\r\n      // end: moment(edate).format(\"YYYY-MM-DD\"),\r\n      end: nextSatDay(),\r\n    };\r\n  };\r\n  const nextSatDay = () => {\r\n    var satday = new Date();\r\n    for (let i = 0; i < 7; i++) {\r\n      if (satday.getDay() === 6) {\r\n        console.log(\"sat\", satday);\r\n        break;\r\n      } else {\r\n        satday = moment(satday).add(1, \"day\").toDate();\r\n      }\r\n    }\r\n    satday = moment(satday).format(\"YYYY-MM-DD\");\r\n    console.log(\"satday\", satday)\r\n    return satday;\r\n  };\r\n\r\n  const show_add_item_btn = () => {\r\n    if (editForm.values.assigneeSelectPM == sessionStorage.getItem(USER_ID)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {row != null && row != undefined && (\r\n        <EditTimeCard\r\n          data={row}\r\n          show={show_edit_modal}\r\n          onClose={() => {\r\n            setShowEditModal(false);\r\n            get_assignee_tc(selectedAssignee.data);\r\n          }}\r\n        />\r\n      )}\r\n      {selectedAssignee && (\r\n        <AddTimecardItms\r\n          // toggle={toggleModal}\r\n          employee={selectedAssignee.value}\r\n          show={modaladdItem}\r\n          onClose={onAddItem}\r\n          onAdd={editForm.handleSubmit}\r\n        ></AddTimecardItms>\r\n      )}\r\n      <CContainer>\r\n        <CRow className=\"justify-content-between\">\r\n          <CCol>\r\n            <h3 className=\"timecards-page-header mb-3\">\r\n              Actual Hours of this week\r\n            </h3>\r\n          </CCol>\r\n        </CRow>\r\n        <CForm>\r\n          <CRow>\r\n            {/**assignees */}\r\n            <CCol xl=\"3\" lg=\"3\" md=\"6\">\r\n              {has_permission(\"projects.add_projects\") && (\r\n                <div>\r\n                  <CLabel className=\"custom-label-5\" htmlFor=\"assigneeSelectPM\">\r\n                    Select Employee\r\n                  </CLabel>\r\n                  <Select\r\n                    closeMenuOnSelect={true}\r\n                    aria-labelledby=\"assigneeSelectPM\"\r\n                    id=\"assigneeSelectPM\"\r\n                    minHeight=\"35px\"\r\n                    placeholder={\r\n                      capitalize(profile_details.first_name) +\r\n                      \" \" +\r\n                      capitalize(profile_details.last_name)\r\n                    }\r\n                    isClearable={false}\r\n                    isMulti={false}\r\n                    onChange={handleAssigneeChange}\r\n                    classNamePrefix=\"custom-forminput-6\"\r\n                    options={assigneeList}\r\n                    styles={colourStyles}\r\n                    value={selectedAssignee}\r\n                  />\r\n                </div>\r\n              )}\r\n            </CCol>\r\n            <CRow className=\"mt-4\">\r\n              <CCol>\r\n                {/* <CLabel className=\"custom-label-5\" htmlFor=\"assigneeSelect\">\r\n                  Company :{\" \"}\r\n                  {\r\n                    selectedAssignee?.data?.slc_details?.slc?.department\r\n                      ?.company?.name\r\n                  }\r\n                </CLabel> */}\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol md=\"4\">\r\n                <CLabel className=\"custom-label-5\" htmlFor=\"assigneeSelect\">\r\n                  Employee Name :{\" \"}\r\n                  {capitalize(selectedAssignee?.data?.first_name) +\r\n                    \" \" +\r\n                    capitalize(selectedAssignee?.data?.last_name)}\r\n                </CLabel>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol>\r\n                <CLabel className=\"custom-label-5\" htmlFor=\"assigneeSelect\">\r\n                  Weekending :{\" \"}\r\n                  {moment(nextSatDay()).format(\"dddd, DD MMMM YYYY\")}\r\n                </CLabel>\r\n              </CCol>\r\n            </CRow>\r\n            {show_add_item_btn() == true && (\r\n              <div className=\"format-buttons mt-3 mb-3\">\r\n                <CButton\r\n                  className=\"file-format-download\"\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    setmodalAddItem(true);\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  + Add Item\r\n                </CButton>\r\n              </div>\r\n            )}\r\n\r\n            {/**table for displaying all the entries */}\r\n            <CCol md=\"12\">\r\n              <div className=\"\">\r\n                <CDataTable\r\n                  items={usersData}\r\n                  fields={[\r\n                    {\r\n                      key: \"WP\",\r\n                      _style: { width: \"5%\" },\r\n                      _classes: \"font-weight-bold\",\r\n                    },\r\n                    \"Project Name\",\r\n                    \"Task Title\",\r\n                    \"Description\",\r\n                    \"Hour(s)\",\r\n                    \"Type\",\r\n                    \"Date Created\",\r\n                    \"Action\",\r\n                  ]}\r\n                  primary\r\n                  hover\r\n                  striped\r\n                  bordered\r\n                  sorter\r\n                  //columnFilter\r\n                  size=\"sm\"\r\n                  itemsPerPage={20}\r\n                  pagination\r\n                  scopedSlots={{\r\n                    Action: (item) => (\r\n                      <td>\r\n                        {item.data.submitted == false ? (\r\n                          <CBadge>\r\n                            <CButton\r\n                              onClick={() => {\r\n                                showModal(item);\r\n                              }}\r\n                              size=\"sm\"\r\n                              type=\"button\"\r\n                              color=\"primary\"\r\n                            >\r\n                              Edit\r\n                            </CButton>\r\n                          </CBadge>\r\n                        ) : (\r\n                          <CBadge>\r\n                            <CButton\r\n                              size=\"sm\"\r\n                              type=\"button\"\r\n                              color=\"secondary\"\r\n                              disabled\r\n                            >\r\n                              Edit\r\n                            </CButton>\r\n                          </CBadge>\r\n                        )}\r\n                      </td>\r\n                    ),\r\n                  }}\r\n                />\r\n                {totalHrs != 0 && (\r\n                  <div class=\"alert alert-info\" role=\"alert\">\r\n                    <CRow>\r\n                      <CCol md=\"5\"></CCol>\r\n                      <CCol md=\"3\">\r\n                        {\r\n                          <small>\r\n                            {\"     \"}\r\n                            From <b>\r\n                              {moment(startDate).format(\"DD-MMM-YY\")}\r\n                            </b>{\" \"}\r\n                            to <b>{moment(endDate).format(\"DD-MMM-YY\")}</b>\r\n                          </small>\r\n                        }\r\n                      </CCol>\r\n                      <CCol md=\"4\">\r\n                        {\r\n                          <small>\r\n                            {\"   \"}\r\n                            Total{\" \"}\r\n                            <b>\r\n                              {Number(totalHrs).toFixed(2)}{\" \"}\r\n                              {Number(totalHrs).toFixed(2) > 1\r\n                                ? \"hours\"\r\n                                : \"hour\"}\r\n                              &nbsp;\r\n                            </b>\r\n                          </small>\r\n                        }\r\n                      </CCol>\r\n                    </CRow>\r\n                  </div>\r\n                )}\r\n                <CRow className=\"justify-content-end mb-5\">\r\n                  <CCol md=\"1\" className=\"justify-content-end\">\r\n                    <CButton\r\n                      className=\"file-format-download\"\r\n                      type=\"button\"\r\n                      onClick={onSubmit}\r\n                      style={{ backgroundColor: \"#e55353\" }}\r\n                      disabled={non_submitted_total_tc == 0}\r\n                    >\r\n                      Submit\r\n                    </CButton>\r\n                    {/* <CButton className=\"file-format-download\">Print</CButton> */}\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n        </CForm>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\nexport default TimeCards;\r\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n"],"sourceRoot":""}