{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/@mui/material/LinearProgress/linearProgressClasses.js","../node_modules/@mui/material/LinearProgress/LinearProgress.js","pages/wbs-board/wbs-modal.js","components/scheduledMeetings/scheduledMeets.js","components/evms/evmsTable.js","components/projects-table/projectsTable.js","components/assignedProjects/assignedProjects.js","pages/dashboard/Dashboard.js"],"names":["_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","getLinearProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_t5","_t6","_excluded","indeterminate1Keyframe","keyframes","indeterminate2Keyframe","bufferKeyframe","getColorShade","theme","color","palette","mode","lighten","main","darken","LinearProgressRoot","styled","name","overridesResolver","props","styles","ownerState","root","capitalize","variant","_extends","position","overflow","display","height","zIndex","colorAdjust","backgroundColor","content","left","top","right","bottom","opacity","transform","LinearProgressDashed","dashed","marginTop","width","backgroundImage","backgroundSize","backgroundPosition","css","LinearProgressBar1","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","transition","transformOrigin","LinearProgressBar2","bar2Indeterminate","bar2Buffer","LinearProgress","React","inProps","ref","useThemeProps","className","valueBuffer","other","_objectWithoutPropertiesLoose","classes","slots","bar1","bar2","composeClasses","useUtilityClasses","useTheme","rootProps","inlineStyles","undefined","Math","round","direction","process","_jsxs","clsx","role","children","_jsx","style","WbsModal","console","log","useState","deliverableView","setDeliverableView","hrsWorked","setHrsWorked","dispatch","useDispatch","formWbsUpdate","useFormik","initialValues","project","data","id","assignee","title","status","description","start_date","end_date","hours_worked","progress","comments","deliverable","date_updated","actual_work_done","remaining_hours","validateOnChange","validateOnBlur","validate","values","errors","onSubmit","API","put","then","res","success","fetchProjectsForPMThunk","sessionStorage","getItem","USER_ID","fetchProjectsThunk","fetchWbsThunk","swal","text","message","icon","onClose","closeOnBackdrop","show","toggle","closeButton","task_delivery_order","sub_task","task_title","onChange","handleChange","fontSize","type","e","setFieldValue","target","length","disabled","max","isSubmitting","isValidating","onClick","handleSubmit","first_name","last_name","reporter","timeCardList","Array","from","map","item","hours_today","ScheduleMeetings","history","useHistory","meeting","useSelector","state","meetings","useEffect","fetchMeetingList","idx","room_id","agenda","medium","start_time","push","pathname","EvmsView","evmsList","calculateCPI","ev","ac","abs","earned_value","actual_cost","planned_value","ProjectsTableDashboard","projects","work_package_number","planned_hours","planned_delivery_date","AssignedProjectsDashboard","wbs","temp_data","forEach","element","updatedData","setUpdatedData","modal","setModal","modalData","setModalData","get","find","Dashboard","location","useLocation","useSnackbar","enqueueSnackbar","closeSnackbar","window","scrollTo","has_permission","memo"],"mappings":"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","file":"static/js/21.fccccfd1.chunk.js","sourcesContent":["export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLinearProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiLinearProgress', slot);\n}\nconst linearProgressClasses = generateUtilityClasses('MuiLinearProgress', ['root', 'colorPrimary', 'colorSecondary', 'determinate', 'indeterminate', 'buffer', 'query', 'dashed', 'dashedColorPrimary', 'dashedColorSecondary', 'bar', 'barColorPrimary', 'barColorSecondary', 'bar1Indeterminate', 'bar1Determinate', 'bar1Buffer', 'bar2Indeterminate', 'bar2Buffer']);\nexport default linearProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4,\n    _t5,\n    _t6;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useTheme from '../styles/useTheme';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getLinearProgressUtilityClass } from './linearProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TRANSITION_DURATION = 4; // seconds\n\nconst indeterminate1Keyframe = keyframes(_t || (_t = _`\n  0% {\n    left: -35%;\n    right: 100%;\n  }\n\n  60% {\n    left: 100%;\n    right: -90%;\n  }\n\n  100% {\n    left: 100%;\n    right: -90%;\n  }\n`));\nconst indeterminate2Keyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    left: -200%;\n    right: 100%;\n  }\n\n  60% {\n    left: 107%;\n    right: -8%;\n  }\n\n  100% {\n    left: 107%;\n    right: -8%;\n  }\n`));\nconst bufferKeyframe = keyframes(_t3 || (_t3 = _`\n  0% {\n    opacity: 1;\n    background-position: 0 -23px;\n  }\n\n  60% {\n    opacity: 0;\n    background-position: 0 -23px;\n  }\n\n  100% {\n    opacity: 1;\n    background-position: -200px -23px;\n  }\n`));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, variant],\n    dashed: ['dashed', `dashedColor${capitalize(color)}`],\n    bar1: ['bar', `barColor${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar1Indeterminate', variant === 'determinate' && 'bar1Determinate', variant === 'buffer' && 'bar1Buffer'],\n    bar2: ['bar', variant !== 'buffer' && `barColor${capitalize(color)}`, variant === 'buffer' && `color${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar2Indeterminate', variant === 'buffer' && 'bar2Buffer']\n  };\n  return composeClasses(slots, getLinearProgressUtilityClass, classes);\n};\n\nconst getColorShade = (theme, color) => {\n  if (color === 'inherit') {\n    return 'currentColor';\n  }\n\n  return theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.5);\n};\n\nconst LinearProgressRoot = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`], styles[ownerState.variant]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'block',\n  height: 4,\n  zIndex: 0,\n  // Fix Safari's bug during composition of different paint.\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  backgroundColor: getColorShade(theme, ownerState.color)\n}, ownerState.color === 'inherit' && ownerState.variant !== 'buffer' && {\n  backgroundColor: 'none',\n  '&::before': {\n    content: '\"\"',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'currentColor',\n    opacity: 0.3\n  }\n}, ownerState.variant === 'buffer' && {\n  backgroundColor: 'transparent'\n}, ownerState.variant === 'query' && {\n  transform: 'rotate(180deg)'\n}));\nconst LinearProgressDashed = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Dashed',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.dashed, styles[`dashedColor${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => {\n  const backgroundColor = getColorShade(theme, ownerState.color);\n  return _extends({\n    position: 'absolute',\n    marginTop: 0,\n    height: '100%',\n    width: '100%'\n  }, ownerState.color === 'inherit' && {\n    opacity: 0.3\n  }, {\n    backgroundImage: `radial-gradient(${backgroundColor} 0%, ${backgroundColor} 16%, transparent 42%)`,\n    backgroundSize: '10px 10px',\n    backgroundPosition: '0 -23px'\n  });\n}, css(_t4 || (_t4 = _`\n    animation: ${0} 3s infinite linear;\n  `), bufferKeyframe));\nconst LinearProgressBar1 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar1',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar1Indeterminate, ownerState.variant === 'determinate' && styles.bar1Determinate, ownerState.variant === 'buffer' && styles.bar1Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : theme.palette[ownerState.color].main\n}, ownerState.variant === 'determinate' && {\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}, ownerState.variant === 'buffer' && {\n  zIndex: 1,\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t5 || (_t5 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n    `), indeterminate1Keyframe));\nconst LinearProgressBar2 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar2',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar2Indeterminate, ownerState.variant === 'buffer' && styles.bar2Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left'\n}, ownerState.variant !== 'buffer' && {\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : theme.palette[ownerState.color].main\n}, ownerState.color === 'inherit' && {\n  opacity: 0.3\n}, ownerState.variant === 'buffer' && {\n  backgroundColor: getColorShade(theme, ownerState.color),\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t6 || (_t6 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;\n    `), indeterminate2Keyframe));\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLinearProgress'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    value,\n    valueBuffer,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const theme = useTheme();\n  const rootProps = {};\n  const inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      let transform = value - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar1.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      let transform = (valueBuffer || 0) - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar2.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(LinearProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other, {\n    children: [variant === 'buffer' ? /*#__PURE__*/_jsx(LinearProgressDashed, {\n      className: classes.dashed,\n      ownerState: ownerState\n    }) : null, /*#__PURE__*/_jsx(LinearProgressBar1, {\n      className: classes.bar1,\n      ownerState: ownerState,\n      style: inlineStyles.bar1\n    }), variant === 'determinate' ? null : /*#__PURE__*/_jsx(LinearProgressBar2, {\n      className: classes.bar2,\n      ownerState: ownerState,\n      style: inlineStyles.bar2\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default LinearProgress;","import { CContainer, CRow, CCol, CCard, CCardHeader, CCardBody, CForm, CLabel, CInput, CButton, CModal, CModalBody, CModalHeader, CModalFooter, CTextarea } from '@coreui/react';\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { form, useFormik } from 'formik';\r\nimport { API, USER_ID } from '../../Config';\r\nimport swal from 'sweetalert';\r\nimport { fetchProjectsForPMThunk, fetchProjectsThunk } from '../../store/slices/ProjectsSlice';\r\nimport { fetchWbsThunk } from '../../store/slices/WbsSlice';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\n\r\nconst WbsModal = (props) => {\r\n    console.log('props wbs modal: ', props)\r\n    // const modalData = useSelector(state => state.wbs.data)\r\n    const [deliverableView, setDeliverableView] = useState(true);\r\n    const [hrsWorked, setHrsWorked] = useState(true);\r\n    const dispatch = useDispatch()\r\n    const wbsStatusArray = [{\r\n        \"title\": \"To Do\",\r\n        \"status\": 1\r\n    }, {\r\n        \"title\": \"Ongoing\",\r\n        \"status\": 2\r\n    }, {\r\n        \"title\": \"Done\",\r\n        \"status\": 3\r\n    }]\r\n\r\n    const updateWbs = (data) => {\r\n        console.log(\"formWbsUpdate:\", data.remaining_hours)\r\n        data.remaining_hours = props.data.project.remaining_hours - formWbsUpdate.values.hours_worked;\r\n        API.put('wbs/update/' + props.data.id + '/', formWbsUpdate.values).then((res) => {\r\n            console.log('update result', res)\r\n            if (res.status == 200 && res.data.success == 'True') {\r\n                dispatch(fetchProjectsForPMThunk(sessionStorage.getItem(USER_ID)))\r\n                dispatch(fetchProjectsThunk(sessionStorage.getItem(USER_ID)))\r\n                dispatch(fetchWbsThunk(sessionStorage.getItem(USER_ID)))\r\n                swal({\r\n                    title: \"Good job!\",\r\n                    text: res.data.message,\r\n                    icon: \"success\",\r\n                });\r\n                props.onClose()\r\n            }\r\n        })\r\n    }\r\n\r\n    const validateWbsCreateForm = (values) => {\r\n        const errors = {};\r\n        if (!values.title) errors.title = \"Title is required!\";\r\n        if (!values.actual_work_done) errors.actual_work_done = \"Actual work done today is required! (250 charracters)\";\r\n        return errors;\r\n    }\r\n\r\n    const formWbsUpdate = useFormik({\r\n        initialValues: {\r\n            project: props.data.project.id,\r\n            assignee: props.data.assignee.id,\r\n            title: props.data.title,\r\n            status: props.data.status,\r\n            description: props.data.description,\r\n            start_date: props.data.start_date,\r\n            end_date: props.data.end_date,\r\n            hours_worked: props.data.hours_worked,\r\n            progress: props.data.progress,\r\n            comments: props.data.comments,\r\n            deliverable: props.data.deliverable,\r\n            date_updated: '',\r\n            actual_work_done: '',\r\n            remaining_hours: ''\r\n        },\r\n        validateOnChange: true,\r\n        validateOnBlur: true,\r\n        validate: validateWbsCreateForm,\r\n        onSubmit: (values) => updateWbs(values)\r\n    })\r\n\r\n    function is_form_submitting() {\r\n        console.log(formWbsUpdate.isSubmitting, formWbsUpdate.isValidating)\r\n        if (formWbsUpdate.isSubmitting && !formWbsUpdate.isValidating) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CModal closeOnBackdrop={false} closeOnBackdrop={false} show={props.show} onClose={props.toggle} size=\"xl\">\r\n                <CModalHeader closeButton>\r\n                    {props.data.project && props.data.project.task_delivery_order.title + \" / \"}\r\n                    {props.data.project && props.data.project.sub_task + \" / \"}\r\n                    {props.data.project && props.data.project.task_title}\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CRow>\r\n                        <div className=\"col-lg-8 mb-3 border-right\">\r\n                            <CForm>\r\n                                <CRow>\r\n                                    <div className=\"col-lg-12 mb-3\">\r\n                                        <CLabel className=\"custom-label-wbs5\">\r\n                                            Title\r\n                                        </CLabel>\r\n                                        <CInput id=\"title\" name=\"title\" className=\"custom-forminput-5\" onChange={formWbsUpdate.handleChange} value={formWbsUpdate.values.title} />\r\n                                        {formWbsUpdate.errors.title && <p className=\"error\" style={{ fontSize: '14px !important' }}>{formWbsUpdate.errors.title}</p>}\r\n                                    </div>\r\n                                    {/* <div className=\"col-lg-3 mb-3\">\r\n                                        <CLabel className=\"custom-label-wbs5\">\r\n                                            Status\r\n                                        </CLabel>\r\n                                        <select id=\"status\" name=\"status\" className=\"form-select\" onChange={formWbsUpdate.handleChange} value={formWbsUpdate.values.status}>\r\n                                            {wbsStatusArray.map((item, idx) => (\r\n                                                <option key={idx} value={item.status}>{item.title}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div> */}\r\n                                </CRow>\r\n                                <CRow>\r\n                                    <div className=\"col-lg-12 mb-3\">\r\n                                        <CLabel className=\"custom-label-wbs5\">\r\n                                            Descriptions\r\n                                        </CLabel>\r\n                                        <CTextarea id=\"description\" name=\"description\" className=\"custom-forminput-5 text-box-height\" onChange={formWbsUpdate.handleChange} value={formWbsUpdate.values.description}></CTextarea>\r\n                                    </div>\r\n                                </CRow>\r\n                                <CRow>\r\n                                    <div className=\"col-lg-6 mb-3\">\r\n                                        <CLabel className=\"custom-label-wbs5\">\r\n                                            Start date\r\n                                        </CLabel>\r\n                                        <CInput id=\"start_date\" name=\"start_date\" type=\"date\" className=\"custom-forminput-5\" onChange={formWbsUpdate.handleChange} value={formWbsUpdate.values.start_date}></CInput>\r\n                                    </div>\r\n                                    <div className=\"col-lg-6 mb-3\">\r\n                                        <CLabel className=\"custom-label-wbs5\">\r\n                                            End date\r\n                                        </CLabel>\r\n                                        <CInput id=\"end_date\" name=\"end_date\" type=\"date\" className=\"custom-forminput-5\" onChange={formWbsUpdate.handleChange} value={formWbsUpdate.values.end_date}></CInput>\r\n                                    </div>\r\n                                </CRow>\r\n                                {/*Actual work today */}\r\n                                <CRow>\r\n                                    <div className=\"col-lg-12 mb-3\">\r\n                                        <CLabel className=\"custom-label-wbs5\">Actual Work Today</CLabel>\r\n                                        <CInput id=\"actual_work_done\" type=\"text\" name=\"actual_work_done\" className=\"custom-forminpput-5\" onChange={(e) => {\r\n                                            formWbsUpdate.setFieldValue('actual_work_done', e.target.value); if (e.target.value == null || e.target.value.length == 0) { setHrsWorked(true) } else { setHrsWorked(false) }\r\n                                        }\r\n                                        } value={formWbsUpdate.values.actual_work_done}></CInput>\r\n                                        {formWbsUpdate.errors.actual_work_done && <p className=\"error\" style={{ fontSize: '14px !important' }}>{formWbsUpdate.errors.actual_work_done}</p>}\r\n                                    </div>\r\n                                </CRow>\r\n                                <CRow>\r\n                                    <div className=\"col-lg-6 mb-3\">\r\n                                        <CLabel className=\"custom-label-wbs5\">\r\n                                            Hours worked\r\n                                        </CLabel>\r\n                                        <CInput id=\"hours_worked\" name=\"hours_worked\" type=\"number\" className=\"custom-forminput-5\" onChange={formWbsUpdate.handleChange} value={formWbsUpdate.values.hours_worked} disabled={hrsWorked}></CInput>\r\n                                    </div>\r\n                                    <div className=\"col-lg-6 mb-3\">\r\n                                        <CLabel className=\"custom-label-wbs5\">\r\n                                            Progress(%)\r\n                                        </CLabel>\r\n                                        <CInput id=\"progress\" name=\"progress\" type=\"number\" max=\"100\" className=\"custom-forminput-5\" onChange={(e) => {\r\n                                            formWbsUpdate.setFieldValue('progress', e.target.value); if (e.target.value == '100') {\r\n                                                setDeliverableView(false);\r\n                                                formWbsUpdate.setFieldValue('deliverable', formWbsUpdate.values.deliverable)\r\n                                            } else {\r\n                                                setDeliverableView(true);\r\n                                                formWbsUpdate.setFieldValue('deliverable', \"\")\r\n                                            }\r\n                                        }} value={formWbsUpdate.values.progress}></CInput>\r\n                                    </div>\r\n                                </CRow>\r\n                                <CRow>\r\n                                    <div className=\"col-lg-12 mb-3\">\r\n                                        <CLabel className=\"custom-label-wbs5\">\r\n                                            Comments\r\n                                        </CLabel>\r\n                                        <CTextarea id=\"comments\" name=\"comments\" className=\"custom-forminput-5\" onChange={formWbsUpdate.handleChange} value={formWbsUpdate.values.comments}></CTextarea>\r\n                                    </div>\r\n                                </CRow>\r\n                                <CRow>\r\n                                    <div className=\"col-lg-12 mb-3\">\r\n                                        <CLabel className=\"custom-label-wbs5\">\r\n                                            Deliverable\r\n                                        </CLabel>\r\n                                        <CInput id=\"deliverable\" name=\"deliverable\" className=\"custom-forminput-5\" onChange={formWbsUpdate.handleChange} value={formWbsUpdate.values.deliverable} disabled={deliverableView} ></CInput>\r\n                                    </div>\r\n                                </CRow>\r\n                                {props.data.assignee.id == sessionStorage.getItem(USER_ID) && <div>{is_form_submitting() == true ? <LinearProgress /> :\r\n                                    <div>\r\n                                        <CButton type=\"button\" onClick={formWbsUpdate.handleSubmit} color=\"primary\">Update</CButton>{' '}\r\n                                        <CButton\r\n                                            color=\"secondary\"\r\n                                            onClick={props.toggle}\r\n                                        >Cancel</CButton>\r\n                                    </div>}\r\n                                </div>}\r\n                            </CForm>\r\n                        </div>\r\n                        <div className=\"col-lg-4 mb-3\">\r\n                            <div>\r\n                                <p>\r\n                                    Assignee:\r\n                                    <br></br>\r\n                                    {/* Pial Noman */}\r\n                                    <span className=\"wbs-reporter-name\">{props.data.assignee?.first_name != undefined && props.data.assignee.first_name + \" \" + props.data.assignee.last_name}</span>\r\n                                </p>\r\n                                <p>\r\n                                    Reporter:\r\n                                    <br></br>\r\n                                    {/* Pial Noman */}\r\n                                    <span className=\"wbs-reporter-name\">{props.data.reporter?.first_name != undefined && props.data.reporter.first_name + \" \" + props.data.reporter.last_name}</span>\r\n                                </p>\r\n                                <p>\r\n                                    Remaining hours:\r\n                                    <br></br>\r\n                                    {props.data.project?.remaining_hours}\r\n                                </p>\r\n                                {/**task list show */}\r\n                                <div className=\"task-list\">\r\n                                    <p>Task List:</p>\r\n                                    <ol className=\"task-list-show\">\r\n                                        {props.timeCardList?.data != undefined ? (Array.from(props.timeCardList.data).map((item) => (\r\n                                            <li className=\"task-list-show-item\">\r\n                                                {item.actual_work_done + \" ➤ \" + item.hours_today + \" hr(s)\"}\r\n                                                 {/* By {item.time_card_assignee.first_name + \" \" + item.time_card_assignee.last_name}  */}\r\n                                                <p><small>@ {item.date_updated} </small></p>\r\n                                            </li>\r\n                                        ))) : (\"No task has been done so far.\")}\r\n                                    </ol>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </CRow>\r\n                </CModalBody>\r\n            </CModal>\r\n        </>\r\n    )\r\n}\r\nexport default WbsModal;","import React from 'react'\r\nimport { CButton, CCard, CCardBody, CAlert } from '@coreui/react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchMeetingList } from \"../../store/slices/MeetingSlice\";\r\nimport { USER_ID } from \"../../Config\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ScheduleMeetings = () => {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const meeting = useSelector(state => state.meetings.data);\r\n    React.useEffect(() => {\r\n        dispatch(fetchMeetingList(sessionStorage.getItem(USER_ID)))\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div className=\"main-holder-projects\">\r\n                <h3 className=\"projectsHeader\">\r\n                    Scheduled Meetings\r\n                </h3>\r\n\r\n                <div className=\"card-holder1 \">\r\n                    {meeting != undefined && meeting.slice(0, 3).map((item, idx) => (\r\n                        <CCard className=\"project-card2\" key={idx}>\r\n                            <CCardBody>\r\n                                {item.room_id != \"\" &&\r\n                                <h6 className=\"id-no1\">room id: #{item.room_id}</h6>}\r\n                                {item.room_id == \"\" && <h6 className=\"id-no1\">meeting id: #{item.id}</h6>}\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Agenda:</span> {item.agenda}</h5>\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Location:</span> {item.medium == 0 ? 'Physical' :'Virtual'}</h5>\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Scheduled Date &amp; Time :</span> {item.start_time}</h5>\r\n                            </CCardBody>\r\n\r\n                        </CCard>\r\n                    ))}\r\n                    { /**If no meetings */}\r\n                    {meeting == undefined || meeting == '' ? (\r\n                        <CAlert className=\"no-value-show-alert\" color=\"primary\">Currently there are no upcoming meetings</CAlert>\r\n                    ) : <></>}\r\n                </div>\r\n                {meeting != undefined  && <div className=\"button-holder3\"><CButton className=\"tiny-buttons1\"  onClick={() => history.push({pathname:'/dashboard/meetings'})}>View all</CButton></div>}\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nexport default ScheduleMeetings\r\n","import React, { useState } from 'react';\r\nimport './evmsTable.css';\r\nimport { CButton, CCard, CCardBody, CAlert } from '@coreui/react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchEvmsThunk } from '../../store/slices/EvmsSlice';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nconst EvmsView = () => {\r\n    let history = useHistory();\r\n    \r\n    var cpiVal\r\n    const evmsList = useSelector(state => state.evmsList.data)\r\n    console.log('evms from dashboard', evmsList)\r\n    function calculateCPI(ev,ac){\r\n      let val = Math.abs(ev/ac)\r\n\r\n      return val;\r\n\r\n}\r\n\r\n\r\n  \r\n   \r\n    return (\r\n        <>\r\n            <div className=\"main-holder-projects\">\r\n                <h3 className=\"projectsHeader\">\r\n                    EVMS Summary\r\n                </h3>\r\n                <div className=\"card-holder1\">\r\n                    {evmsList != undefined && Array.from(evmsList).slice(0, 3).map((item, idx) => (\r\n                        <CCard className=\"project-card1\" key={idx}>\r\n                            <CCardBody>\r\n                                <h6 className=\"id-no1\">{item.project.task_delivery_order.title} / {item.project.sub_task}</h6>\r\n                                <h5 className=\"card-details2\"><span className=\"p-header-4\">Cost Performance Index (CPI) :</span><span> {calculateCPI(item.earned_value,item.actual_cost)}</span><small className=\"ml-1 star-color\">*(CPI{'>'}1, within budget.CPI {'<'}1, over budget)</small></h5>\r\n                                <h5 className=\"card-details2\"><span className=\"p-header-4\">Schedule Performance Index (SPI) :</span><span> {calculateCPI(item.earned_value,item.project.planned_value)}</span><small className=\"ml-1 star-color\">*(SPI {'>'}1, within schedule,SPI {'<'}1, behind schedule)</small></h5>\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    ))}\r\n                    { /**If no evmsList */}\r\n                    {evmsList == undefined || evmsList == 0 ? (\r\n\r\n\r\n\r\n                        <CAlert className=\"no-value-show-alert\" color=\"primary\">Currently there are no projects assigned to you</CAlert>\r\n\r\n\r\n                    ) : null\r\n\r\n\r\n                    }\r\n\r\n                </div>\r\n                {evmsList != undefined &&\r\n                    <div className=\"button-holder3\"><CButton className=\"tiny-buttons1\" onClick={() => history.push({ pathname: '/dashboard/EVMS/view' })}>View all</CButton></div>}\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default EvmsView;","import React, { useEffect } from 'react';\r\nimport './projectsTable.css';\r\nimport { CButton, CCard, CCardBody, CAlert } from '@coreui/react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { fetchProjectsThunk } from \"../../store/slices/ProjectsSlice\";\r\n// import { USER_ID } from \"../../Config\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst ProjectsTableDashboard = () => {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const projects = useSelector(state => state.projects.data);\r\n    useEffect(() => {\r\n        console.log(\"ProjectsList\", projects)\r\n    }, [projects])\r\n    return (\r\n        <>\r\n            <div className=\"main-holder-projects\">\r\n                <h3 className=\"projectsHeader\">\r\n                    Assigned Projects\r\n                </h3>\r\n\r\n                <div className=\"card-holder1\">\r\n                    {projects != undefined && Array.from(projects).slice(0, 3).map((item, idx) => (\r\n                        <CCard className=\"project-card1\" key={idx} onClick={() => history.push({ pathname: 'dashboard/Projects/assigned-projects/details/' + item.project.work_package_number + '/' })}>\r\n                            <CCardBody>\r\n                                {/* <h6 className=\"id-no1\">Work Package Number: # {item.project.work_package_number}</h6> */}\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Project Name: </span> {item.project.sub_task}</h5>\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Planned Hours: </span> {item.project.planned_hours}</h5>\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Remaining Hours: </span> {item.project.remaining_hours}</h5>\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Planned Delivery Date : </span>{item.project.planned_delivery_date}</h5>\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    ))}\r\n                    { /**If no projects */}\r\n                    {projects == '' || projects == undefined ? (\r\n\r\n\r\n\r\n                        <CAlert className=\"no-value-show-alert\" color=\"primary\">Currently there are no projects assigned to you</CAlert>\r\n\r\n\r\n                    ) : null\r\n\r\n\r\n                    }\r\n                </div>\r\n                {projects != undefined && <div className=\"button-holder3\"><CButton className=\"tiny-buttons1\" onClick={() => history.push({ pathname: '/dashboard/Projects/assigned-projects' })}>View all</CButton></div>}\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ProjectsTableDashboard;\r\n","import React, { useState } from 'react';\r\nimport { CButton, CCard, CCardBody, CAlert } from '@coreui/react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchWbsThunk } from '../../store/slices/WbsSlice';\r\nimport WbsModal from \"../../pages/wbs-board/wbs-modal\";\r\n// import { fetchUserWiseWbsThunk } from '../../store/slices/WbsSlice';\r\nimport { API, USER_ID } from \"../../Config\";\r\nconst AssignedProjectsDashboard = () => {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const wbs = useSelector(state => {\r\n        // state.wbs.data\r\n        var temp_data = [];\r\n        state.wbs.data.forEach(element => {\r\n            if (element.assignee.id == sessionStorage.getItem(USER_ID)) {\r\n                temp_data.push(element)\r\n                // console.log(element)\r\n            }\r\n        });\r\n        return temp_data;\r\n    });\r\n    console.log(wbs)\r\n    const [updatedData, setUpdatedData] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [modalData, setModalData] = useState(null);\r\n    const editWbsModal = (value) => {\r\n        API.get('wbs/time-card/list/' + value + '/').then((res) => {\r\n            console.log('time-card list result', res);\r\n            setUpdatedData(res.data);\r\n        })\r\n        setModalData(wbs.find(element => element.id == value));\r\n        setModal(true);\r\n    }\r\n    const toggle = () => {\r\n        setModalData(null);\r\n        setModal(!modal);\r\n    }\r\n\r\n    const onWbsUpdate = () => {\r\n        setModal(false)\r\n        dispatch(fetchWbsThunk(sessionStorage.getItem(USER_ID)))\r\n        setModalData(null);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        // dispatch(fetchUserWiseWbsThunk(sessionStorage.getItem(USER_ID)))\r\n    }, [])\r\n    return (\r\n        <>\r\n\r\n            <div className=\"main-holder-projects\">\r\n                <h3 className=\"projectsHeader\">\r\n                    WBS List\r\n                </h3>\r\n\r\n                <div className=\"card-holder1\">\r\n                    {wbs != undefined && wbs.slice(0, 3).map((item, idx) => (\r\n                        // item.assignee.id == sessionStorage.getItem(USER_ID) && \r\n                        <CCard className=\"project-card1\" key={idx} onClick={() => editWbsModal(item.id)}>\r\n                            <CCardBody>\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Project: </span> {item.project.sub_task}</h5>\r\n                                <h6 className=\"card-details1\"><span className=\"p-header-3\">WBS Title:</span> {item.title}</h6>\r\n                                <h6 className=\"card-details1\"><span className=\"p-header-3\">WBS Description:</span> {item.description}</h6>\r\n                                <h6 className=\"card-details1\"><span className=\"p-header-3\">End Date :</span> {item.end_date}</h6>\r\n\r\n                            </CCardBody>\r\n\r\n                        </CCard>\r\n                    ))}\r\n                    { /**If no wbs */}\r\n                    {wbs == undefined || wbs == 0 ? (\r\n\r\n\r\n\r\n                        <CAlert className=\"no-value-show-alert\" color=\"primary\">Currently there are no WBS assigned to you</CAlert>\r\n\r\n\r\n                    ) : null\r\n\r\n\r\n                    }\r\n                </div>\r\n                {wbs != undefined && <div className=\"button-holder3\"><CButton className=\"tiny-buttons1\" onClick={() => history.push({ pathname: '/dashboard/WBS/board' })}>View all</CButton></div>}\r\n            </div>\r\n            {modalData != null && <WbsModal show={modal} onClose={onWbsUpdate} toggle={toggle} data={modalData} timeCardList={updatedData} ></WbsModal>}\r\n        </>\r\n    )\r\n}\r\nexport default AssignedProjectsDashboard;\r\n","import React, { Suspense } from 'react';\r\nimport { CCol, CContainer, CFade, CRow } from '@coreui/react';\r\nimport innerRoutes from '../../routes/DashboardRoutes'\r\n  \r\nimport './dashboard.css';\r\nimport ScheduledMeetings from '../../components/scheduledMeetings/scheduledMeets'\r\nimport EvmsShow  from '../../components/evms/evmsTable'\r\nimport ProjectTables from '../../components/projects-table/projectsTable'\r\nimport AssignedToMe from '../../components/assignedProjects/assignedProjects';\r\nimport { useLocation } from 'react-router';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useDispatch } from 'react-redux';\r\nimport { has_permission } from '../../helper';\r\nconst loading = (\r\n    <div className=\"pt-3 text-center\">\r\n      <div className=\"sk-spinner sk-spinner-pulse\"></div>\r\n    </div>\r\n)\r\n\r\nconst Dashboard=()=> {\r\n    let location = useLocation()\r\n    const dispatch = useDispatch()\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    React.useEffect(()=>{\r\n        window.scrollTo(0, 0);\r\n        console.log('dashboard mounted',location.state)\r\n        if(location.state?.from == 'login'){\r\n            enqueueSnackbar('Welcome ',{variant:'success'})\r\n        }\r\n        if(location.state?.message){\r\n            console.log('message',location.state.message)\r\n            enqueueSnackbar(location.state.message,{variant:'warning'})\r\n        }\r\n        //console.log(new Date(JSON.parse(sessionStorage.getItem('TOKEN')).time).toISOString())\r\n    },[])\r\n    return (\r\n        <>\r\n        <CContainer>\r\n            {/**Row for showing da tables */}\r\n            <CRow>\r\n                <div className=\"col-lg-5 offset-lg-1\"><ProjectTables/></div>\r\n                <div className=\"col-lg-5\"><AssignedToMe/></div> \r\n                <div className=\"col-lg-5 offset-lg-1\"><ScheduledMeetings/></div>\r\n                {has_permission('evms.view_evms') && <div className=\"col-lg-5 \"><EvmsShow/></div>}\r\n            </CRow>\r\n        </CContainer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default React.memo(Dashboard)\r\n"],"sourceRoot":""}