{"version":3,"sources":["pages/profile/profileView.js","assets/icons/Showpass-show.svg","assets/icons/Hide.svg"],"names":["UserProfile","id","useParams","useState","revealOldPwd","setRevealOldPwd","revealNewPwd","setRevealNewPwd","revealConfPwd","setRevealConfPwd","profile_details","setProfileDetails","initialBloodGroup","setInitialBloodGroup","inputFile","useRef","setImage","BASE_URL","profile_pic","avatar","setAvatar","visible","setVisible","dispatch","useDispatch","profileEditForm","console","log","profile_update_form","setValues","first_name","last_name","email","phone","address","blood_group","change_pass_form","useFormik","initialValues","old_password","new_password","new_password_confirm","validateOnChange","validateOnBlur","validate","values","errors","String","length","onSubmit","formData","FormData","Object","entries","key","value","append","API","put","then","res","status","resetForm","swal","catch","err","response","update_profile_image","image","image_form_data","FILE_API","post","sessionStorage","getItem","USER_ID","useEffect","get","data","window","scrollTo","label","success","fetchPersonalDetails","capitalize","string","undefined","charAt","toUpperCase","slice","toLowerCase","closeOnBackdrop","alignment","show","onClose","closeButton","className","htmlFor","type","name","onChange","handleChange","readOnly","touched","style","color","options","onClick","handleSubmit","disabled","isValid","activeTab","variant","alt","src","display","ref","event","URL","createObjectURL","onImageChange","target","files","current","click","slc_details","slc","title","hidePwdImg","showPwdImg","prevState"],"mappings":"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","file":"static/js/26.7d90d516.chunk.js","sourcesContent":["import CIcon from \"@coreui/icons-react\";\r\nimport {\r\n    CLabel,\r\n    CContainer,\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabPane,\r\n    CTabContent,\r\n    CRow,\r\n    CTabs,\r\n    CCard,\r\n    CButton,\r\n    CImg,\r\n    CCardBody,\r\n    CModal,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CModalBody,\r\n    CForm,\r\n    CInput,\r\n} from \"@coreui/react\";\r\nimport Select from 'react-select'\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./profileView.css\";\r\nimport PassWordChangeForm from \"../../components/changeUserPasswordForm/changePassword\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport { API, BASE_URL, FILE_API, USER_ID } from \"../../Config\";\r\nimport { fetchPersonalDetails } from \"../../store/slices/ProfileSlice\";\r\nimport swal from \"sweetalert\";\r\nimport hidePwdImg from '../../assets/icons/Showpass-show.svg';\r\nimport showPwdImg from '../../assets/icons/Hide.svg';\r\nimport { useParams } from 'react-router-dom';\r\nconst UserProfile = () => {\r\n    const onButtonClick = () => {\r\n        // `current` points to the mounted file input element\r\n    };\r\n    const blood_groups = [\r\n        { value: 'A+', label: 'A+' },\r\n        { value: 'A-', label: 'A-' },\r\n        { value: 'B+', label: 'B+' },\r\n        { value: 'B-', label: 'B-' },\r\n        { value: 'AB+', label: 'AB+' },\r\n        { value: 'AB-', label: 'AB-' },\r\n        { value: 'O+', label: 'O+' },\r\n        { value: 'O-', label: 'O-' },\r\n    ]\r\n    const { id } = useParams()\r\n    const [revealOldPwd, setRevealOldPwd] = useState(false);\r\n    const [revealNewPwd, setRevealNewPwd] = useState(false);\r\n    const [revealConfPwd, setRevealConfPwd] = useState(false);\r\n    // const profile_details = useSelector(state => state.profile.data)\r\n    const [profile_details, setProfileDetails] = useState()\r\n\r\n    const [initialBloodGroup, setInitialBloodGroup] = useState(\"\")\r\n    const inputFile = useRef(null)\r\n    const [image, setImage] = useState()\r\n    const [avatar, setAvatar] = useState(profile_details ? (BASE_URL + profile_details.profile_pic) : \"avatars/user-avatar-default.png\")\r\n    const [visible, setVisible] = useState(false);\r\n    const dispatch = useDispatch()\r\n    const onImageChange = (image) => {\r\n        setImage(image)\r\n        setAvatar(URL.createObjectURL(image))\r\n        update_profile_image(image)\r\n    }\r\n    const changeImageClick = () => {\r\n        inputFile.current.click()\r\n    }\r\n    const profileEditForm = () => {\r\n        console.log(\"values\")\r\n        setVisible(!visible);\r\n        profile_update_form.setValues({\r\n            first_name: profile_details.first_name,\r\n            last_name: profile_details.last_name,\r\n            email: profile_details.email,\r\n            phone: profile_details.phone,\r\n            address: profile_details.address,\r\n            blood_group: profile_details.blood_group\r\n        })\r\n    }\r\n    const handleBloodGroupChange = (values) => {\r\n        console.log(values)\r\n        profile_update_form.setValues({\r\n            first_name: profile_update_form.values.first_name,\r\n            last_name: profile_update_form.values.last_name,\r\n            email: profile_update_form.values.email,\r\n            phone: profile_update_form.values.phone,\r\n            address: profile_update_form.values.address,\r\n            blood_group: values.value\r\n        })\r\n        setInitialBloodGroup({ value: values.value, label: values.label })\r\n    }\r\n    const validateChangePassForm = (values) => {\r\n        const errors = {}\r\n        if (!values.old_password) errors.old_password = \"Old Password Required\"\r\n        if (String(values.new_password).length < 8 || !values.new_password || values.new_password != values.new_password_confirm) errors.new_password = \"Invalid New Password\"\r\n        return errors\r\n    }\r\n    const change_password = (values) => {\r\n        let formData = new FormData()\r\n        console.log('values', values)\r\n        for (const [key, value] of Object.entries(change_pass_form.values)) {\r\n            if (key != 'new_password_confirm') {\r\n                formData.append(key, value)\r\n            }\r\n        }\r\n        API.put('auth/change/password/', formData).then((res) => {\r\n            console.log(res)\r\n            if (res.status == 200) {\r\n                change_pass_form.resetForm()\r\n                swal('Updated', 'Your Password has been changed', 'success')\r\n            }\r\n        }).catch(err => {\r\n            if (err.response.status == 400) {\r\n                swal('Incorrect', 'Bad Request', 'warning')\r\n            }\r\n        })\r\n    }\r\n    const change_pass_form = useFormik({\r\n        initialValues: {\r\n            old_password: \"\",\r\n            new_password: \"\",\r\n            new_password_confirm: ''\r\n        },\r\n        validateOnChange: true,\r\n        validateOnBlur: true,\r\n        validate: validateChangePassForm,\r\n        onSubmit: change_password\r\n    })\r\n    const validate_profile_update_form = (values) => {\r\n        const errors = {}\r\n        if (!values.first_name) errors.first_name = \"First Name is required\"\r\n        if (!values.last_name) errors.last_name = \"Last Name is required\"\r\n        if (!values.email) errors.email = \"Email is required\"\r\n        if (!values.address) errors.address = \"Address is required\"\r\n        if (!values.blood_group) errors.blood_group = \"Blood group is required\"\r\n        return errors\r\n    }\r\n    const update_profile = (values) => {\r\n        console.log(values)\r\n        API.post('auth/profile/update/' + sessionStorage.getItem(USER_ID) + '/', profile_update_form.values).then((res) => {\r\n            console.log(res)\r\n            if (res.status == 201 && res.data.success == 'True') {\r\n                dispatch(fetchPersonalDetails(sessionStorage.getItem(USER_ID)))\r\n                setVisible(false)\r\n                swal('Updated!', 'Your Profile has been updated', 'success')\r\n            }\r\n        })\r\n    }\r\n    const update_profile_image = (image) => {\r\n        let image_form_data = new FormData()\r\n        image_form_data.append('profile_pic', image)\r\n        console.log('image', image)\r\n        FILE_API.post('auth/change/profile/image/' + sessionStorage.getItem(USER_ID) + '/', image_form_data).then((res) => {\r\n            if (res.status == 201) {\r\n                swal('Updated!', 'Profile Picture Updated', 'success')\r\n            }\r\n        }).catch(err => {\r\n            if (err.status == 400) {\r\n                swal('Incorrect', 'Bad Request', 'warning')\r\n            }\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        // window.scrollTo(0, 0);\r\n        // setInitialBloodGroup({ value: profile_details.blood_group, label: profile_details.blood_group })\r\n        // setAvatar(profile_details.profile_pic ? (BASE_URL + profile_details.profile_pic) : \"avatars/user-avatar-default.png\")\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log('id from route', id)\r\n        if (id) {\r\n            API.get('auth/profile/details/' + id + '/').then(res => {\r\n                console.log('res', res.data)\r\n                // profile_details=res.data.data\r\n                setProfileDetails(res.data.data)\r\n                window.scrollTo(0, 0);\r\n                setInitialBloodGroup({ value: res.data.data.blood_group, label: res.data.data.blood_group })\r\n                setAvatar(res.data.data.profile_pic ? (BASE_URL + res.data.data.profile_pic) : \"avatars/user-avatar-default.png\")\r\n            }).catch(err => {\r\n\r\n            })\r\n        }\r\n    }, [id])\r\n    const profile_update_form = useFormik({\r\n        initialValues: {\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            phone: '',\r\n            address: '',\r\n            blood_group: ''\r\n        },\r\n        validateOnChange: true,\r\n        validateOnBlur: true,\r\n        validate: validate_profile_update_form,\r\n        onSubmit: update_profile\r\n    })\r\n    function capitalize(string) {\r\n        if (string != undefined) {\r\n            return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\r\n        }\r\n        return ''\r\n    }\r\n    return (\r\n        <>\r\n            <CContainer>\r\n                <CModal closeOnBackdrop={false} alignment=\"center\" show={visible} onClose={profileEditForm}>\r\n                    <CModalHeader closeButton>\r\n                        <CModalTitle className=\"modal-title-profile\">\r\n                            <span className=\"edit-profile-form-header\">\r\n                                Edit Profile Info\r\n                            </span>\r\n                        </CModalTitle>\r\n                    </CModalHeader>\r\n\r\n                    <CModalBody>\r\n                        <CContainer>\r\n                            <CForm>\r\n                                <CRow>\r\n                                    {/**First Name */}\r\n                                    <div className=\"col-md-6 mb-3\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"userFName\">\r\n                                            First Name *\r\n                                        </CLabel>\r\n                                        <CInput\r\n                                            type=\"text\"\r\n                                            name=\"first_name\"\r\n                                            id=\"first_name\"\r\n                                            className=\"custom-forminput-6\"\r\n                                            value={profile_update_form.values.first_name}\r\n                                            onChange={profile_update_form.handleChange}\r\n                                        />\r\n                                    </div>\r\n                                    {/**Last Name */}\r\n                                    <div className=\"col-md-6 mb-3\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"userLName\">\r\n                                            Last Name *\r\n                                        </CLabel>\r\n                                        <CInput\r\n                                            type=\"text\"\r\n                                            name=\"last_name\"\r\n                                            id=\"last_name\"\r\n                                            className=\"custom-forminput-6\"\r\n                                            value={profile_update_form.values.last_name}\r\n                                            onChange={profile_update_form.handleChange}\r\n                                        />\r\n                                    </div>\r\n                                    {/**Job title */}\r\n                                    <div className=\"col-md-12 mb-3\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"uEmail\">\r\n                                            Email *\r\n                                        </CLabel>\r\n                                        <CInput\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            id=\"email\"\r\n                                            className=\"custom-forminput-6\"\r\n                                            value={profile_update_form.values.email}\r\n                                            onChange={profile_update_form.handleChange}\r\n                                            readOnly\r\n                                        ></CInput>\r\n                                    </div>\r\n                                    {/**Phone */}\r\n                                    <div className=\"col-md-12 mb-3\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"uPhoneNo\">\r\n                                            Phone *\r\n                                        </CLabel>\r\n                                        <CInput\r\n                                            type=\"tel\"\r\n                                            name=\"phone\"\r\n                                            id=\"phone\"\r\n                                            value={profile_update_form.values.phone}\r\n                                            onChange={profile_update_form.handleChange}\r\n                                            className=\"custom-forminput-6\"\r\n                                        ></CInput>\r\n                                    </div>\r\n                                    {/**address */}\r\n                                    <div className=\"col-md-12 mb-3\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"Address\">\r\n                                            Address *\r\n                                        </CLabel>\r\n                                        <CInput\r\n                                            type=\"text\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            value={profile_update_form.values.address}\r\n                                            onChange={profile_update_form.handleChange}\r\n                                            className=\"custom-forminput-6\"\r\n                                        ></CInput>\r\n                                        {profile_update_form.touched.address && profile_update_form.errors.address && <small style={{ color: 'red' }}>{profile_update_form.errors.address}</small>}\r\n                                    </div>\r\n                                    {/**blood_group */}\r\n                                    <div className=\"col-md-12 mb-3\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"blood_group\">\r\n                                            Blood Group *\r\n                                        </CLabel>\r\n                                        <Select\r\n                                            id=\"blood_group\"\r\n                                            value={initialBloodGroup}\r\n                                            onChange={handleBloodGroupChange}\r\n                                            className=\"custom-forminput-6\"\r\n                                            options={blood_groups}\r\n                                        ></Select>\r\n                                    </div>\r\n\r\n                                    {/**Button groups */}\r\n                                    <div className=\"col-md-12 \">\r\n                                        <div className=\"project-form-button-holders mt-3\">\r\n                                            <CButton className=\"profile-form-btn update-profile\" onClick={profile_update_form.handleSubmit} type=\"button\" disabled={!profile_update_form.isValid}>\r\n                                                Update Info\r\n                                            </CButton>\r\n                                            <CButton className=\"profile-form-btn cancel-update\" type=\"reset\" onClick={() => setVisible(!visible)}>\r\n                                                Cancel\r\n                                            </CButton>\r\n                                        </div>\r\n                                    </div>\r\n                                </CRow>\r\n                            </CForm>\r\n                        </CContainer>\r\n                    </CModalBody>\r\n                </CModal>\r\n\r\n                {/**Main Content */}\r\n\r\n                <CTabs activeTab=\"viewProfile\">\r\n                    <CNav variant=\"tabs\" className=\"tab-style\">\r\n                        {/**View Profile */}\r\n                        <CNavItem>\r\n                            <CNavLink data-tab=\"viewProfile\" className=\"special\">\r\n                                <CIcon name=\"cil-user\" /> View Profile\r\n                            </CNavLink>\r\n                        </CNavItem>\r\n                        {/**change password */}\r\n                        <CNavItem>\r\n                            <CNavLink disabled={profile_details?.id != sessionStorage.getItem(USER_ID) ? true : false} data-tab=\"changePassword\" className=\"special\">\r\n                                <CIcon name=\"cil-pen-alt\" className=\"mr-1\" />\r\n                                Change Password\r\n                            </CNavLink>\r\n                        </CNavItem>\r\n                    </CNav>\r\n                    {/**___________nav tab details______ */}\r\n                    <CTabContent>\r\n                        {/**_____VIEW PROFILE____ */}\r\n                        <CTabPane data-tab=\"viewProfile\">\r\n                            {profile_details != undefined && <CContainer>\r\n                                <h3 className=\"profile-page-header\">Profile Details</h3>\r\n                                <CRow>\r\n                                    <div className=\"col-lg-8 offset-lg-2\">\r\n                                        <CCard className=\"card-view-profile mt-3\">\r\n                                            <div className=\"user-profile-pic-div text-center\">\r\n                                                <CImg\r\n                                                    alt=\"click to upload image\"\r\n                                                    className=\"mx-auto rounded-circle update-img\"\r\n                                                    src={avatar}\r\n                                                />\r\n\r\n                                                {/**__PRO PIC UP BUTTON__ */}\r\n                                                <input style={{ display: 'none' }} ref={inputFile} type=\"file\" onChange={(event) => { onImageChange(event.target.files[0]) }} />\r\n                                                {profile_details.id == sessionStorage.getItem(USER_ID) && <CButton\r\n                                                    onClick={changeImageClick}\r\n                                                    type=\"button\"\r\n                                                    className=\"d-block mx-auto change-img-btn mt-1\"\r\n                                                >\r\n                                                    {\" \"}\r\n                                                    <CIcon name=\"cil-camera\"></CIcon> Change Picture\r\n                                                </CButton>}\r\n                                            </div>\r\n                                            <CCardBody>\r\n                                                <hr />\r\n                                                {profile_details.id == sessionStorage.getItem(USER_ID) && <CButton\r\n                                                    className=\"edit-profile mb-3\"\r\n                                                    onClick={() => profileEditForm()}\r\n                                                >\r\n                                                    <CIcon name=\"cil-pen\" className=\"mr-1\" />\r\n                                                    Edit Info\r\n                                                </CButton>}\r\n\r\n                                                {/**info show */}\r\n                                                <div className=\"row justify-content-center\">\r\n                                                    <div className=\"col-md-6 col-lg-4\">\r\n                                                        <h5 className=\"info-header-1\">Full Name</h5>\r\n                                                        <h5 className=\"profile-details-points child\">\r\n                                                            {capitalize(profile_details.first_name) + ' ' + capitalize(profile_details.last_name)}{\" \"}\r\n                                                        </h5>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6 col-lg-4\">\r\n                                                        <h5 className=\"info-header-1\"> Email</h5>\r\n                                                        <h5 className=\"profile-details-points-email\">\r\n                                                            {profile_details.email}\r\n                                                        </h5>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6 col-lg-4\">\r\n                                                        <h5 className=\"info-header-1\">Job title</h5>\r\n                                                        <h5 className=\"profile-details-points-email\">{profile_details?.slc_details?.slc?.name}</h5>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6 col-lg-4\">\r\n                                                        <h5 className=\"info-header-1\"> Phone</h5>\r\n                                                        <h5 className=\"profile-details-points child\">\r\n                                                            +{profile_details.phone}\r\n                                                        </h5>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6 col-lg-4\">\r\n                                                        <h5 className=\"info-header-1\"> Address</h5>\r\n                                                        <h5 className=\"profile-details-points child\">\r\n                                                            {profile_details.address}\r\n                                                        </h5>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6 col-lg-4\">\r\n                                                        <h5 className=\"info-header-1\"> Blood Group</h5>\r\n                                                        <h5 className=\"profile-details-points child\">\r\n                                                            {profile_details.blood_group}\r\n                                                        </h5>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                {/* <div className=\"all-da-buttons-1\">\r\n                                                <CLabel>Assigned Projects</CLabel>\r\n                                                    {Array.from([{title:'ABC',work_package_index:'1001'}]).length > 0 && Array.from([{title:'ABC',work_package_index:'1001'}]).map((task, idx) => (\r\n                                                        <CButton key={idx} type=\"button\" className=\"package-button rounded-pill\" onClick={() => {  }}>\r\n                                                            {task.task_title}\r\n                                                            <span className=\"tooltiptext\">{task.work_package_index}</span>\r\n                                                        </CButton>\r\n                                                    ))}\r\n                                                </div> */}\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </div>\r\n                                </CRow>\r\n                            </CContainer>}\r\n                        </CTabPane>\r\n                        {/**_____Change Password___ */}\r\n                        <CTabPane data-tab=\"changePassword\">\r\n                            <CContainer>\r\n                                <h3 className=\"profile-page-header\">Change Password</h3>\r\n                                <CRow>\r\n                                    <div className=\"col-lg-8 offset-lg-2 col-md-12\">\r\n                                        <CCard className=\"mt-4 card-change-password\">\r\n                                            <CCardBody>\r\n                                                <CForm>\r\n                                                    <div className=\"mb-2\">\r\n                                                        <CLabel className=\"custom-label-5\" htmlFor=\"userOldPass\">\r\n                                                            Old Password\r\n                                                        </CLabel>\r\n                                                        <div className=\"password-container\">\r\n                                                            <CInput type={revealOldPwd ? \"text\" : \"password\"} name=\"old_password\" id=\"old_password\" className=\"custom-forminput-6\" value={change_pass_form.values.old_password} onChange={change_pass_form.handleChange} />\r\n                                                            <img className=\"pwd-container-img\"\r\n                                                                title={revealOldPwd ? \"Hide Old password\" : \"Show Old password\"}\r\n                                                                src={revealOldPwd ? hidePwdImg : showPwdImg}\r\n                                                                onClick={() => setRevealOldPwd(prevState => !prevState)}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {/**New Password */}\r\n                                                    <div className=\"mb-2\">\r\n                                                        <CLabel className=\"custom-label-5\" htmlFor=\"userNewPass\">\r\n                                                            New Password\r\n                                                        </CLabel>\r\n                                                        <div className=\"password-container\">\r\n                                                            <CInput type={revealNewPwd ? \"text\" : \"password\"} name=\"new_password\" id=\"new_password\" className=\"custom-forminput-6\" value={change_pass_form.values.new_password} onChange={change_pass_form.handleChange} />\r\n                                                            <img className=\"pwd-container-img\"\r\n                                                                title={revealNewPwd ? \"Hide New password\" : \"Show New password\"}\r\n                                                                src={revealNewPwd ? hidePwdImg : showPwdImg}\r\n                                                                onClick={() => setRevealNewPwd(prevState => !prevState)}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {/**Confirm new password */}\r\n                                                    <div className=\"mb-2\">\r\n                                                        <CLabel className=\"custom-label-5\" htmlFor=\"userConfPass\">\r\n                                                            Confirm Password\r\n                                                        </CLabel>\r\n                                                        <div className=\"password-container\">\r\n                                                            <CInput type={revealConfPwd ? \"text\" : \"password\"} name=\"new_password_confirm\" id=\"new_password_confirm\" className=\"custom-forminput-6\" value={change_pass_form.values.new_password_confirm} onChange={change_pass_form.handleChange} />\r\n                                                            <img className=\"pwd-container-img\"\r\n                                                                title={revealConfPwd ? \"Hide Confirm password\" : \"Show Confirm password\"}\r\n                                                                src={revealConfPwd ? hidePwdImg : showPwdImg}\r\n                                                                onClick={() => setRevealConfPwd(prevState => !prevState)} />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {/**BUtton groups */}\r\n                                                    <div className=\"project-form-button-holders mt-3\">\r\n                                                        <CButton className=\"profile-form-btn update-profile\" disabled={!change_pass_form.isValid} type=\"button\" onClick={change_pass_form.handleSubmit}>Update Password</CButton>\r\n                                                        <CButton className=\"profile-form-btn cancel-update\" type=\"button\" onClick={change_pass_form.resetForm}>Cancel</CButton>\r\n                                                    </div>\r\n                                                </CForm>\r\n                                            </CCardBody>\r\n\r\n                                        </CCard>\r\n                                    </div>\r\n                                </CRow>\r\n                            </CContainer>\r\n                        </CTabPane>\r\n                    </CTabContent>\r\n                </CTabs>\r\n            </CContainer>\r\n        </>\r\n    );\r\n};\r\nexport default UserProfile;\r\n","export default __webpack_public_path__ + \"static/media/Showpass-show.ab5421f5.svg\";","export default __webpack_public_path__ + \"static/media/Hide.31c620fc.svg\";"],"sourceRoot":""}