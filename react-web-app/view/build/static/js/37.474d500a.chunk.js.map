{"version":3,"sources":["pages/evms-view/evmsView.js"],"names":["ViewEvms","useState","visible","setVisible","setEvmsId","projectValue","setProjectValue","dispatch","useDispatch","history","useHistory","evmsList","useSelector","state","data","editEVMSForm","item","project","sub_task","id","evms_update_form","setValues","planned_hours","planned_value","earned_value","actual_cost","estimate_at_completion","estimate_to_completion","variance_at_completion","budget_at_completion","useFormik","initialValues","validateOnBlur","validateOnChange","validate","values","errors","onSubmit","API","put","then","res","console","log","status","success","fetchEvmsThunk","sessionStorage","getItem","USER_ID","swal","useEffect","closeOnBackdrop","alignment","show","onClose","closeButton","className","lg","md","sm","htmlFor","name","value","readOnly","g","onChange","handleChange","type","min","required","Math","abs","onClick","handleSubmit","undefined","Array","from","map","idx","disabled","size","color","fontSize","task_delivery_order","title","push","pathname","datasets","label","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","tooltipLabelColor","options","aspectRatio","tooltips","enabled","work_package_number","date_created","date_updated"],"mappings":"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","file":"static/js/37.474d500a.chunk.js","sourcesContent":["import { CCard, CCardBody, CContainer, CRow, CButton, CModal, CModalHeader, CModalTitle, CModalBody, CForm, CCol, CLabel, CInput, CAlert } from '@coreui/react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GradeIcon from '@material-ui/icons/Grade';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport './evmsView.css';\r\nimport { API, BASE_URL, USER_ID } from \"../../Config\";\r\nimport { CChart, CChartLine } from '@coreui/react-chartjs';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useFormik } from 'formik';\r\nimport { fetchEvmsThunk } from '../../store/slices/EvmsSlice';\r\nimport swal from 'sweetalert';\r\n\r\nconst ViewEvms = () => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [evmsId, setEvmsId] = useState('');\r\n    const [projectValue, setProjectValue] = useState('');\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n    const evmsList = useSelector(state => state.evmsList.data)\r\n\r\n    const editEVMSForm = (item) => {\r\n        setVisible(!visible);\r\n        setProjectValue(item?.project.sub_task);\r\n        setEvmsId(item?.id);\r\n        evms_update_form.setValues({\r\n            id: item?.id,\r\n            project: item?.project.id,\r\n            planned_hours: item?.project.planned_hours,\r\n            planned_value: item?.project.planned_value,\r\n            earned_value: item?.earned_value,\r\n            actual_cost: item?.actual_cost,\r\n            estimate_at_completion: item?.estimate_at_completion,\r\n            estimate_to_completion: item?.estimate_to_completion,\r\n            variance_at_completion: item?.variance_at_completion,\r\n            budget_at_completion: item?.budget_at_completion,\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    const validate_evms_update = (values) => {\r\n        const errors = {}\r\n        if (!values.planned_value) errors.planned_value = \"Planned Value is required\"\r\n        if (!values.planned_hours) errors.planned_hours = \"Planned hours is required\"\r\n        if (!values.earned_value) errors.earned_value = \"Earned value is required\"\r\n        if (!values.actual_cost) errors.actual_cost = \"Actual cost is required\"\r\n        if (!values.estimate_at_completion) errors.estimate_at_completion = \"Estimate at completion is required\"\r\n        if (!values.estimate_to_completion) errors.estimate_to_completion = \"Estimate to completion is required\"\r\n        if (!values.variance_at_completion) errors.variance_at_completion = \"Variance at completion is required\"\r\n        if (!values.budget_at_completion) errors.budget_at_completion = \"Budget at completion required\"\r\n        return errors;\r\n    }\r\n\r\n    const updateEvms = (values) => {\r\n        API.put('evms/update/' + values.id + '/', values).then((res) => {\r\n            console.log(res)\r\n            if (res.status == 200 && res.data.success == 'True') {\r\n                dispatch(fetchEvmsThunk(sessionStorage.getItem(USER_ID)))\r\n                setVisible(false)\r\n                swal('Updated!', 'EVMS has been updated', 'success')\r\n            }\r\n            else {\r\n                swal('Error', 'There was a problem updating', 'warning')\r\n            }\r\n        })\r\n    }\r\n\r\n    const evms_update_form = useFormik({\r\n        initialValues: {\r\n            id: \"\",\r\n            project: \"\",\r\n            planned_value: \"\",\r\n            planned_hours: \"\",\r\n            earned_value: \"\",\r\n            actual_cost: \"\",\r\n            estimate_at_completion: \"\",\r\n            estimate_to_completion: \"\",\r\n            variance_at_completion: \"\",\r\n            budget_at_completion: \"\"\r\n\r\n        },\r\n        validateOnBlur: true,\r\n        validateOnChange: true,\r\n        validate: validate_evms_update,\r\n        onSubmit: updateEvms\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log('evmsList', evmsList)\r\n    }, [evmsList])\r\n\r\n    {/**EVMS EDIT FORM FUNCTIONALITY */ }\r\n\r\n    return (\r\n        <>\r\n            {/**display all evms */}\r\n            <CContainer>\r\n                {/**modal to edit evms */}\r\n                <CModal closeOnBackdrop={false} alignment=\"center\" show={visible} onClose={editEVMSForm}>\r\n                    <CModalHeader onClose={() => setVisible(!visible)} closeButton>  <CModalTitle className=\"modal-title\">\r\n                        <span className=\"edit-profile-form-header\">\r\n                            Edit EVMS Info\r\n                        </span>\r\n                    </CModalTitle>\r\n                    </CModalHeader>\r\n                    <CModalBody>\r\n                        <CContainer>\r\n                            <CForm>\r\n                                <CRow>\r\n                                    {/**Project Name */}\r\n                                    <CCol lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-2\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"project\">\r\n                                            Project Name\r\n                                        </CLabel>\r\n                                        <CInput className=\"custom-forminput-6\" name=\"project\" id=\"project\" value={projectValue} readOnly />\r\n                                    </CCol>\r\n                                    {/**Work package */}\r\n                                    {/* <CCol lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"wPackage\">\r\n                                            Work Package\r\n                                        </CLabel>\r\n                                        <CInput className=\"custom-forminput-6\" name=\"wPackage\" id=\"wPackage\" readOnly />\r\n                                    </CCol> */}\r\n                                    {/**Planned Value */}\r\n                                    <CCol className=\"mb-2\" g=\"6\" md=\"6\" sm=\"12\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"planned_value\">\r\n                                            Planned Value\r\n                                        </CLabel>\r\n                                        <CInput className=\"custom-forminput-6\" name=\"planned_value\" id=\"planned_value\" value={evms_update_form.values.planned_value} onChange={evms_update_form.handleChange} type=\"number\" min=\"1\" required readOnly />\r\n                                        {/**Error validation */}\r\n                                        {evms_update_form.errors.planned_value && <p className=\"error\">{evms_update_form.errors.planned_value}</p>}\r\n                                    </CCol>\r\n                                    {/**Planned hours */}\r\n                                    <CCol className=\"mb-2\" g=\"6\" md=\"6\" sm=\"12\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"planned_hours\">\r\n                                            Planned Hours\r\n                                        </CLabel>\r\n                                        <CInput className=\"custom-forminput-6\" name=\"planned_hours\" id=\"planned_hours\" value={evms_update_form.values.planned_hours} onChange={evms_update_form.handleChange} type=\"number\" min=\"0\" required readOnly />\r\n                                        {/**Error validation */}\r\n                                        {evms_update_form.errors.planned_hours && <p className=\"error\">{evms_update_form.errors.planned_hours}</p>}\r\n                                    </CCol>\r\n                                    {/**Earned Value */}\r\n                                    <CCol lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"earned_value\">\r\n                                            Earned Value\r\n                                        </CLabel>\r\n                                        <CInput className=\"custom-forminput-6\" name=\"earned_value\" id=\"earned_value\" value={evms_update_form.values.earned_value} onChange={evms_update_form.handleChange} required type=\"number\" min=\"0\" />\r\n                                        {/**Error validation */}\r\n                                        {evms_update_form.errors.earned_value && <p className=\"error\">{evms_update_form.errors.earned_value}</p>}\r\n                                    </CCol>\r\n                                    {/**Actual Cost */}\r\n                                    <CCol lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"actual_cost\">\r\n                                            Actual Cost\r\n                                        </CLabel>\r\n                                        <CInput className=\"custom-forminput-6\" name=\"actual_cost\" id=\"actual_cost\" value={evms_update_form.values.actual_cost} onChange={evms_update_form.handleChange} type=\"number\" min=\"0\" required />\r\n                                        {/**Error validation */}\r\n                                        {evms_update_form.errors.actual_cost && <p className=\"error\">{evms_update_form.errors.actual_cost}</p>}\r\n                                    </CCol>\r\n                                    {/**estimate at completion */}\r\n                                    <CCol lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"estimate_at_completion\">\r\n                                            Estimate at completion\r\n                                        </CLabel>\r\n                                        <CInput className=\"custom-forminput-6\" name=\"estimate_at_completion\" id=\"estimate_at_completion\" type=\"number\" min=\"1\" value={evms_update_form.values.estimate_at_completion} onChange={evms_update_form.handleChange} required />\r\n                                        {/**Error validation */}\r\n                                        {evms_update_form.errors.estimate_at_completion && <p className=\"error\">{evms_update_form.errors.estimate_at_completion}</p>}\r\n                                    </CCol>\r\n\r\n                                    {/**estimate to completion */}\r\n                                    <CCol lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"estimate_to_completion\">\r\n                                            Estimate to completion\r\n                                        </CLabel>\r\n                                        <CInput className=\"custom-forminput-6\" name=\"estimate_to_completion\" id=\"estimate_to_completion\" type=\"number\" min=\"1\" value={evms_update_form.values.estimate_to_completion} onChange={evms_update_form.handleChange} required />\r\n                                        {/**Error validation */}\r\n                                        {evms_update_form.errors.estimate_to_completion && <p className=\"error\">{evms_update_form.errors.estimate_to_completion}</p>}\r\n                                    </CCol>\r\n                                    {/**variance at completion */}\r\n\r\n                                    <CCol lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"variance_at_completion\">\r\n                                            Variance at completion\r\n                                        </CLabel>\r\n                                        <CInput className=\"custom-forminput-6\" name=\"variance_at_completion\" id=\"variance_at_completion\" type=\"number\" min=\"0\" value={Math.abs(evms_update_form.values.budget_at_completion - evms_update_form.values.estimate_at_completion)} onChange={evms_update_form.handleChange} readOnly />\r\n\r\n                                    </CCol>\r\n                                    {/**budget at completion */}\r\n\r\n                                    <CCol lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"budget_at_completion\">\r\n                                            Budget at completion\r\n                                        </CLabel>\r\n                                        <CInput className=\"custom-forminput-6\" name=\"budget_at_completion\" id=\"budget_at_completion\" type=\"number\" value={evms_update_form.values.budget_at_completion} onChange={evms_update_form.handleChange} required />\r\n                                        {/**Error validation */}\r\n                                        {evms_update_form.errors.budget_at_completion && <p className=\"error\">{evms_update_form.errors.budget_at_completion}</p>}\r\n                                    </CCol>\r\n                                    {/**submit buttons */}\r\n                                    <CCol md=\"12\">\r\n                                        <div className=\"project-form-button-holders mt-3\">\r\n                                            <CButton className=\"profile-form-btn update-profile\" onClick={evms_update_form.handleSubmit}>\r\n                                                Update Info\r\n                                            </CButton>\r\n                                            <CButton className=\"profile-form-btn cancel-update\" onClick={() => setVisible(!visible)} type=\"reset\">\r\n                                                Cancel\r\n                                            </CButton>\r\n                                        </div>\r\n                                    </CCol>\r\n                                </CRow>\r\n                            </CForm>\r\n                        </CContainer>\r\n                    </CModalBody>\r\n                </CModal>\r\n                <h4 className=\"dash-header mb-3\">EVMS View</h4>\r\n                <CRow>\r\n                    <div className=\"col-md-12 col-sm-12 col-xs-12 mt-1\">\r\n                        {evmsList != undefined && Array.from(evmsList).map((item, idx) => (\r\n                            <CCard className=\"card-ongoing-project\" key={idx}>\r\n                                <CCardBody className=\"details-project-body\">\r\n                                    <div className=\"card-header-portion-ongoing\">\r\n                                        <h4 className=\"ongoing-card-header-1\"><IconButton aria-label=\"favourite\" disabled size=\"medium\" color=\"primary\">\r\n                                            <GradeIcon fontSize=\"inherit\" className=\"fav-button\" />\r\n                                        </IconButton>{item.project.task_delivery_order.title + ' / ' + item.project.sub_task}</h4>\r\n                                        <div className=\"action-button-holders--2\">\r\n                                            <CButton className=\"edit-project-on\" onClick={() => editEVMSForm(item)}><CIcon name=\"cil-pencil\" className=\"mr-1\" /> Edit</CButton>\r\n                                            <CButton className=\"view-ongoing-details\" onClick={() => history.push({ pathname: '/dashboard/EVMS/details/' })} ><CIcon name=\"cil-list-rich\" className=\"mr-1\" />View Details</CButton>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr className=\"header-underline1\" />\r\n                                    <div className=\"row\">\r\n                                        {/**graph view */}\r\n                                        <div className=\"col-lg-6 col-md-12\">\r\n                                            <CChart\r\n                                                type=\"line\"\r\n                                                datasets={[\r\n                                                    {\r\n                                                        label: 'Time',\r\n                                                        backgroundColor: 'rgba(179,181,198,0.2)',\r\n                                                        borderColor: 'rgba(179,181,198,1)',\r\n                                                        pointBackgroundColor: 'rgba(179,181,198,1)',\r\n                                                        pointBorderColor: '#fff',\r\n                                                        pointHoverBackgroundColor: '#fff',\r\n                                                        pointHoverBorderColor: 'rgba(179,181,198,1)',\r\n                                                        tooltipLabelColor: 'rgba(179,181,198,1)',\r\n                                                        data: [65, 59, 900, 81, 560, 55, 1000]\r\n                                                    },\r\n                                                    {\r\n                                                        label: 'Cost',\r\n                                                        backgroundColor: 'rgba(255,99,132,0.2)',\r\n                                                        borderColor: 'rgba(255,99,132,1)',\r\n                                                        pointBackgroundColor: 'rgba(255,99,132,1)',\r\n                                                        pointBorderColor: '#fff',\r\n                                                        pointHoverBackgroundColor: '#fff',\r\n                                                        pointHoverBorderColor: 'rgba(255,99,132,1)',\r\n                                                        tooltipLabelColor: 'rgba(255,99,132,1)',\r\n                                                        data: [28, 48, 40, 19, 96, 27, 10]\r\n                                                    }\r\n                                                ]}\r\n                                                options={{\r\n                                                    aspectRatio: 1.5,\r\n                                                    tooltips: {\r\n                                                        enabled: true\r\n                                                    }\r\n                                                }}\r\n                                            // labels={[\r\n                                            //   'Eating', 'Drinking', 'Sleeping', 'Designing',\r\n                                            //   'Coding', 'Cycling', 'Running'\r\n                                            // ]}\r\n                                            />\r\n                                        </div>\r\n                                        {/**Text details */}\r\n                                        <div className=\"col-lg-5 offset-lg-1 col-md-12 mt-3\">\r\n                                            <h5 className=\"evms-info-view child\"><span className=\"info-header--evms\">work package : </span>{item.work_package_number}</h5>\r\n                                            <h5 className=\"evms-info-view child\"><span className=\"info-header--evms\">earned value: </span>{item.earned_value}</h5>\r\n                                            <h5 className=\"evms-info-view child\"><span className=\"info-header--evms\">actual cost : </span>{item.actual_cost}</h5>\r\n                                            <h5 className=\"evms-info-view child\"><span className=\"info-header--evms\">planned value : </span>{item.project.planned_value}</h5>\r\n                                            <h5 className=\"evms-info-view child\"><span className=\"info-header--evms\">planned hours : </span>{item.project.planned_hours}</h5>\r\n                                            <h5 className=\"evms-info-view child\"><span className=\"info-header--evms\">estimate at completion : </span>{item.estimate_at_completion}</h5>\r\n                                            <h5 className=\"evms-info-view child\"><span className=\"info-header--evms\">estimation to completion : </span>{item.estimate_to_completion}</h5>\r\n                                            <h5 className=\"evms-info-view child\"><span className=\"info-header--evms\">variance at completion : </span>{Math.abs(item?.budget_at_completion - item?.estimate_at_completion)}</h5>\r\n\r\n                                            <h5 className=\"evms-info-view child\"><span className=\"info-header--evms\">budget at completion : </span>{item.budget_at_completion}</h5>\r\n                                            <h5 className=\"evms-info-view child\"><span className=\"info-header--evms\">date created : </span>{item.date_created}</h5>\r\n                                            <h5 className=\"evms-info-view child\"><span className=\"info-header--evms\">date updated : </span>{item.date_updated}</h5>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        ))}\r\n                        { /**If no evmsList */}\r\n                        {evmsList == undefined || evmsList == 0 ? (\r\n                            <CAlert className=\"no-value-show-alert text-center\" color=\"primary\">Currently there are no EVMS details available.\r\n                                <div><CButton className=\"evms-from-details\" onClick={() => history.push({ pathname: '/dashboard/EVMS/create' })}>Create a new EVMS</CButton></div>\r\n                            </CAlert>\r\n                        ) : null\r\n                        }\r\n                    </div>\r\n                </CRow>\r\n            </CContainer>\r\n        </>\r\n    )\r\n}\r\nexport default ViewEvms;"],"sourceRoot":""}