{"version":3,"sources":["pages/profile/profileView.js","components/linear-progress-bar/linear-progress-bar.js","../node_modules/@mui/material/LinearProgress/linearProgressClasses.js","../node_modules/@mui/material/LinearProgress/LinearProgress.js","assets/icons/Showpass-show.svg","assets/icons/Hide.svg"],"names":["UserProfile","history","useHistory","id","useParams","useState","revealOldPwd","setRevealOldPwd","revealNewPwd","setRevealNewPwd","revealConfPwd","setRevealConfPwd","profile_details","setProfileDetails","initialBloodGroup","setInitialBloodGroup","inputFile","useRef","setImage","BASE_URL","profile_pic","avatar","setAvatar","visible","setVisible","dispatch","useDispatch","profileEditForm","console","log","profile_update_form","setValues","first_name","last_name","email","phone","address","blood_group","tab","setTab","change_pass_form","useFormik","initialValues","old_password","new_password","new_password_confirm","validateOnChange","validateOnBlur","validate","values","errors","String","length","onSubmit","formData","FormData","Object","entries","key","value","append","API","put","then","res","status","resetForm","swal","catch","err","response","update_profile_image","image","image_form_data","FILE_API","post","sessionStorage","getItem","USER_ID","useEffect","get","data","window","scrollTo","label","success","fetchPersonalDetails","capitalize","string","undefined","charAt","toUpperCase","slice","toLowerCase","projects","useSelector","state","remaining_hours","forEach","item","parseFloat","totalProjectHrs","total_hours","planned_hours","calculate_progress_in_percentage","pmprojects","temp","has_permission","pm_projects","idx","project","push","closeOnBackdrop","alignment","show","onClose","closeButton","className","htmlFor","type","name","onChange","handleChange","readOnly","touched","style","color","options","onClick","handleSubmit","disabled","isValid","activeTab","variant","active","alt","src","display","ref","event","URL","createObjectURL","onImageChange","target","files","current","click","slc_details","slc","Array","from","map","pathname","work_package_number","sub_task","planned_delivery_date","progress","subtasks","title","hidePwdImg","showPwdImg","prevState","LinearProgressWithLabel","props","sx","alignItems","width","mr","minWidth","Math","round","LinearWithValueLabel","React","getLinearProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_t5","_t6","_excluded","indeterminate1Keyframe","keyframes","indeterminate2Keyframe","bufferKeyframe","getColorShade","theme","palette","mode","lighten","main","darken","LinearProgressRoot","styled","overridesResolver","styles","ownerState","root","_extends","position","overflow","height","zIndex","colorAdjust","backgroundColor","content","left","top","right","bottom","opacity","transform","LinearProgressDashed","dashed","marginTop","backgroundImage","backgroundSize","backgroundPosition","css","LinearProgressBar1","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","transition","transformOrigin","LinearProgressBar2","bar2Indeterminate","bar2Buffer","LinearProgress","inProps","useThemeProps","valueBuffer","other","_objectWithoutPropertiesLoose","classes","slots","bar1","bar2","composeClasses","useUtilityClasses","useTheme","rootProps","inlineStyles","direction","process","_jsxs","clsx","role","children","_jsx"],"mappings":"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","file":"static/js/31.dee65799.chunk.js","sourcesContent":["import CIcon from \"@coreui/icons-react\";\r\nimport {\r\n  CLabel,\r\n  CContainer,\r\n  CNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CTabPane,\r\n  CTabContent,\r\n  CRow,\r\n  CTabs,\r\n  CCard,\r\n  CButton,\r\n  CImg,\r\n  CCardBody,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CForm,\r\n  CInput,\r\n  CAlert,\r\n} from \"@coreui/react\";\r\nimport Select from \"react-select\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./profileView.css\";\r\nimport PassWordChangeForm from \"../../components/changeUserPasswordForm/changePassword\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport { API, BASE_URL, FILE_API, USER_ID } from \"../../Config\";\r\nimport { fetchPersonalDetails } from \"../../store/slices/ProfileSlice\";\r\nimport swal from \"sweetalert\";\r\nimport hidePwdImg from \"../../assets/icons/Showpass-show.svg\";\r\nimport showPwdImg from \"../../assets/icons/Hide.svg\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LinearWithValueLabel from \"../../components/linear-progress-bar/linear-progress-bar\";\r\nimport { has_permission } from \"../../helper.js\";\r\n\r\nconst UserProfile = () => {\r\n  let history = useHistory();\r\n  const onButtonClick = () => {\r\n    // `current` points to the mounted file input element\r\n  };\r\n  const blood_groups = [\r\n    { value: \"A+\", label: \"A+\" },\r\n    { value: \"A-\", label: \"A-\" },\r\n    { value: \"B+\", label: \"B+\" },\r\n    { value: \"B-\", label: \"B-\" },\r\n    { value: \"AB+\", label: \"AB+\" },\r\n    { value: \"AB-\", label: \"AB-\" },\r\n    { value: \"O+\", label: \"O+\" },\r\n    { value: \"O-\", label: \"O-\" },\r\n  ];\r\n  const { id } = useParams();\r\n  const [revealOldPwd, setRevealOldPwd] = useState(false);\r\n  const [revealNewPwd, setRevealNewPwd] = useState(false);\r\n  const [revealConfPwd, setRevealConfPwd] = useState(false);\r\n  // const profile_details = useSelector(state => state.profile.data)\r\n  const [profile_details, setProfileDetails] = useState();\r\n\r\n  const [initialBloodGroup, setInitialBloodGroup] = useState(\"\");\r\n  const inputFile = useRef(null);\r\n  const [image, setImage] = useState();\r\n  const [avatar, setAvatar] = useState(\r\n    profile_details\r\n      ? BASE_URL + profile_details.profile_pic\r\n      : \"avatars/user-avatar-default.png\"\r\n  );\r\n  const [visible, setVisible] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const onImageChange = (image) => {\r\n    setImage(image);\r\n    setAvatar(URL.createObjectURL(image));\r\n    update_profile_image(image);\r\n  };\r\n  const changeImageClick = () => {\r\n    inputFile.current.click();\r\n  };\r\n  const profileEditForm = () => {\r\n    console.log(\"values\");\r\n    setVisible(!visible);\r\n    profile_update_form.setValues({\r\n      first_name: profile_details.first_name,\r\n      last_name: profile_details.last_name,\r\n      email: profile_details.email,\r\n      phone: profile_details.phone,\r\n      address: profile_details.address,\r\n      blood_group: profile_details.blood_group,\r\n    });\r\n  };\r\n  const handleBloodGroupChange = (values) => {\r\n    console.log(values);\r\n    profile_update_form.setValues({\r\n      first_name: profile_update_form.values.first_name,\r\n      last_name: profile_update_form.values.last_name,\r\n      email: profile_update_form.values.email,\r\n      phone: profile_update_form.values.phone,\r\n      address: profile_update_form.values.address,\r\n      blood_group: values.value,\r\n    });\r\n    setInitialBloodGroup({ value: values.value, label: values.label });\r\n  };\r\n  const validateChangePassForm = (values) => {\r\n    const errors = {};\r\n    if (!values.old_password) errors.old_password = \"Old Password Required\";\r\n    if (\r\n      String(values.new_password).length < 8 ||\r\n      !values.new_password ||\r\n      values.new_password != values.new_password_confirm\r\n    )\r\n      errors.new_password = \"Invalid New Password\";\r\n    return errors;\r\n  };\r\n  const [tab, setTab] =  useState(\"viewProfile\")\r\n  const change_password = (values) => {\r\n    let formData = new FormData();\r\n    console.log(\"values\", values);\r\n    for (const [key, value] of Object.entries(change_pass_form.values)) {\r\n      if (key != \"new_password_confirm\") {\r\n        formData.append(key, value);\r\n      }\r\n    }\r\n    API.put(\"auth/change/password/\", formData)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status == 200) {\r\n          change_pass_form.resetForm();\r\n          setTab(\"viewProfile\")\r\n          console.log(\"view profile\", tab)\r\n          swal(\"Updated\", \"Your Password has been changed\", \"success\");\r\n         // history.push({ pathname: '/dashboard/WBS/create-wbs'})\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status == 400) {\r\n          swal(\"Incorrect\", \"Bad Request\", \"warning\");\r\n        }\r\n      });\r\n  };\r\n  const change_pass_form = useFormik({\r\n    initialValues: {\r\n      old_password: \"\",\r\n      new_password: \"\",\r\n      new_password_confirm: \"\",\r\n    },\r\n    validateOnChange: true,\r\n    validateOnBlur: true,\r\n    validate: validateChangePassForm,\r\n    onSubmit: change_password,\r\n  });\r\n  const validate_profile_update_form = (values) => {\r\n    const errors = {};\r\n    if (!values.first_name) errors.first_name = \"First Name is required\";\r\n    if (!values.last_name) errors.last_name = \"Last Name is required\";\r\n    if (!values.email) errors.email = \"Email is required\";\r\n    if (!values.address) errors.address = \"Address is required\";\r\n    if (!values.blood_group) errors.blood_group = \"Blood group is required\";\r\n    return errors;\r\n  };\r\n  const update_profile = (values) => {\r\n    console.log(values);\r\n    API.post(\r\n      \"auth/profile/update/\" + sessionStorage.getItem(USER_ID) + \"/\",\r\n      profile_update_form.values\r\n    ).then((res) => {\r\n      console.log(res);\r\n      if (res.status == 201 && res.data.success == \"True\") {\r\n        dispatch(fetchPersonalDetails(sessionStorage.getItem(USER_ID)));\r\n        setVisible(false);\r\n        swal(\"Updated!\", \"Your Profile has been updated\", \"success\");\r\n      }\r\n    });\r\n  };\r\n  const update_profile_image = (image) => {\r\n    let image_form_data = new FormData();\r\n    image_form_data.append(\"profile_pic\", image);\r\n    console.log(\"image\", image);\r\n    FILE_API.post(\r\n      \"auth/change/profile/image/\" + sessionStorage.getItem(USER_ID) + \"/\",\r\n      image_form_data\r\n    )\r\n      .then((res) => {\r\n        if (res.status == 201) {\r\n          swal(\"Updated!\", \"Profile Picture Updated\", \"success\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (err.status == 400) {\r\n          swal(\"Incorrect\", \"Bad Request\", \"warning\");\r\n        }\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    // window.scrollTo(0, 0);\r\n    // setInitialBloodGroup({ value: profile_details.blood_group, label: profile_details.blood_group })\r\n    // setAvatar(profile_details.profile_pic ? (BASE_URL + profile_details.profile_pic) : \"avatars/user-avatar-default.png\")\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"id from route\", id);\r\n    if (id) {\r\n      API.get(\"auth/profile/details/\" + id + \"/\")\r\n        .then((res) => {\r\n          console.log(\"res\", res.data);\r\n          // profile_details=res.data.data\r\n          setProfileDetails(res.data.data);\r\n          window.scrollTo(0, 0);\r\n          setInitialBloodGroup({\r\n            value: res.data.data.blood_group,\r\n            label: res.data.data.blood_group,\r\n          });\r\n          setAvatar(\r\n            res.data.data.profile_pic\r\n              ? BASE_URL + res.data.data.profile_pic\r\n              : \"avatars/user-avatar-default.png\"\r\n          );\r\n        })\r\n        .catch((err) => {});\r\n    }\r\n  }, [id]);\r\n  const profile_update_form = useFormik({\r\n    initialValues: {\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      address: \"\",\r\n      blood_group: \"\",\r\n    },\r\n    validateOnChange: true,\r\n    validateOnBlur: true,\r\n    validate: validate_profile_update_form,\r\n    onSubmit: update_profile,\r\n  });\r\n  function capitalize(string) {\r\n    if (string != undefined) {\r\n      return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  // const projects = useSelector(state => {\r\n  //     let temp = []\r\n  //     let subtask =[]\r\n  //     state.projects.data.forEach((item, idx) => {\r\n  //         if (item.project.status == 0) {\r\n  //             temp.push(item)\r\n  //             console.log(\"subtask\", item.sub_task)\r\n  //             subtask.push(item.sub_task)\r\n  //         }\r\n  //     })\r\n  //      console.log(\"projects\", state)\r\n  //     console.log('temp', temp)\r\n  //     console.log(\"task\", subtask)\r\n\r\n  //     return temp;\r\n\r\n  // })\r\n\r\n  const projects = useSelector((state) => state.projects.data);\r\n  useEffect(() => {\r\n    console.log(\"ProjectsList\", projects);\r\n  }, [projects]);\r\n\r\n  const remaining_hours = (projects) => {\r\n    let remaining_hours = 0;\r\n    projects.forEach((item) => {\r\n      console.log(item.remaining_hours);\r\n      remaining_hours += parseFloat(item.remaining_hours);\r\n    });\r\n    return remaining_hours;\r\n  };\r\n\r\n  function totalProjectHrs(projects) {\r\n    let total_hours = 0;\r\n    projects.forEach((item) => {\r\n      console.log(item.planned_hours);\r\n      total_hours += parseFloat(item.planned_hours);\r\n    });\r\n    return total_hours;\r\n  }\r\n\r\n  function calculate_progress_in_percentage(total_hours, remaining_hours) {\r\n    let worked_hours = parseFloat(total_hours) - parseFloat(remaining_hours);\r\n    return (100 * worked_hours) / parseFloat(total_hours);\r\n  }\r\n\r\n  const pmprojects = useSelector((state) => {\r\n    let temp = [];\r\n    if (has_permission(\"projects.add_projects\")) {\r\n      state.projects.pm_projects.forEach((item, idx) => {\r\n        if (item.project.status == 0) {\r\n          temp.push(item);\r\n          // temp_statues.push(false)\r\n        }\r\n      });\r\n    }\r\n    // setStatuses(temp_statues)\r\n    console.log(\"pmtemp\", temp);\r\n    return temp;\r\n  });\r\n  const [activeKey, setActiveKey] = useState(1);\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CModal\r\n          closeOnBackdrop={false}\r\n          alignment=\"center\"\r\n          show={visible}\r\n          onClose={profileEditForm}\r\n        >\r\n          <CModalHeader closeButton>\r\n            <CModalTitle className=\"modal-title-profile\">\r\n              <span className=\"edit-profile-form-header\">\r\n                Edit Profile Info\r\n              </span>\r\n            </CModalTitle>\r\n          </CModalHeader>\r\n\r\n          <CModalBody>\r\n            <CContainer>\r\n              <CForm>\r\n                <CRow>\r\n                  {/**First Name */}\r\n                  <div className=\"col-md-6 mb-3\">\r\n                    <CLabel className=\"custom-label-5\" htmlFor=\"userFName\">\r\n                      First Name *\r\n                    </CLabel>\r\n                    <CInput\r\n                      type=\"text\"\r\n                      name=\"first_name\"\r\n                      id=\"first_name\"\r\n                      className=\"custom-forminput-6\"\r\n                      value={profile_update_form.values.first_name}\r\n                      onChange={profile_update_form.handleChange}\r\n                    />\r\n                  </div>\r\n                  {/**Last Name */}\r\n                  <div className=\"col-md-6 mb-3\">\r\n                    <CLabel className=\"custom-label-5\" htmlFor=\"userLName\">\r\n                      Last Name *\r\n                    </CLabel>\r\n                    <CInput\r\n                      type=\"text\"\r\n                      name=\"last_name\"\r\n                      id=\"last_name\"\r\n                      className=\"custom-forminput-6\"\r\n                      value={profile_update_form.values.last_name}\r\n                      onChange={profile_update_form.handleChange}\r\n                    />\r\n                  </div>\r\n                  {/**Job title */}\r\n                  <div className=\"col-md-12 mb-3\">\r\n                    <CLabel className=\"custom-label-5\" htmlFor=\"uEmail\">\r\n                      Email *\r\n                    </CLabel>\r\n                    <CInput\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      className=\"custom-forminput-6\"\r\n                      value={profile_update_form.values.email}\r\n                      onChange={profile_update_form.handleChange}\r\n                      readOnly\r\n                    ></CInput>\r\n                  </div>\r\n                  {/**Phone */}\r\n                  <div className=\"col-md-12 mb-3\">\r\n                    <CLabel className=\"custom-label-5\" htmlFor=\"uPhoneNo\">\r\n                      Phone *\r\n                    </CLabel>\r\n                    <CInput\r\n                      type=\"tel\"\r\n                      name=\"phone\"\r\n                      id=\"phone\"\r\n                      value={profile_update_form.values.phone}\r\n                      onChange={profile_update_form.handleChange}\r\n                      className=\"custom-forminput-6\"\r\n                    ></CInput>\r\n                  </div>\r\n                  {/**address */}\r\n                  <div className=\"col-md-12 mb-3\">\r\n                    <CLabel className=\"custom-label-5\" htmlFor=\"Address\">\r\n                      Address *\r\n                    </CLabel>\r\n                    <CInput\r\n                      type=\"text\"\r\n                      name=\"address\"\r\n                      id=\"address\"\r\n                      value={profile_update_form.values.address}\r\n                      onChange={profile_update_form.handleChange}\r\n                      className=\"custom-forminput-6\"\r\n                    ></CInput>\r\n                    {profile_update_form.touched.address &&\r\n                      profile_update_form.errors.address && (\r\n                        <small style={{ color: \"red\" }}>\r\n                          {profile_update_form.errors.address}\r\n                        </small>\r\n                      )}\r\n                  </div>\r\n                  {/**blood_group */}\r\n                  <div className=\"col-md-12 mb-3\">\r\n                    <CLabel className=\"custom-label-5\" htmlFor=\"blood_group\">\r\n                      Blood Group *\r\n                    </CLabel>\r\n                    <Select\r\n                      id=\"blood_group\"\r\n                      value={initialBloodGroup}\r\n                      onChange={handleBloodGroupChange}\r\n                      className=\"custom-forminput-6\"\r\n                      options={blood_groups}\r\n                    ></Select>\r\n                  </div>\r\n\r\n                  {/**Button groups */}\r\n                  <div className=\"col-md-12 \">\r\n                    <div className=\"project-form-button-holders mt-3\">\r\n                      <CButton\r\n                        className=\"profile-form-btn update-profile\"\r\n                        onClick={profile_update_form.handleSubmit}\r\n                        type=\"button\"\r\n                        disabled={!profile_update_form.isValid}\r\n                      >\r\n                        Update Info\r\n                      </CButton>\r\n                      <CButton\r\n                        className=\"profile-form-btn cancel-update\"\r\n                        type=\"reset\"\r\n                        onClick={() => setVisible(!visible)}\r\n                      >\r\n                        Cancel\r\n                      </CButton>\r\n                    </div>\r\n                  </div>\r\n                </CRow>\r\n              </CForm>\r\n            </CContainer>\r\n          </CModalBody>\r\n        </CModal>\r\n\r\n        {/**Main Content */}\r\n      \r\n        <CTabs activeTab={tab}>\r\n          <CNav variant=\"tabs\" className=\"tab-style\">\r\n            {/**View Profile */}\r\n            <CNavItem>\r\n              <CNavLink data-tab=\"viewProfile\" className=\"special\">\r\n                <CIcon name=\"cil-user\" /> View Profile\r\n              </CNavLink>\r\n            </CNavItem>\r\n            {/**change password */}\r\n            <CNavItem>\r\n              <CNavLink\r\n                disabled={\r\n                  profile_details?.id != sessionStorage.getItem(USER_ID)\r\n                    ? true\r\n                    : false\r\n                }\r\n                data-tab=\"changePassword\"\r\n                className=\"special\"\r\n              >\r\n                <CIcon name=\"cil-pen-alt\" className=\"mr-1\" />\r\n                Change Password\r\n              </CNavLink>\r\n            </CNavItem>\r\n          </CNav>\r\n          {/**___________nav tab details______ */}\r\n          <CTabContent>\r\n            {/**_____VIEW PROFILE____ */}\r\n            \r\n            <CTabPane data-tab=\"viewProfile\" active={tab=='viewProfile'?true:false}>\r\n              {profile_details != undefined && (\r\n                <CContainer>\r\n                  <h3 className=\"profile-page-header\">Profile Details</h3>\r\n                  <CRow>\r\n                    <div className=\"col-lg-8 offset-lg-2\">\r\n                      <CCard className=\"card-view-profile mt-3\">\r\n                        <div className=\"user-profile-pic-div text-center\">\r\n                          <CImg\r\n                            alt=\"click to upload image\"\r\n                            className=\"mx-auto rounded-circle update-img\"\r\n                            src={avatar}\r\n                          />\r\n\r\n                          {/**__PRO PIC UP BUTTON__ */}\r\n                          <input\r\n                            style={{ display: \"none\" }}\r\n                            ref={inputFile}\r\n                            type=\"file\"\r\n                            onChange={(event) => {\r\n                              onImageChange(event.target.files[0]);\r\n                            }}\r\n                          />\r\n                          {profile_details.id ==\r\n                            sessionStorage.getItem(USER_ID) && (\r\n                            <CButton\r\n                              onClick={changeImageClick}\r\n                              type=\"button\"\r\n                              className=\"d-block mx-auto change-img-btn mt-1\"\r\n                            >\r\n                              {\" \"}\r\n                              <CIcon name=\"cil-camera\"></CIcon> Change Picture\r\n                            </CButton>\r\n                          )}\r\n                        </div>\r\n                        <CCardBody>\r\n                          <hr />\r\n                          {profile_details.id ==\r\n                            sessionStorage.getItem(USER_ID) && (\r\n                            <CButton\r\n                              className=\"edit-profile mb-3\"\r\n                              onClick={() => profileEditForm()}\r\n                            >\r\n                              <CIcon name=\"cil-pen\" className=\"mr-1\" />\r\n                              Edit Info\r\n                            </CButton>\r\n                          )}\r\n\r\n                          {/**info show */}\r\n                          <div className=\"row justify-content-center\">\r\n                            <div className=\"col-md-6 col-lg-4\">\r\n                              <h5 className=\"info-header-1\">Full Name</h5>\r\n                              <h5 className=\"profile-details-points child\">\r\n                                {capitalize(profile_details.first_name) +\r\n                                  \" \" +\r\n                                  capitalize(profile_details.last_name)}{\" \"}\r\n                              </h5>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-lg-4\">\r\n                              <h5 className=\"info-header-1\"> Email</h5>\r\n                              <h5 className=\"profile-details-points-email\">\r\n                                {profile_details.email}\r\n                              </h5>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-lg-4\">\r\n                              <h5 className=\"info-header-1\">Job title</h5>\r\n                              <h5 className=\"profile-details-points-email\">\r\n                                {profile_details?.slc_details?.slc?.name}\r\n                              </h5>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-lg-4\">\r\n                              <h5 className=\"info-header-1\"> Phone</h5>\r\n                              <h5 className=\"profile-details-points child\">\r\n                                +{profile_details.phone}\r\n                              </h5>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-lg-4\">\r\n                              <h5 className=\"info-header-1\"> Address</h5>\r\n                              <h5 className=\"profile-details-points child\">\r\n                                {profile_details.address}\r\n                              </h5>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-lg-4\">\r\n                              <h5 className=\"info-header-1\"> Blood Group</h5>\r\n                              <h5 className=\"profile-details-points child\">\r\n                                {profile_details.blood_group}\r\n                              </h5>\r\n                            </div>\r\n\r\n                            <CRow className=\"mt-5\">\r\n                              <CTabs activeTab=\"workingon\">\r\n                                <CNav variant=\"tabs\">\r\n                                  {/**View Profile */}\r\n                                  <CNavItem>\r\n                                    <CNavLink data-tab=\"workingon\">\r\n                                      Working On\r\n                                    </CNavLink>\r\n                                  </CNavItem>\r\n                                  {/* working on */}\r\n                                  {has_permission(\"projects.add_projects\") && (\r\n                                    <CNavItem>\r\n                                      <CNavLink data-tab=\"managing\">\r\n                                        Managing\r\n                                      </CNavLink>\r\n                                    </CNavItem>\r\n                                  )}\r\n                                </CNav>\r\n                                {/**___________working on tab details______ */}\r\n                                <CTabContent>\r\n                                  {/**_____WORKING ON____ */}\r\n                                  <CTabPane data-tab=\"workingon\">\r\n                                    <div className=\"mt-4\">\r\n                                      {/* <h3 className=\"projectsHeader\">\r\n                                                                Working On\r\n                                                            </h3> */}\r\n\r\n                                      <div className=\"card-holder1\">\r\n                                        {projects != undefined &&\r\n                                          Array.from(projects)\r\n                                            .slice(0, 3)\r\n                                            .map((item, idx) => (\r\n                                              <CCard\r\n                                                className=\"project-card1\"\r\n                                                key={idx}\r\n                                                onClick={() =>\r\n                                                  history.push({\r\n                                                    pathname:\r\n                                                      \"/dashboard/Projects/assigned-projects/details/\" +\r\n                                                      item.project\r\n                                                        .work_package_number +\r\n                                                      \"/\",\r\n                                                  })\r\n                                                }\r\n                                              >\r\n                                                <CCardBody>\r\n                                                  {/* <h6 className=\"id-no1\">Work Package Number: # {item.project.work_package_number}</h6> */}\r\n                                                  <h5 className=\"card-details1\">\r\n                                                    <span className=\"p-header-3\">\r\n                                                      Project Name:{\" \"}\r\n                                                    </span>{\" \"}\r\n                                                    {item.project.sub_task}\r\n                                                  </h5>\r\n\r\n                                                  <h5 className=\"card-details1\">\r\n                                                    <span className=\"p-header-3\">\r\n                                                      Planned Delivery Date :{\" \"}\r\n                                                    </span>\r\n                                                    {\r\n                                                      item.project\r\n                                                        .planned_delivery_date\r\n                                                    }\r\n                                                  </h5>\r\n                                                  <div>\r\n                                                    <h5 className=\"card-details1\">\r\n                                                      <span className=\"p-header-3\">\r\n                                                        Progress :\r\n                                                        <LinearWithValueLabel\r\n                                                          progress={() =>\r\n                                                            calculate_progress_in_percentage(\r\n                                                              totalProjectHrs(\r\n                                                                item.subtasks\r\n                                                              ),\r\n                                                              remaining_hours(\r\n                                                                item.subtasks\r\n                                                              )\r\n                                                            )\r\n                                                          }\r\n                                                        />\r\n                                                      </span>\r\n                                                    </h5>\r\n                                                  </div>\r\n                                                </CCardBody>\r\n                                              </CCard>\r\n                                            ))}\r\n                                        {/**If no projects */}\r\n                                        {projects == \"\" ||\r\n                                        projects == undefined ? (\r\n                                          <CAlert\r\n                                            className=\"no-value-show-alert\"\r\n                                            color=\"primary\"\r\n                                          >\r\n                                            Currently there are no projects\r\n                                            assigned to you\r\n                                          </CAlert>\r\n                                        ) : null}\r\n                                      </div>\r\n                                      {projects != undefined && (\r\n                                        <div className=\"button-holder3\">\r\n                                          <CButton\r\n                                            className=\"tiny-buttons1\"\r\n                                            onClick={() =>\r\n                                              history.push({\r\n                                                pathname:\r\n                                                  \"/dashboard/Projects/assigned-projects\",\r\n                                              })\r\n                                            }\r\n                                          >\r\n                                            View all\r\n                                          </CButton>\r\n                                        </div>\r\n                                      )}\r\n                                    </div>\r\n                                  </CTabPane>\r\n\r\n                                  {has_permission(\"projects.add_projects\") && (\r\n                                    <CTabPane data-tab=\"managing\">\r\n                                      <div className=\"mt-4\">\r\n                                        {/* <h3 className=\"projectsHeader\">\r\n                                                                Managing\r\n                                                            </h3> */}\r\n\r\n                                        <div className=\"card-holder1\">\r\n                                          {pmprojects != undefined &&\r\n                                            Array.from(pmprojects)\r\n                                              .slice(0, 3)\r\n                                              .map((item, idx) => (\r\n                                                <CCard\r\n                                                  className=\"project-card1\"\r\n                                                  key={idx}\r\n                                                  onClick={() =>\r\n                                                    history.push({\r\n                                                      pathname:\r\n                                                        \"/dashboard/Projects/my-projects/details/\" +\r\n                                                        item.project\r\n                                                          .work_package_number +\r\n                                                        \"/\",\r\n                                                    })\r\n                                                  }\r\n                                                >\r\n                                                  <CCardBody>\r\n                                                    <h5 className=\"card-details1\">\r\n                                                      <span className=\"p-header-3\">\r\n                                                        Project Name:{\" \"}\r\n                                                      </span>{\" \"}\r\n                                                      {item.project.sub_task}\r\n                                                    </h5>\r\n\r\n                                                    <h5 className=\"card-details1\">\r\n                                                      <span className=\"p-header-3\">\r\n                                                        Planned Delivery Date :{\" \"}\r\n                                                      </span>\r\n                                                      {\r\n                                                        item.project\r\n                                                          .planned_delivery_date\r\n                                                      }\r\n                                                    </h5>\r\n                                                    <div>\r\n                                                      <h5 className=\"card-details1\">\r\n                                                        <span className=\"p-header-3\">\r\n                                                          Progress :\r\n                                                          <LinearWithValueLabel\r\n                                                            progress={() =>\r\n                                                              calculate_progress_in_percentage(\r\n                                                                totalProjectHrs(\r\n                                                                  item.subtasks\r\n                                                                ),\r\n                                                                remaining_hours(\r\n                                                                  item.subtasks\r\n                                                                )\r\n                                                              )\r\n                                                            }\r\n                                                          />\r\n                                                        </span>\r\n                                                      </h5>\r\n                                                    </div>\r\n                                                  </CCardBody>\r\n                                                </CCard>\r\n                                              ))}\r\n                                          {/**If no projects */}\r\n                                          {pmprojects == \"\" ||\r\n                                          pmprojects == undefined ? (\r\n                                            <CAlert\r\n                                              className=\"no-value-show-alert\"\r\n                                              color=\"primary\"\r\n                                            >\r\n                                              Currently there are no projects\r\n                                              you are managing\r\n                                            </CAlert>\r\n                                          ) : null}\r\n                                        </div>\r\n                                        {pmprojects != undefined && (\r\n                                          <div className=\"button-holder3\">\r\n                                            <CButton\r\n                                              className=\"tiny-buttons1\"\r\n                                              onClick={() =>\r\n                                                history.push({\r\n                                                  pathname:\r\n                                                    \"/dashboard/Projects/my-projects\",\r\n                                                })\r\n                                              }\r\n                                            >\r\n                                              View all\r\n                                            </CButton>\r\n                                          </div>\r\n                                        )}\r\n                                      </div>\r\n                                    </CTabPane>\r\n                                  )}\r\n                                </CTabContent>\r\n                              </CTabs>\r\n                            </CRow>\r\n                          </div>\r\n\r\n                          {/* <div className=\"all-da-buttons-1\">\r\n                                                <CLabel>Assigned Projects</CLabel>\r\n                                                    {Array.from([{title:'ABC',work_package_index:'1001'}]).length > 0 && Array.from([{title:'ABC',work_package_index:'1001'}]).map((task, idx) => (\r\n                                                        <CButton key={idx} type=\"button\" className=\"package-button rounded-pill\" onClick={() => {  }}>\r\n                                                            {task.task_title}\r\n                                                            <span className=\"tooltiptext\">{task.work_package_index}</span>\r\n                                                        </CButton>\r\n                                                    ))}\r\n                                                </div> */}\r\n                        </CCardBody>\r\n                      </CCard>\r\n                    </div>\r\n                  </CRow>\r\n                </CContainer>\r\n              )}\r\n            </CTabPane>\r\n \r\n            {/**_____Change Password___ */}\r\n            <CTabPane data-tab=\"changePassword\" active={tab=='changePassword'?true:false}>\r\n              \r\n              <CContainer>\r\n                <h3 className=\"profile-page-header\">Change Password</h3>\r\n                <CRow>\r\n                  <div className=\"col-lg-8 offset-lg-2 col-md-12\">\r\n                    <CCard className=\"mt-4 card-change-password\">\r\n                      <CCardBody>\r\n                        <CForm>\r\n                          <div className=\"mb-2\">\r\n                            <CLabel\r\n                              className=\"custom-label-5\"\r\n                              htmlFor=\"userOldPass\"\r\n                            >\r\n                              Old Password\r\n                            </CLabel>\r\n                            <div className=\"password-container\">\r\n                              <CInput\r\n                                type={revealOldPwd ? \"text\" : \"password\"}\r\n                                name=\"old_password\"\r\n                                id=\"old_password\"\r\n                                className=\"custom-forminput-6\"\r\n                                value={change_pass_form.values.old_password}\r\n                                onChange={change_pass_form.handleChange}\r\n                              />\r\n                              <img\r\n                                className=\"pwd-container-img\"\r\n                                title={\r\n                                  revealOldPwd\r\n                                    ? \"Hide Old password\"\r\n                                    : \"Show Old password\"\r\n                                }\r\n                                src={revealOldPwd ? hidePwdImg : showPwdImg}\r\n                                onClick={() =>\r\n                                  setRevealOldPwd((prevState) => !prevState)\r\n                                }\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          {/**New Password */}\r\n                          <div className=\"mb-2\">\r\n                            <CLabel\r\n                              className=\"custom-label-5\"\r\n                              htmlFor=\"userNewPass\"\r\n                            >\r\n                              New Password\r\n                            </CLabel>\r\n                            <div className=\"password-container\">\r\n                              <CInput\r\n                                type={revealNewPwd ? \"text\" : \"password\"}\r\n                                name=\"new_password\"\r\n                                id=\"new_password\"\r\n                                className=\"custom-forminput-6\"\r\n                                value={change_pass_form.values.new_password}\r\n                                onChange={change_pass_form.handleChange}\r\n                              />\r\n                              <img\r\n                                className=\"pwd-container-img\"\r\n                                title={\r\n                                  revealNewPwd\r\n                                    ? \"Hide New password\"\r\n                                    : \"Show New password\"\r\n                                }\r\n                                src={revealNewPwd ? hidePwdImg : showPwdImg}\r\n                                onClick={() =>\r\n                                  setRevealNewPwd((prevState) => !prevState)\r\n                                }\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          {/**Confirm new password */}\r\n                          <div className=\"mb-2\">\r\n                            <CLabel\r\n                              className=\"custom-label-5\"\r\n                              htmlFor=\"userConfPass\"\r\n                            >\r\n                              Confirm Password\r\n                            </CLabel>\r\n                            <div className=\"password-container\">\r\n                              <CInput\r\n                                type={revealConfPwd ? \"text\" : \"password\"}\r\n                                name=\"new_password_confirm\"\r\n                                id=\"new_password_confirm\"\r\n                                className=\"custom-forminput-6\"\r\n                                value={\r\n                                  change_pass_form.values.new_password_confirm\r\n                                }\r\n                                onChange={change_pass_form.handleChange}\r\n                              />\r\n                              <img\r\n                                className=\"pwd-container-img\"\r\n                                title={\r\n                                  revealConfPwd\r\n                                    ? \"Hide Confirm password\"\r\n                                    : \"Show Confirm password\"\r\n                                }\r\n                                src={revealConfPwd ? hidePwdImg : showPwdImg}\r\n                                onClick={() =>\r\n                                  setRevealConfPwd((prevState) => !prevState)\r\n                                }\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          {/**BUtton groups */}\r\n                          <div className=\"project-form-button-holders mt-3\">\r\n                            <CButton\r\n                              className=\"profile-form-btn update-profile\"\r\n                              disabled={!change_pass_form.isValid}\r\n                              type=\"button\"\r\n                              onClick={change_pass_form.handleSubmit}\r\n                            >\r\n                              Update Password\r\n                            </CButton>\r\n                            <CButton\r\n                              className=\"profile-form-btn cancel-update\"\r\n                              type=\"button\"\r\n                              onClick={change_pass_form.resetForm }\r\n                            >\r\n                              Cancel\r\n                            </CButton>\r\n                          </div>\r\n                        </CForm>\r\n                      </CCardBody>\r\n                    </CCard>\r\n                  </div>\r\n                </CRow>\r\n              </CContainer>\r\n            </CTabPane>\r\n          </CTabContent>\r\n        </CTabs>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\nexport default UserProfile;\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n      <Box sx={{ width: '100%', mr: 1 }}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box sx={{ minWidth: 35 }}>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function LinearWithValueLabel(props) {\r\n  const [progress, setProgress] = React.useState(props.progress);\r\n  \r\n  React.useEffect(() => {\r\n    // const timer = setInterval(() => {\r\n    //   setProgress((prevProgress) => (prevProgress >= 100 ? 10 : prevProgress + 10));\r\n    // }, 800);\r\n    // return () => {\r\n    //   clearInterval(timer);\r\n    // };\r\n  }, []);\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <LinearProgressWithLabel value={progress} />\r\n    </Box>\r\n  );\r\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLinearProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiLinearProgress', slot);\n}\nconst linearProgressClasses = generateUtilityClasses('MuiLinearProgress', ['root', 'colorPrimary', 'colorSecondary', 'determinate', 'indeterminate', 'buffer', 'query', 'dashed', 'dashedColorPrimary', 'dashedColorSecondary', 'bar', 'barColorPrimary', 'barColorSecondary', 'bar1Indeterminate', 'bar1Determinate', 'bar1Buffer', 'bar2Indeterminate', 'bar2Buffer']);\nexport default linearProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4,\n    _t5,\n    _t6;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useTheme from '../styles/useTheme';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getLinearProgressUtilityClass } from './linearProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TRANSITION_DURATION = 4; // seconds\n\nconst indeterminate1Keyframe = keyframes(_t || (_t = _`\n  0% {\n    left: -35%;\n    right: 100%;\n  }\n\n  60% {\n    left: 100%;\n    right: -90%;\n  }\n\n  100% {\n    left: 100%;\n    right: -90%;\n  }\n`));\nconst indeterminate2Keyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    left: -200%;\n    right: 100%;\n  }\n\n  60% {\n    left: 107%;\n    right: -8%;\n  }\n\n  100% {\n    left: 107%;\n    right: -8%;\n  }\n`));\nconst bufferKeyframe = keyframes(_t3 || (_t3 = _`\n  0% {\n    opacity: 1;\n    background-position: 0 -23px;\n  }\n\n  60% {\n    opacity: 0;\n    background-position: 0 -23px;\n  }\n\n  100% {\n    opacity: 1;\n    background-position: -200px -23px;\n  }\n`));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, variant],\n    dashed: ['dashed', `dashedColor${capitalize(color)}`],\n    bar1: ['bar', `barColor${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar1Indeterminate', variant === 'determinate' && 'bar1Determinate', variant === 'buffer' && 'bar1Buffer'],\n    bar2: ['bar', variant !== 'buffer' && `barColor${capitalize(color)}`, variant === 'buffer' && `color${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar2Indeterminate', variant === 'buffer' && 'bar2Buffer']\n  };\n  return composeClasses(slots, getLinearProgressUtilityClass, classes);\n};\n\nconst getColorShade = (theme, color) => {\n  if (color === 'inherit') {\n    return 'currentColor';\n  }\n\n  return theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.5);\n};\n\nconst LinearProgressRoot = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`], styles[ownerState.variant]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'block',\n  height: 4,\n  zIndex: 0,\n  // Fix Safari's bug during composition of different paint.\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  backgroundColor: getColorShade(theme, ownerState.color)\n}, ownerState.color === 'inherit' && ownerState.variant !== 'buffer' && {\n  backgroundColor: 'none',\n  '&::before': {\n    content: '\"\"',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'currentColor',\n    opacity: 0.3\n  }\n}, ownerState.variant === 'buffer' && {\n  backgroundColor: 'transparent'\n}, ownerState.variant === 'query' && {\n  transform: 'rotate(180deg)'\n}));\nconst LinearProgressDashed = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Dashed',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.dashed, styles[`dashedColor${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => {\n  const backgroundColor = getColorShade(theme, ownerState.color);\n  return _extends({\n    position: 'absolute',\n    marginTop: 0,\n    height: '100%',\n    width: '100%'\n  }, ownerState.color === 'inherit' && {\n    opacity: 0.3\n  }, {\n    backgroundImage: `radial-gradient(${backgroundColor} 0%, ${backgroundColor} 16%, transparent 42%)`,\n    backgroundSize: '10px 10px',\n    backgroundPosition: '0 -23px'\n  });\n}, css(_t4 || (_t4 = _`\n    animation: ${0} 3s infinite linear;\n  `), bufferKeyframe));\nconst LinearProgressBar1 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar1',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar1Indeterminate, ownerState.variant === 'determinate' && styles.bar1Determinate, ownerState.variant === 'buffer' && styles.bar1Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : theme.palette[ownerState.color].main\n}, ownerState.variant === 'determinate' && {\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}, ownerState.variant === 'buffer' && {\n  zIndex: 1,\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t5 || (_t5 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n    `), indeterminate1Keyframe));\nconst LinearProgressBar2 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar2',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar2Indeterminate, ownerState.variant === 'buffer' && styles.bar2Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left'\n}, ownerState.variant !== 'buffer' && {\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : theme.palette[ownerState.color].main\n}, ownerState.color === 'inherit' && {\n  opacity: 0.3\n}, ownerState.variant === 'buffer' && {\n  backgroundColor: getColorShade(theme, ownerState.color),\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t6 || (_t6 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;\n    `), indeterminate2Keyframe));\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLinearProgress'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    value,\n    valueBuffer,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const theme = useTheme();\n  const rootProps = {};\n  const inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      let transform = value - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar1.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      let transform = (valueBuffer || 0) - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar2.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(LinearProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other, {\n    children: [variant === 'buffer' ? /*#__PURE__*/_jsx(LinearProgressDashed, {\n      className: classes.dashed,\n      ownerState: ownerState\n    }) : null, /*#__PURE__*/_jsx(LinearProgressBar1, {\n      className: classes.bar1,\n      ownerState: ownerState,\n      style: inlineStyles.bar1\n    }), variant === 'determinate' ? null : /*#__PURE__*/_jsx(LinearProgressBar2, {\n      className: classes.bar2,\n      ownerState: ownerState,\n      style: inlineStyles.bar2\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default LinearProgress;","export default __webpack_public_path__ + \"static/media/Showpass-show.ab5421f5.svg\";","export default __webpack_public_path__ + \"static/media/Hide.31c620fc.svg\";"],"sourceRoot":""}