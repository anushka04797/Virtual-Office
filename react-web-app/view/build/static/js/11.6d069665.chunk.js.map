{"version":3,"sources":["pages/sign-up/signUp.js","assets/icons/Showpass-show.svg","assets/icons/Hide.svg"],"names":["Yup","shape","first_name","min","max","required","password","email","Register","history","useHistory","useState","useSnackbar","enqueueSnackbar","closeSnackbar","submitted","setSubmitted","avatar","setAvatar","isRevealPwd","setIsRevealPwd","isRevealConfPwd","setIsRevealConfPwd","image","setImage","responseErrors","setResponseErrors","formSignUp","useFormik","initialValues","last_name","phone","confirm_pass","validateOnChange","validateOnBlur","validate","values","errors","RegExp","test","String","length","onSubmit","console","log","formData","FormData","Object","entries","key","value","append","undefined","PUBLIC_FORM_API","post","then","res","data","success","status","push","pathname","state","registration","index","variant","catch","err","className","src","htmlFor","id","type","onChange","event","file","target","files","URL","createObjectURL","Array","from","map","error","idx","name","handleChange","touched","style","color","isValid","country","iso2","inputProps","autoFocus","onlyCountries","inputClass","countryCodeEditable","setFieldValue","title","hidePwdImg","showPwdImg","onClick","prevState","onKeyPress","handleSubmit","to"],"mappings":"ySAmBqBA,MAAaC,MAAM,CACtCC,WAAYF,MACTG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZC,SAAUN,MACPG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZE,MAAOP,MAAaO,MAAM,iBAAiBF,SAAS,cAwSvCG,UArSE,WACf,IAAIC,EAAUC,cACd,EAA0BC,qBAA1B,mBACA,GADA,UAC2CC,eAAnCC,EAAR,EAAQA,gBACR,GADA,EAAyBC,cACMH,oBAAS,IAAxC,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAA4BL,qBAA5B,mBAAOM,EAAP,KAAeC,EAAf,KACA,EAAsCP,oBAAS,GAA/C,mBAAOQ,EAAP,KAAoBC,EAApB,KACA,EAA8CT,oBAAS,GAAvD,mBAAOU,EAAP,KAAwBC,EAAxB,KACA,EAA0BX,qBAA1B,mBAAOY,EAAP,KAAcC,EAAd,KACA,EAAyCb,mBAAS,IAAlD,mBAAOc,EAAP,KAAsBC,EAAtB,KAwDMC,EAAaC,YAAU,CAC3BC,cAAe,CACb3B,WAAY,GACZ4B,UAAW,GACXvB,MAAO,GACPwB,MAAO,GACPzB,SAAU,GACV0B,aAAc,IAIhBC,kBAAkB,EAClBC,gBAAgB,EAChBC,SApEyB,SAACC,GAC1B,IAAMC,EAAS,GASf,OARKD,EAAOlC,aAAYmC,EAAOnC,WAAa,qBACvCkC,EAAO7B,QAAO8B,EAAO9B,MAAQ,sBAC7B6B,EAAOL,QAAOM,EAAON,MAAQ,6BAC9BK,EAAOL,QAAU,IAAIO,OAAO,YAAYC,KAAKH,EAAOL,SAAQM,EAAON,MAAM,wBACzES,OAAOJ,EAAO9B,UAAUmC,OAAO,IAAGJ,EAAO/B,SAAW,yBACnD8B,EAAO9B,WAAW+B,EAAO/B,SAAW,yBAErC8B,EAAO9B,UAAY8B,EAAOJ,eAAcK,EAAOL,aAAe,0BAC3DK,GA2DPK,SAzDc,SAACN,GACfO,QAAQC,IAAIR,GACZpB,GAAa,GAEb,IADA,IAAI6B,EAAW,IAAIC,SACnB,MAA2BC,OAAOC,QAAQrB,EAAWS,QAArD,eAA8D,CAAzD,0BAAOa,EAAP,KAAYC,EAAZ,KACQ,gBAAPD,GACFJ,EAASM,OAAOF,EAAKC,GAGf,MAAP3B,QAAsB6B,GAAP7B,GAChBsB,EAASM,OAAO,cAAc5B,GAEhC8B,IAAgBC,KAAK,iBAAkBT,GAAUU,MAAK,SAACC,GAErD,GADAxC,GAAa,GACW,QAApBwC,EAAIC,KAAKC,SAAmC,KAAdF,EAAIG,OACpClD,EAAQmD,KAAK,CAAEC,SAAU,SAAUC,MAAO,CAAEC,cAAc,UAEvD,GAAuB,SAApBP,EAAIC,KAAKC,SAAoC,KAAdF,EAAIG,QAAiBH,EAAIC,KAAKpB,OAAO,CAC1EM,QAAQC,IAAIY,EAAIC,KAAKpB,QAErBX,EAAkB8B,EAAIC,KAAKpB,QAC3B,cAA2BU,OAAOC,QAAQQ,EAAIC,KAAKpB,QAAnD,eAA4D,CAAvD,0BAAOY,EAAP,KAAYC,EAAZ,KACHP,QAAQC,IAAR,UAAeK,EAAf,aAAuBC,IAEvB,IAAK,IAAIc,EAAM,EAAEA,EAAMd,EAAMT,OAAOuB,IAClCnD,EAAgBqC,EAAMc,GAAO,CAACC,QAAQ,iBAK3CC,OAAM,SAAAC,GACPnD,GAAa,GACb2B,QAAQC,IAAIuB,SAiChB,OACE,mCACE,qBAAKC,UAAU,gBAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,cAAd,sBAGA,sBAAKA,UAAU,wBAAf,UACE,qBAAKA,UAAU,yBAAf,SACE,qBAAKC,IAAKpD,GAAkB,kCAAmCmD,UAAU,iBAE3E,uBAAOE,QAAQ,SAASF,UAAW7C,EAAQ,iCAAmC,sBAA9E,SAEE,uBACEgD,GAAG,SACHH,UAAU,+BACVI,KAAK,OACLC,SAAU,SAACC,GAAD,OA3CDC,EA2C0BD,EAAME,OAAOC,MAAM,GA1ClE3D,EAAU4D,IAAIC,gBAAgBJ,SAC9BnD,EAASmD,GAFW,IAACA,UAiDf,qBAAKP,UAAU,qBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,8CAAf,UACCY,MAAMC,KAAKxD,GAAgByD,KAAI,SAACC,EAAMC,OAGrC,cAAC,IAAD,CAAOhB,UAAU,mBAAjB,SACE,sBAAKA,UAAU,MAAf,UAEE,sBAAKA,UAAU,iCAAf,UACE,cAAC,IAAD,CAAQE,QAAQ,YAAYF,UAAU,iBAAtC,0BAGA,cAAC,IAAD,CACEI,KAAK,OACLD,GAAG,aACHc,KAAK,aACLnC,MAAOvB,EAAWS,OAAOlC,WACzBuE,SAAU9C,EAAW2D,aACrB,mBAAiB,SACjBlB,UAAU,uBAEXzC,EAAW4D,QAAQrF,YAAcyB,EAAWU,OAAOnC,YAAc,uBAAOsF,MAAO,CAAEC,MAAO,OAAvB,SAAiC9D,EAAWU,OAAOnC,gBAGvH,sBAAKkE,UAAU,iCAAf,UACE,cAAC,IAAD,CAAQE,QAAQ,WAAWF,UAAU,iBAArC,uBAGA,cAAC,IAAD,CACEI,KAAK,OACLD,GAAG,YACHc,KAAK,YACLnC,MAAOvB,EAAWS,OAAON,UACzB2C,SAAU9C,EAAW2D,aACrB,mBAAiB,SACjBlB,UAAU,0BAId,sBAAKA,UAAU,iCAAf,UACE,cAAC,IAAD,CAAQE,QAAQ,QAAQF,UAAU,iBAAlC,qBAGA,cAAC,IAAD,CACEI,KAAK,QACLD,GAAG,QACHc,KAAK,QACLnC,MAAOvB,EAAWS,OAAO7B,MACxBkE,SAAU9C,EAAW2D,aACtB,mBAAiB,YACjBlB,UAAU,4BAEWhB,GAAtB3B,EAAelB,OAAoB,uBAAOiF,MAAO,CAAEC,MAAO,OAAvB,SAAiChE,EAAelB,QACnFoB,EAAW4D,QAAQhF,OAASoB,EAAWU,OAAO9B,OAAS,uBAAOiF,MAAO,CAAEC,MAAO,OAAvB,SAAiC9D,EAAWU,OAAO9B,WAG7G,sBAAK6D,UAAU,iCAAf,UACE,cAAC,IAAD,CAAQE,QAAQ,QAAQF,UAAU,iBAAlC,mBAcA,cAAC,IAAD,CAcEsB,QAAS,SAACxC,EAAOyC,GACf,MAAkB,MAAdA,EAAQC,MAA4B,IAAd1C,EAAMT,OACvB,kBAAkBS,EAAM,KAAKyC,EAAQN,KAEvB,MAAdM,EAAQC,MAA4B,IAAd1C,EAAMT,QAC5B,kBAAkBS,EAAM,KAAKyC,EAAQN,MAKhDQ,WAAY,CACVR,KAAM,QACNhF,UAAU,EACVyF,WAAW,GAEbC,cAAe,CAAC,KAAM,MACtBC,WAAW,2BACXC,qBAAqB,EAErBN,QAAS,KACTzC,MAAOvB,EAAWS,OAAOL,MACzB0C,SAAU,SAAA1C,GAAUJ,EAAWuE,cAAc,QAAQnE,WAEhCqB,GAAtB3B,EAAeM,QAAqBJ,EAAWU,OAAON,OAASJ,EAAWS,OAAOL,MAAMU,OAAO,GAAK,uBAAO+C,MAAO,CAAEC,MAAO,OAAvB,SAAiChE,EAAeM,QACnJJ,EAAW4D,QAAQxD,OAASJ,EAAWU,OAAON,OAAS,uBAAOyD,MAAO,CAAEC,MAAO,OAAvB,SAAiC9D,EAAWU,OAAON,WAG7G,sBAAKqC,UAAU,0BAAf,UACE,eAAC,IAAD,CACEE,QAAQ,wBACRF,UAAU,iBAFZ,yBAIc,uBAAOoB,MAAO,CAAEC,MAAO,SAAvB,kCAJd,OAMA,sBAAKrB,UAAU,qBAAf,UACE,cAAC,IAAD,CACEI,KAAMrD,EAAc,OAAS,WAC7BoD,GAAG,WACHc,KAAK,WACLnC,MAAOvB,EAAWS,OAAO9B,SACzBmE,SAAU9C,EAAW2D,aACrBlB,UAAU,uBAEXzC,EAAW4D,QAAQjF,UAAYqB,EAAWU,OAAO/B,UAAY,uBAAOkF,MAAO,CAAEC,MAAO,OAAvB,SAAiC9D,EAAWU,OAAO/B,WACjH,qBAAK8D,UAAU,oBACb+B,MAAOhF,EAAc,wBAA0B,wBAC/CkD,IAAKlD,EAAciF,IAAaC,IAChCC,QAAS,kBAAMlF,GAAe,SAAAmF,GAAS,OAAKA,cAKlD,sBAAKnC,UAAU,0BAAf,UACE,cAAC,IAAD,CACEE,QAAQ,cACRF,UAAU,iBAFZ,8BAMA,sBAAKA,UAAU,qBAAf,UACE,cAAC,IAAD,CACEI,KAAMnD,EAAkB,OAAS,WACjCkD,GAAG,eACHc,KAAK,eACLnC,MAAOvB,EAAWS,OAAOJ,aACzByC,SAAU9C,EAAW2D,aACrBlB,UAAU,qBACVoC,WArLH,SAAC9B,GACJ,SAAbA,EAAMzB,KACPtB,EAAW8E,kBAqLQ9E,EAAW4D,QAAQvD,cAAgBL,EAAWU,OAAOL,cAAgB,uBAAOwD,MAAO,CAAEC,MAAO,OAAvB,SAAiC9D,EAAWU,OAAOL,eACzH,qBAAKoC,UAAU,oBACb+B,MAAO9E,EAAkB,gBAAkB,gBAC3CgD,IAAKhD,EAAkB+E,IAAaC,IACpCC,QAAS,kBAAMhF,GAAmB,SAAAiF,GAAS,OAAKA,cAKtD,qBAAKnC,UAAU,cAAf,SACGrD,EAAU,cAAC,IAAD,IAAkB,cAAC,IAAD,CAASyD,KAAK,SAAS8B,QAAS3E,EAAW8E,aAAcrC,UAAU,kBAAnE,uBAK/B,qBAAKA,UAAU,YAAf,SACE,qBAAIA,UAAU,eAAd,UAA6B,sBAAMA,UAAU,WAAhB,sCAA0D,cAAC,IAAD,CAAMA,UAAU,oBAAoBsC,GAAG,IAAvC,+C,iCCxT9F,QAA0B,2C,iCCA1B,QAA0B","file":"static/js/11.6d069665.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./signUp.css\";\r\nimport hidePwdImg from '../../assets/icons/Showpass-show.svg';\r\nimport showPwdImg from '../../assets/icons/Hide.svg';\r\nimport {\r\n  CForm,\r\n  CLabel,\r\n  CButton,\r\n  CInput,\r\n} from \"@coreui/react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { PUBLIC_FORM_API } from \"../../Config\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { LinearProgress } from \"@mui/material\";\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  first_name: Yup.string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required'),\r\n  password: Yup.string()\r\n    .min(8, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required'),\r\n  email: Yup.string().email('Invalid email').required('Required'),\r\n});\r\n\r\nconst Register = () => {\r\n  let history = useHistory()\r\n  const [value, setValue] = useState()\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const [submitted,setSubmitted]=useState(false)\r\n  const [avatar, setAvatar] = useState()\r\n  const [isRevealPwd, setIsRevealPwd] = useState(false);\r\n  const [isRevealConfPwd, setIsRevealConfPwd] = useState(false);\r\n  const [image, setImage] = useState()\r\n  const [responseErrors,setResponseErrors]=useState({})\r\n  const validateSignUpForm = (values) => {\r\n    const errors = {};\r\n    if (!values.first_name) errors.first_name = \"Name is required!\"\r\n    if (!values.email) errors.email = \"Email is required!\"\r\n    if (!values.phone) errors.phone = \"Phone number is required!\"\r\n    if (values.phone && !new RegExp('^[0-9]+$').test(values.phone)) errors.phone=\"Invalid Phone Number\"\r\n    if (String(values.password).length<8) errors.password = \"Password is too short\"\r\n    if (!values.password) {errors.password = \"Password is required!\"}\r\n    //else if(values.password != values.confirm_pass) {errors.confirm_pass = \"Password did not match\"; errors.password = \"Confirm your password\"}\r\n    if (values.password != values.confirm_pass) errors.confirm_pass = \"Password did not match\"\r\n    return errors;\r\n  }\r\n  const sign_up = (values) => {\r\n    console.log(values)\r\n    setSubmitted(true)\r\n    let formData = new FormData();\r\n    for (const [key, value] of Object.entries(formSignUp.values)) {\r\n      if (key != 'confirm_pass') {\r\n        formData.append(key, value)\r\n      }\r\n    }\r\n    if(image!=null && image!=undefined){\r\n      formData.append('profile_pic',image)\r\n    }\r\n    PUBLIC_FORM_API.post('auth/register/', formData).then((res) => {\r\n      setSubmitted(false)\r\n      if (res.data.success == 'True' && res.status == 201) {\r\n        history.push({ pathname: '/login', state: { registration: true } })\r\n      }\r\n      else if(res.data.success == 'False' && res.status == 201 && res.data.errors){\r\n        console.log(res.data.errors)\r\n        // setResponseErrors(res.data.errors)\r\n        setResponseErrors(res.data.errors)\r\n        for (const [key, value] of Object.entries(res.data.errors)) {\r\n          console.log(`${key}: ${value}`);\r\n          // enqueueSnackbar(err.response.data.message,{variant:\"warning\"})\r\n          for (let index=0;index<value.length;index++) {\r\n            enqueueSnackbar(value[index],{variant:\"warning\"})\r\n          }\r\n        }\r\n        \r\n      }\r\n    }).catch(err=>{\r\n      setSubmitted(false)\r\n      console.log(err)\r\n    })\r\n    \r\n  }\r\n  const reset_form = () => {\r\n    formSignUp.resetForm()\r\n  }\r\n  const onImageChange = (file) => {\r\n    setAvatar(URL.createObjectURL(file))\r\n    setImage(file)\r\n  }\r\n  const formSignUp = useFormik({\r\n    initialValues: {\r\n      first_name: '',\r\n      last_name: '',\r\n      email: '',\r\n      phone: '',\r\n      password: '',\r\n      confirm_pass: ''\r\n    },\r\n    //validationSchema:{SignupSchema},\r\n    // validationSchema: {SignupSchema},\r\n    validateOnChange: true,\r\n    validateOnBlur: true,\r\n    validate: validateSignUpForm,\r\n    onSubmit: sign_up\r\n  })\r\n  \r\n  const handleKeyPress=(event)=>{\r\n    if(event.key == 'Enter'){\r\n      formSignUp.handleSubmit()\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"register-page\">\r\n        <div className=\"container\">\r\n          <h3 className=\"page-header\">Register</h3>\r\n          {/**img uplaod div */}\r\n\r\n          <div className=\"seller-pro-pic-holder\">\r\n            <div className=\"seller-profile-pic-div\">\r\n              <img src={avatar ? avatar : \"avatars/user-avatar-default.png\"} className=\"avatar-img\" />\r\n            </div>\r\n            <label htmlFor=\"propic\" className={image ? \"pro-img-up-btn mb-0 remove-img\" : \"pro-img-up-btn mb-0\"}>\r\n              {/* <!-- propic --> */}\r\n              <input\r\n                id=\"propic\"\r\n                className=\"form-control form-control-md\"\r\n                type=\"file\"\r\n                onChange={(event) => onImageChange(event.target.files[0])}\r\n              />\r\n            </label>\r\n          </div>\r\n          \r\n          {/**submit form */}\r\n          <div className=\"custom-form-holder\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-10 offset-md-1 col-sm-12 offset-sm-0\">\r\n              {Array.from(responseErrors).map((error,idx)=>{\r\n                <p key={idx}>{error}</p>\r\n              })}\r\n                <CForm className=\"custom-form-sign\">\r\n                  <div className=\"row\">\r\n                    {/**first name */}\r\n                    <div className=\"col-md-6 col-sm-12 col-12 mb-3\">\r\n                      <CLabel htmlFor=\"firstName\" className=\"custom-label-2\">\r\n                        First Name *\r\n                      </CLabel>\r\n                      <CInput\r\n                        type=\"text\"\r\n                        id=\"first_name\"\r\n                        name=\"first_name\"\r\n                        value={formSignUp.values.first_name}\r\n                        onChange={formSignUp.handleChange}\r\n                        aria-describedby=\"fnHelp\"\r\n                        className=\"custom-formgroup-2\"\r\n                      />\r\n                      {formSignUp.touched.first_name && formSignUp.errors.first_name && <small style={{ color: 'red' }}>{formSignUp.errors.first_name}</small>}\r\n                    </div>\r\n                    {/**last name */}\r\n                    <div className=\"col-md-6 col-sm-12 col-12 mb-3\">\r\n                      <CLabel htmlFor=\"lastName\" className=\"custom-label-2\">\r\n                        Last Name\r\n                      </CLabel>\r\n                      <CInput\r\n                        type=\"text\"\r\n                        id=\"last_name\"\r\n                        name=\"last_name\"\r\n                        value={formSignUp.values.last_name}\r\n                        onChange={formSignUp.handleChange}\r\n                        aria-describedby=\"lnHelp\"\r\n                        className=\"custom-formgroup-2\"\r\n                      />\r\n                    </div>\r\n                    {/**Email */}\r\n                    <div className=\"col-md-6 col-sm-12 col-12 mb-3\">\r\n                      <CLabel htmlFor=\"email\" className=\"custom-label-2\">\r\n                        Email *\r\n                      </CLabel>\r\n                      <CInput\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        value={formSignUp.values.email}\r\n                         onChange={formSignUp.handleChange}\r\n                        aria-describedby=\"emailHelp\"\r\n                        className=\"custom-formgroup-2\"\r\n                      />\r\n                      {responseErrors.email!=undefined && <small style={{ color: 'red' }}>{responseErrors.email}</small>}\r\n                      {formSignUp.touched.email && formSignUp.errors.email && <small style={{ color: 'red' }}>{formSignUp.errors.email}</small>}\r\n                    </div>\r\n                    {/**Phone */}\r\n                    <div className=\"col-md-6 col-sm-12 col-12 mb-3\">\r\n                      <CLabel htmlFor=\"phone\" className=\"custom-label-2\">\r\n                        Phone\r\n                      </CLabel>\r\n                      {/* <CInput\r\n                        type=\"tel\"\r\n                        id=\"phone\"\r\n                        name=\"phone\"\r\n                        placeholder=\"01XXX XXX XXX\"\r\n                        value={formSignUp.values.phone}\r\n                        onChange={(event)=>{formSignUp.handleChange(event)}}\r\n                        aria-describedby=\"phoneHelp\"\r\n                        className=\"custom-formgroup-2\"\r\n                      /> */}\r\n                      {/* <PhoneInput flags={flags} value={value} onChange={setValue}/> */}\r\n                      <PhoneInput\r\n                        // isValid={(value, country) => {\r\n                        //   console.log('value',value.length)\r\n                        //   let error_text=''\r\n                        //   switch(country.iso2){\r\n                        //     case 'bd':\r\n                        //       if(value.length<11 || value.length>13){\r\n                        //         // console.log('value',value)\r\n                        //         error_text= 'Invalid value: '+value+', '+country.name;\r\n                        //       }\r\n                        //       break\r\n                        //   }\r\n                        //   return error_text\r\n                        // }}\r\n                        isValid={(value, country) => {\r\n                          if (country.iso2=='bd' && value.length!=13) {\r\n                            return 'Invalid value: '+value+', '+country.name;\r\n                          }\r\n                          else if (country.iso2=='us' && value.length!=11) {\r\n                            return 'Invalid value: '+value+', '+country.name;\r\n                          } else {\r\n                            return true;\r\n                          }\r\n                        }}\r\n                        inputProps={{\r\n                          name: 'phone',\r\n                          required: true,\r\n                          autoFocus: false\r\n                        }}\r\n                        onlyCountries={['bd', 'us']}\r\n                        inputClass=\"w-100 custom-formgroup-2\"\r\n                        countryCodeEditable={false}\r\n                        // inputStyle=\"width:100% !important;\"\r\n                        country={'bd'}\r\n                        value={formSignUp.values.phone}\r\n                        onChange={phone => {formSignUp.setFieldValue('phone',phone)}}\r\n                      />\r\n                      {responseErrors.phone!=undefined && !formSignUp.errors.phone && formSignUp.values.phone.length>0 && <small style={{ color: 'red' }}>{responseErrors.phone}</small>}\r\n                      {formSignUp.touched.phone && formSignUp.errors.phone && <small style={{ color: 'red' }}>{formSignUp.errors.phone}</small>}\r\n                    </div>\r\n                    {/**password */}\r\n                    <div className=\"col-md-6 col-sm-12 mb-3\">\r\n                      <CLabel\r\n                        htmlFor=\"exampleInputPassword1\"\r\n                        className=\"custom-label-2\"\r\n                      >\r\n                        Password * (<small style={{ color: 'black' }}>Minimum 8 characters</small>)\r\n                      </CLabel>\r\n                      <div className=\"password-container\">\r\n                        <CInput\r\n                          type={isRevealPwd ? \"text\" : \"password\"}\r\n                          id=\"password\"\r\n                          name=\"password\"\r\n                          value={formSignUp.values.password}\r\n                          onChange={formSignUp.handleChange}\r\n                          className=\"custom-formgroup-2\"\r\n                        />\r\n                        {formSignUp.touched.password && formSignUp.errors.password && <small style={{ color: 'red' }}>{formSignUp.errors.password}</small>}\r\n                        <img className=\"pwd-container-img\"\r\n                          title={isRevealPwd ? \"Hide Confirm password\" : \"Show Confirm password\"}\r\n                          src={isRevealPwd ? hidePwdImg : showPwdImg}\r\n                          onClick={() => setIsRevealPwd(prevState => !prevState)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    {/*confirm password */}\r\n                    <div className=\"col-md-6 col-sm-12 mb-3\">\r\n                      <CLabel\r\n                        htmlFor=\"confirmPass\"\r\n                        className=\"custom-label-2\"\r\n                      >\r\n                        Confirm Password\r\n                      </CLabel>\r\n                      <div className=\"password-container\">\r\n                        <CInput\r\n                          type={isRevealConfPwd ? \"text\" : \"password\"}\r\n                          id=\"confirm_pass\"\r\n                          name=\"confirm_pass\"\r\n                          value={formSignUp.values.confirm_pass}\r\n                          onChange={formSignUp.handleChange}\r\n                          className=\"custom-formgroup-2\"\r\n                          onKeyPress={handleKeyPress}\r\n                        />\r\n                        {formSignUp.touched.confirm_pass && formSignUp.errors.confirm_pass && <small style={{ color: 'red' }}>{formSignUp.errors.confirm_pass}</small>}\r\n                        <img className=\"pwd-container-img\"\r\n                          title={isRevealConfPwd ? \"Hide password\" : \"Show password\"}\r\n                          src={isRevealConfPwd ? hidePwdImg : showPwdImg}\r\n                          onClick={() => setIsRevealConfPwd(prevState => !prevState)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    {/*submit button */}\r\n                    <div className=\"sign-holder\">\r\n                      {submitted?<LinearProgress/>:<CButton type=\"button\" onClick={formSignUp.handleSubmit} className=\"submit-button-s\">\r\n                        Sign up\r\n                      </CButton>}\r\n                    </div>\r\n                    {/**Go to sign in */}\r\n                    <div className=\"mb-4 mt-3\">\r\n                      <h5 className=\"final-footer\"><span className=\"dum-text\">Already have an account?</span><Link className=\"registration-link\" to=\"/\">Sign in</Link></h5>\r\n                    </div>\r\n                  </div>\r\n                </CForm>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Register;\r\n","export default __webpack_public_path__ + \"static/media/Showpass-show.ab5421f5.svg\";","export default __webpack_public_path__ + \"static/media/Hide.31c620fc.svg\";"],"sourceRoot":""}