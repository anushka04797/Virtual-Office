{"version":3,"sources":["pages/profile/profileView.js","components/linear-progress-bar/linear-progress-bar.js","../node_modules/@mui/material/LinearProgress/linearProgressClasses.js","../node_modules/@mui/material/LinearProgress/LinearProgress.js","assets/icons/Showpass-show.svg","assets/icons/Hide.svg"],"names":["UserProfile","history","useHistory","id","useParams","useState","revealOldPwd","setRevealOldPwd","revealNewPwd","setRevealNewPwd","revealConfPwd","setRevealConfPwd","profile_details","setProfileDetails","initialBloodGroup","setInitialBloodGroup","inputFile","useRef","setImage","BASE_URL","profile_pic","avatar","setAvatar","visible","setVisible","dispatch","useDispatch","profileEditForm","console","log","profile_update_form","setValues","first_name","last_name","email","phone","address","blood_group","change_pass_form","useFormik","initialValues","old_password","new_password","new_password_confirm","validateOnChange","validateOnBlur","validate","values","errors","String","length","onSubmit","formData","FormData","Object","entries","key","value","append","API","put","then","res","status","resetForm","swal","catch","err","response","update_profile_image","image","image_form_data","FILE_API","post","sessionStorage","getItem","USER_ID","useEffect","get","data","window","scrollTo","label","success","fetchPersonalDetails","capitalize","string","undefined","charAt","toUpperCase","slice","toLowerCase","projects","useSelector","state","remaining_hours","forEach","item","parseFloat","totalProjectHrs","total_hours","planned_hours","calculate_progress_in_percentage","pmprojects","temp","has_permission","pm_projects","idx","project","push","closeOnBackdrop","alignment","show","onClose","closeButton","className","htmlFor","type","name","onChange","handleChange","readOnly","touched","style","color","options","onClick","handleSubmit","disabled","isValid","activeTab","variant","alt","src","display","ref","event","URL","createObjectURL","onImageChange","target","files","current","click","slc_details","slc","Array","from","map","pathname","work_package_number","sub_task","planned_delivery_date","progress","subtasks","title","hidePwdImg","showPwdImg","prevState","LinearProgressWithLabel","props","sx","alignItems","width","mr","minWidth","Math","round","LinearWithValueLabel","React","getLinearProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_t5","_t6","_excluded","indeterminate1Keyframe","keyframes","indeterminate2Keyframe","bufferKeyframe","getColorShade","theme","palette","mode","lighten","main","darken","LinearProgressRoot","styled","overridesResolver","styles","ownerState","root","_extends","position","overflow","height","zIndex","colorAdjust","backgroundColor","content","left","top","right","bottom","opacity","transform","LinearProgressDashed","dashed","marginTop","backgroundImage","backgroundSize","backgroundPosition","css","LinearProgressBar1","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","transition","transformOrigin","LinearProgressBar2","bar2Indeterminate","bar2Buffer","LinearProgress","inProps","useThemeProps","valueBuffer","other","_objectWithoutPropertiesLoose","classes","slots","bar1","bar2","composeClasses","useUtilityClasses","useTheme","rootProps","inlineStyles","direction","process","_jsxs","clsx","role","children","_jsx"],"mappings":"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","file":"static/js/27.1cce3ffb.chunk.js","sourcesContent":["import CIcon from \"@coreui/icons-react\";\r\nimport {\r\n    CLabel,\r\n    CContainer,\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabPane,\r\n    CTabContent,\r\n    CRow,\r\n    CTabs,\r\n    CCard,\r\n    CButton,\r\n    CImg,\r\n    CCardBody,\r\n    CModal,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CModalBody,\r\n    CForm,\r\n    CInput,\r\n    CAlert,\r\n} from \"@coreui/react\";\r\nimport Select from 'react-select'\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./profileView.css\";\r\nimport PassWordChangeForm from \"../../components/changeUserPasswordForm/changePassword\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport { API, BASE_URL, FILE_API, USER_ID } from \"../../Config\";\r\nimport { fetchPersonalDetails } from \"../../store/slices/ProfileSlice\";\r\nimport swal from \"sweetalert\";\r\nimport hidePwdImg from '../../assets/icons/Showpass-show.svg';\r\nimport showPwdImg from '../../assets/icons/Hide.svg';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LinearWithValueLabel from '../../components/linear-progress-bar/linear-progress-bar';\r\nimport { has_permission } from \"../../helper.js\";\r\n\r\nconst UserProfile = () => {\r\n    let history = useHistory();\r\n    const onButtonClick = () => {\r\n        // `current` points to the mounted file input element\r\n    };\r\n    const blood_groups = [\r\n        { value: 'A+', label: 'A+' },\r\n        { value: 'A-', label: 'A-' },\r\n        { value: 'B+', label: 'B+' },\r\n        { value: 'B-', label: 'B-' },\r\n        { value: 'AB+', label: 'AB+' },\r\n        { value: 'AB-', label: 'AB-' },\r\n        { value: 'O+', label: 'O+' },\r\n        { value: 'O-', label: 'O-' },\r\n    ]\r\n    const { id } = useParams()\r\n    const [revealOldPwd, setRevealOldPwd] = useState(false);\r\n    const [revealNewPwd, setRevealNewPwd] = useState(false);\r\n    const [revealConfPwd, setRevealConfPwd] = useState(false);\r\n    // const profile_details = useSelector(state => state.profile.data)\r\n    const [profile_details, setProfileDetails] = useState()\r\n\r\n    const [initialBloodGroup, setInitialBloodGroup] = useState(\"\")\r\n    const inputFile = useRef(null)\r\n    const [image, setImage] = useState()\r\n    const [avatar, setAvatar] = useState(profile_details ? (BASE_URL + profile_details.profile_pic) : \"avatars/user-avatar-default.png\")\r\n    const [visible, setVisible] = useState(false);\r\n    const dispatch = useDispatch()\r\n    const onImageChange = (image) => {\r\n        setImage(image)\r\n        setAvatar(URL.createObjectURL(image))\r\n        update_profile_image(image)\r\n    }\r\n    const changeImageClick = () => {\r\n        inputFile.current.click()\r\n    }\r\n    const profileEditForm = () => {\r\n        console.log(\"values\")\r\n        setVisible(!visible);\r\n        profile_update_form.setValues({\r\n            first_name: profile_details.first_name,\r\n            last_name: profile_details.last_name,\r\n            email: profile_details.email,\r\n            phone: profile_details.phone,\r\n            address: profile_details.address,\r\n            blood_group: profile_details.blood_group\r\n        })\r\n    }\r\n    const handleBloodGroupChange = (values) => {\r\n        console.log(values)\r\n        profile_update_form.setValues({\r\n            first_name: profile_update_form.values.first_name,\r\n            last_name: profile_update_form.values.last_name,\r\n            email: profile_update_form.values.email,\r\n            phone: profile_update_form.values.phone,\r\n            address: profile_update_form.values.address,\r\n            blood_group: values.value\r\n        })\r\n        setInitialBloodGroup({ value: values.value, label: values.label })\r\n    }\r\n    const validateChangePassForm = (values) => {\r\n        const errors = {}\r\n        if (!values.old_password) errors.old_password = \"Old Password Required\"\r\n        if (String(values.new_password).length < 8 || !values.new_password || values.new_password != values.new_password_confirm) errors.new_password = \"Invalid New Password\"\r\n        return errors\r\n    }\r\n    const change_password = (values) => {\r\n        let formData = new FormData()\r\n        console.log('values', values)\r\n        for (const [key, value] of Object.entries(change_pass_form.values)) {\r\n            if (key != 'new_password_confirm') {\r\n                formData.append(key, value)\r\n            }\r\n        }\r\n        API.put('auth/change/password/', formData).then((res) => {\r\n            console.log(res)\r\n            if (res.status == 200) {\r\n                change_pass_form.resetForm()\r\n                swal('Updated', 'Your Password has been changed', 'success')\r\n            }\r\n        }).catch(err => {\r\n            if (err.response.status == 400) {\r\n                swal('Incorrect', 'Bad Request', 'warning')\r\n            }\r\n        })\r\n    }\r\n    const change_pass_form = useFormik({\r\n        initialValues: {\r\n            old_password: \"\",\r\n            new_password: \"\",\r\n            new_password_confirm: ''\r\n        },\r\n        validateOnChange: true,\r\n        validateOnBlur: true,\r\n        validate: validateChangePassForm,\r\n        onSubmit: change_password\r\n    })\r\n    const validate_profile_update_form = (values) => {\r\n        const errors = {}\r\n        if (!values.first_name) errors.first_name = \"First Name is required\"\r\n        if (!values.last_name) errors.last_name = \"Last Name is required\"\r\n        if (!values.email) errors.email = \"Email is required\"\r\n        if (!values.address) errors.address = \"Address is required\"\r\n        if (!values.blood_group) errors.blood_group = \"Blood group is required\"\r\n        return errors\r\n    }\r\n    const update_profile = (values) => {\r\n        console.log(values)\r\n        API.post('auth/profile/update/' + sessionStorage.getItem(USER_ID) + '/', profile_update_form.values).then((res) => {\r\n            console.log(res)\r\n            if (res.status == 201 && res.data.success == 'True') {\r\n                dispatch(fetchPersonalDetails(sessionStorage.getItem(USER_ID)))\r\n                setVisible(false)\r\n                swal('Updated!', 'Your Profile has been updated', 'success')\r\n            }\r\n        })\r\n    }\r\n    const update_profile_image = (image) => {\r\n        let image_form_data = new FormData()\r\n        image_form_data.append('profile_pic', image)\r\n        console.log('image', image)\r\n        FILE_API.post('auth/change/profile/image/' + sessionStorage.getItem(USER_ID) + '/', image_form_data).then((res) => {\r\n            if (res.status == 201) {\r\n                swal('Updated!', 'Profile Picture Updated', 'success')\r\n            }\r\n        }).catch(err => {\r\n            if (err.status == 400) {\r\n                swal('Incorrect', 'Bad Request', 'warning')\r\n            }\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        // window.scrollTo(0, 0);\r\n        // setInitialBloodGroup({ value: profile_details.blood_group, label: profile_details.blood_group })\r\n        // setAvatar(profile_details.profile_pic ? (BASE_URL + profile_details.profile_pic) : \"avatars/user-avatar-default.png\")\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log('id from route', id)\r\n        if (id) {\r\n            API.get('auth/profile/details/' + id + '/').then(res => {\r\n                console.log('res', res.data)\r\n                // profile_details=res.data.data\r\n                setProfileDetails(res.data.data)\r\n                window.scrollTo(0, 0);\r\n                setInitialBloodGroup({ value: res.data.data.blood_group, label: res.data.data.blood_group })\r\n                setAvatar(res.data.data.profile_pic ? (BASE_URL + res.data.data.profile_pic) : \"avatars/user-avatar-default.png\")\r\n            }).catch(err => {\r\n\r\n            })\r\n        }\r\n    }, [id])\r\n    const profile_update_form = useFormik({\r\n        initialValues: {\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            phone: '',\r\n            address: '',\r\n            blood_group: ''\r\n        },\r\n        validateOnChange: true,\r\n        validateOnBlur: true,\r\n        validate: validate_profile_update_form,\r\n        onSubmit: update_profile\r\n    })\r\n    function capitalize(string) {\r\n        if (string != undefined) {\r\n            return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\r\n        }\r\n        return ''\r\n    }\r\n\r\n    // const projects = useSelector(state => {\r\n    //     let temp = []\r\n    //     let subtask =[] \r\n    //     state.projects.data.forEach((item, idx) => {\r\n    //         if (item.project.status == 0) {\r\n    //             temp.push(item)\r\n    //             console.log(\"subtask\", item.sub_task)\r\n    //             subtask.push(item.sub_task)\r\n    //         }\r\n    //     })\r\n    //      console.log(\"projects\", state) \r\n    //     console.log('temp', temp)\r\n    //     console.log(\"task\", subtask)\r\n\r\n    //     return temp;\r\n\r\n    // })\r\n\r\n\r\n    const projects = useSelector(state => state.projects.data);\r\n    useEffect(() => {\r\n        console.log(\"ProjectsList\", projects)\r\n    }, [projects])\r\n\r\n    const remaining_hours = (projects) => {\r\n        let remaining_hours = 0;\r\n        projects.forEach(item => {\r\n            console.log(item.remaining_hours)\r\n            remaining_hours += parseFloat(item.remaining_hours);\r\n        })\r\n        return remaining_hours;\r\n    }\r\n\r\n    function totalProjectHrs(projects) {\r\n        let total_hours = 0;\r\n        projects.forEach(item => {\r\n            console.log(item.planned_hours)\r\n            total_hours += parseFloat(item.planned_hours);\r\n        })\r\n        return total_hours;\r\n    }\r\n\r\n    function calculate_progress_in_percentage(total_hours, remaining_hours) {\r\n        let worked_hours = parseFloat(total_hours) - parseFloat(remaining_hours)\r\n        return (100 * worked_hours) / parseFloat(total_hours)\r\n    }\r\n\r\n    const pmprojects = useSelector(state => {\r\n\r\n        let temp = []\r\n        if (has_permission(\"projects.add_projects\")) {\r\n            state.projects.pm_projects.forEach((item, idx) => {\r\n                if (item.project.status == 0) {\r\n                    temp.push(item)\r\n                    // temp_statues.push(false)\r\n                }\r\n            })\r\n        }\r\n        // setStatuses(temp_statues)\r\n        console.log('pmtemp', temp)\r\n        return temp\r\n    })\r\n    const [activeKey, setActiveKey] = useState(1)\r\n\r\n    return (\r\n        <>\r\n            <CContainer>\r\n                <CModal closeOnBackdrop={false} alignment=\"center\" show={visible} onClose={profileEditForm}>\r\n                    <CModalHeader closeButton>\r\n                        <CModalTitle className=\"modal-title-profile\">\r\n                            <span className=\"edit-profile-form-header\">\r\n                                Edit Profile Info\r\n                            </span>\r\n                        </CModalTitle>\r\n                    </CModalHeader>\r\n\r\n                    <CModalBody>\r\n                        <CContainer>\r\n                            <CForm>\r\n                                <CRow>\r\n                                    {/**First Name */}\r\n                                    <div className=\"col-md-6 mb-3\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"userFName\">\r\n                                            First Name *\r\n                                        </CLabel>\r\n                                        <CInput\r\n                                            type=\"text\"\r\n                                            name=\"first_name\"\r\n                                            id=\"first_name\"\r\n                                            className=\"custom-forminput-6\"\r\n                                            value={profile_update_form.values.first_name}\r\n                                            onChange={profile_update_form.handleChange}\r\n                                        />\r\n                                    </div>\r\n                                    {/**Last Name */}\r\n                                    <div className=\"col-md-6 mb-3\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"userLName\">\r\n                                            Last Name *\r\n                                        </CLabel>\r\n                                        <CInput\r\n                                            type=\"text\"\r\n                                            name=\"last_name\"\r\n                                            id=\"last_name\"\r\n                                            className=\"custom-forminput-6\"\r\n                                            value={profile_update_form.values.last_name}\r\n                                            onChange={profile_update_form.handleChange}\r\n                                        />\r\n                                    </div>\r\n                                    {/**Job title */}\r\n                                    <div className=\"col-md-12 mb-3\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"uEmail\">\r\n                                            Email *\r\n                                        </CLabel>\r\n                                        <CInput\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            id=\"email\"\r\n                                            className=\"custom-forminput-6\"\r\n                                            value={profile_update_form.values.email}\r\n                                            onChange={profile_update_form.handleChange}\r\n                                            readOnly\r\n                                        ></CInput>\r\n                                    </div>\r\n                                    {/**Phone */}\r\n                                    <div className=\"col-md-12 mb-3\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"uPhoneNo\">\r\n                                            Phone *\r\n                                        </CLabel>\r\n                                        <CInput\r\n                                            type=\"tel\"\r\n                                            name=\"phone\"\r\n                                            id=\"phone\"\r\n                                            value={profile_update_form.values.phone}\r\n                                            onChange={profile_update_form.handleChange}\r\n                                            className=\"custom-forminput-6\"\r\n                                        ></CInput>\r\n                                    </div>\r\n                                    {/**address */}\r\n                                    <div className=\"col-md-12 mb-3\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"Address\">\r\n                                            Address *\r\n                                        </CLabel>\r\n                                        <CInput\r\n                                            type=\"text\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            value={profile_update_form.values.address}\r\n                                            onChange={profile_update_form.handleChange}\r\n                                            className=\"custom-forminput-6\"\r\n                                        ></CInput>\r\n                                        {profile_update_form.touched.address && profile_update_form.errors.address && <small style={{ color: 'red' }}>{profile_update_form.errors.address}</small>}\r\n                                    </div>\r\n                                    {/**blood_group */}\r\n                                    <div className=\"col-md-12 mb-3\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"blood_group\">\r\n                                            Blood Group *\r\n                                        </CLabel>\r\n                                        <Select\r\n                                            id=\"blood_group\"\r\n                                            value={initialBloodGroup}\r\n                                            onChange={handleBloodGroupChange}\r\n                                            className=\"custom-forminput-6\"\r\n                                            options={blood_groups}\r\n                                        ></Select>\r\n                                    </div>\r\n\r\n                                    {/**Button groups */}\r\n                                    <div className=\"col-md-12 \">\r\n                                        <div className=\"project-form-button-holders mt-3\">\r\n                                            <CButton className=\"profile-form-btn update-profile\" onClick={profile_update_form.handleSubmit} type=\"button\" disabled={!profile_update_form.isValid}>\r\n                                                Update Info\r\n                                            </CButton>\r\n                                            <CButton className=\"profile-form-btn cancel-update\" type=\"reset\" onClick={() => setVisible(!visible)}>\r\n                                                Cancel\r\n                                            </CButton>\r\n                                        </div>\r\n                                    </div>\r\n                                </CRow>\r\n                            </CForm>\r\n                        </CContainer>\r\n                    </CModalBody>\r\n                </CModal>\r\n\r\n                {/**Main Content */}\r\n\r\n                <CTabs activeTab=\"viewProfile\">\r\n                    <CNav variant=\"tabs\" className=\"tab-style\">\r\n                        {/**View Profile */}\r\n                        <CNavItem>\r\n                            <CNavLink data-tab=\"viewProfile\" className=\"special\">\r\n                                <CIcon name=\"cil-user\" /> View Profile\r\n                            </CNavLink>\r\n                        </CNavItem>\r\n                        {/**change password */}\r\n                        <CNavItem>\r\n                            <CNavLink disabled={profile_details?.id != sessionStorage.getItem(USER_ID) ? true : false} data-tab=\"changePassword\" className=\"special\">\r\n                                <CIcon name=\"cil-pen-alt\" className=\"mr-1\" />\r\n                                Change Password\r\n                            </CNavLink>\r\n                        </CNavItem>\r\n                    </CNav>\r\n                    {/**___________nav tab details______ */}\r\n                    <CTabContent>\r\n                        {/**_____VIEW PROFILE____ */}\r\n                        <CTabPane data-tab=\"viewProfile\">\r\n                            {profile_details != undefined && <CContainer>\r\n                                <h3 className=\"profile-page-header\">Profile Details</h3>\r\n                                <CRow>\r\n                                    <div className=\"col-lg-8 offset-lg-2\">\r\n                                        <CCard className=\"card-view-profile mt-3\">\r\n                                            <div className=\"user-profile-pic-div text-center\">\r\n                                                <CImg\r\n                                                    alt=\"click to upload image\"\r\n                                                    className=\"mx-auto rounded-circle update-img\"\r\n                                                    src={avatar}\r\n                                                />\r\n\r\n                                                {/**__PRO PIC UP BUTTON__ */}\r\n                                                <input style={{ display: 'none' }} ref={inputFile} type=\"file\" onChange={(event) => { onImageChange(event.target.files[0]) }} />\r\n                                                {profile_details.id == sessionStorage.getItem(USER_ID) && <CButton\r\n                                                    onClick={changeImageClick}\r\n                                                    type=\"button\"\r\n                                                    className=\"d-block mx-auto change-img-btn mt-1\"\r\n                                                >\r\n                                                    {\" \"}\r\n                                                    <CIcon name=\"cil-camera\"></CIcon> Change Picture\r\n                                                </CButton>}\r\n                                            </div>\r\n                                            <CCardBody>\r\n                                                <hr />\r\n                                                {profile_details.id == sessionStorage.getItem(USER_ID) && <CButton\r\n                                                    className=\"edit-profile mb-3\"\r\n                                                    onClick={() => profileEditForm()}\r\n                                                >\r\n                                                    <CIcon name=\"cil-pen\" className=\"mr-1\" />\r\n                                                    Edit Info\r\n                                                </CButton>}\r\n\r\n                                                {/**info show */}\r\n                                                <div className=\"row justify-content-center\">\r\n                                                    <div className=\"col-md-6 col-lg-4\">\r\n                                                        <h5 className=\"info-header-1\">Full Name</h5>\r\n                                                        <h5 className=\"profile-details-points child\">\r\n                                                            {capitalize(profile_details.first_name) + ' ' + capitalize(profile_details.last_name)}{\" \"}\r\n                                                        </h5>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6 col-lg-4\">\r\n                                                        <h5 className=\"info-header-1\"> Email</h5>\r\n                                                        <h5 className=\"profile-details-points-email\">\r\n                                                            {profile_details.email}\r\n                                                        </h5>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6 col-lg-4\">\r\n                                                        <h5 className=\"info-header-1\">Job title</h5>\r\n                                                        <h5 className=\"profile-details-points-email\">{profile_details?.slc_details?.slc?.name}</h5>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6 col-lg-4\">\r\n                                                        <h5 className=\"info-header-1\"> Phone</h5>\r\n                                                        <h5 className=\"profile-details-points child\">\r\n                                                            +{profile_details.phone}\r\n                                                        </h5>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6 col-lg-4\">\r\n                                                        <h5 className=\"info-header-1\"> Address</h5>\r\n                                                        <h5 className=\"profile-details-points child\">\r\n                                                            {profile_details.address}\r\n                                                        </h5>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6 col-lg-4\">\r\n                                                        <h5 className=\"info-header-1\"> Blood Group</h5>\r\n                                                        <h5 className=\"profile-details-points child\">\r\n                                                            {profile_details.blood_group}\r\n                                                        </h5>\r\n                                                    </div>\r\n\r\n                                                    <CRow className=\"mt-5\">\r\n                                                    <CTabs activeTab=\"workingon\">\r\n                                                        <CNav variant=\"tabs\"  >\r\n                                                            {/**View Profile */}\r\n                                                            <CNavItem>\r\n                                                                <CNavLink data-tab=\"workingon\"  >\r\n                                                                \r\n                                                                     Working On\r\n                                                                </CNavLink>\r\n                                                            </CNavItem>\r\n                                                            {/* working on */}\r\n                                                            {has_permission(\"projects.add_projects\") && \r\n                                                            <CNavItem>\r\n                                                                <CNavLink  data-tab=\"managing\"  >\r\n                                                                    \r\n                                                                    Managing\r\n                                                                </CNavLink>\r\n                                                            </CNavItem>}\r\n                                                        </CNav>\r\n                                                        {/**___________working on tab details______ */}\r\n                                                <CTabContent>\r\n                                                   {/**_____WORKING ON____ */}\r\n                                                    <CTabPane data-tab=\"workingon\" >\r\n                                                        \r\n                                                        <div className=\"mt-4\" >\r\n                                                            {/* <h3 className=\"projectsHeader\">\r\n                                                                Working On\r\n                                                            </h3> */}\r\n                                                            \r\n                                                            <div className=\"card-holder1\">\r\n                                                                {projects != undefined && Array.from(projects).slice(0, 3).map((item, idx) => (\r\n\r\n                                                                    <CCard className=\"project-card1\" key={idx} onClick={() => history.push({ pathname: '/dashboard/Projects/assigned-projects/details/' + item.project.work_package_number + '/' })}>\r\n                                                                        <CCardBody>\r\n                                                                            {/* <h6 className=\"id-no1\">Work Package Number: # {item.project.work_package_number}</h6> */}\r\n                                                                            <h5 className=\"card-details1\"><span className=\"p-header-3\">Project Name: </span> {item.project.sub_task}</h5>\r\n\r\n                                                                            <h5 className=\"card-details1\"><span className=\"p-header-3\">Planned Delivery Date : </span>{item.project.planned_delivery_date}</h5>\r\n                                                                            <div>\r\n                                                                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Progress :\r\n                                                                                    <LinearWithValueLabel progress={() => calculate_progress_in_percentage(totalProjectHrs(item.subtasks), remaining_hours(item.subtasks))} />\r\n                                                                                </span></h5>\r\n                                                                            </div>\r\n                                                                        </CCardBody>\r\n                                                                    </CCard>\r\n                                                                ))}\r\n                                                                { /**If no projects */}\r\n                                                                {projects == '' || projects == undefined ? (\r\n                                                                    <CAlert className=\"no-value-show-alert\" color=\"primary\">Currently there are no projects assigned to you</CAlert>\r\n                                                                ) : null\r\n                                                                }\r\n                                                            </div>\r\n                                                            {projects != undefined && <div className=\"button-holder3\"><CButton className=\"tiny-buttons1\" onClick={() => history.push({ pathname: '/dashboard/Projects/assigned-projects' })}>View all</CButton></div>}\r\n\r\n\r\n                                                          </div>\r\n                                                        </CTabPane>\r\n\r\n                                                        \r\n                                                        {has_permission(\"projects.add_projects\") && \r\n\r\n                                                        <CTabPane data-tab=\"managing\" >\r\n                                                        <div className=\"mt-4\">\r\n                                                            {/* <h3 className=\"projectsHeader\">\r\n                                                                Managing\r\n                                                            </h3> */}\r\n\r\n                                                            <div className=\"card-holder1\">\r\n                                                                {pmprojects != undefined && Array.from(pmprojects).slice(0, 3).map((item, idx) => (\r\n\r\n                                                                    <CCard className=\"project-card1\" key={idx} onClick={() => history.push({ pathname: '/dashboard/Projects/my-projects/details/' + item.project.work_package_number + '/' })}>\r\n                                                                        <CCardBody>\r\n                                                                           \r\n                                                                            <h5 className=\"card-details1\"><span className=\"p-header-3\">Project Name: </span> {item.project.sub_task}</h5>\r\n\r\n                                                                            <h5 className=\"card-details1\"><span className=\"p-header-3\">Planned Delivery Date : </span>{item.project.planned_delivery_date}</h5>\r\n                                                                            <div>\r\n                                                                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Progress :\r\n                                                                                    <LinearWithValueLabel progress={() => calculate_progress_in_percentage(totalProjectHrs(item.subtasks), remaining_hours(item.subtasks))} />\r\n                                                                                </span></h5>\r\n                                                                            </div>\r\n                                                                        </CCardBody>\r\n                                                                    </CCard>\r\n                                                                ))}\r\n                                                                { /**If no projects */}\r\n                                                                {pmprojects == '' || pmprojects == undefined ? (\r\n                                                                    <CAlert className=\"no-value-show-alert\" color=\"primary\">Currently there are no projects you are managing</CAlert>\r\n                                                                ) : null\r\n                                                                }\r\n                                                            </div>\r\n                                                            {pmprojects != undefined && <div className=\"button-holder3\"><CButton className=\"tiny-buttons1\" onClick={() => history.push({ pathname: '/dashboard/Projects/my-projects' })}>View all</CButton></div>}\r\n\r\n\r\n                                                        </div>\r\n                                                        </CTabPane>}\r\n                                                    </CTabContent>\r\n                                                   </CTabs>\r\n                                                   </CRow>\r\n\r\n                                                </div>\r\n\r\n\r\n                                                {/* <div className=\"all-da-buttons-1\">\r\n                                                <CLabel>Assigned Projects</CLabel>\r\n                                                    {Array.from([{title:'ABC',work_package_index:'1001'}]).length > 0 && Array.from([{title:'ABC',work_package_index:'1001'}]).map((task, idx) => (\r\n                                                        <CButton key={idx} type=\"button\" className=\"package-button rounded-pill\" onClick={() => {  }}>\r\n                                                            {task.task_title}\r\n                                                            <span className=\"tooltiptext\">{task.work_package_index}</span>\r\n                                                        </CButton>\r\n                                                    ))}\r\n                                                </div> */}\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </div>\r\n                                </CRow>\r\n                            </CContainer>}\r\n\r\n                        </CTabPane>\r\n                        {/**_____Change Password___ */}\r\n                        <CTabPane data-tab=\"changePassword\">\r\n                            <CContainer>\r\n                                <h3 className=\"profile-page-header\">Change Password</h3>\r\n                                <CRow>\r\n                                    <div className=\"col-lg-8 offset-lg-2 col-md-12\">\r\n                                        <CCard className=\"mt-4 card-change-password\">\r\n                                            <CCardBody>\r\n                                                <CForm>\r\n                                                    <div className=\"mb-2\">\r\n                                                        <CLabel className=\"custom-label-5\" htmlFor=\"userOldPass\">\r\n                                                            Old Password\r\n                                                        </CLabel>\r\n                                                        <div className=\"password-container\">\r\n                                                            <CInput type={revealOldPwd ? \"text\" : \"password\"} name=\"old_password\" id=\"old_password\" className=\"custom-forminput-6\" value={change_pass_form.values.old_password} onChange={change_pass_form.handleChange} />\r\n                                                            <img className=\"pwd-container-img\"\r\n                                                                title={revealOldPwd ? \"Hide Old password\" : \"Show Old password\"}\r\n                                                                src={revealOldPwd ? hidePwdImg : showPwdImg}\r\n                                                                onClick={() => setRevealOldPwd(prevState => !prevState)}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {/**New Password */}\r\n                                                    <div className=\"mb-2\">\r\n                                                        <CLabel className=\"custom-label-5\" htmlFor=\"userNewPass\">\r\n                                                            New Password\r\n                                                        </CLabel>\r\n                                                        <div className=\"password-container\">\r\n                                                            <CInput type={revealNewPwd ? \"text\" : \"password\"} name=\"new_password\" id=\"new_password\" className=\"custom-forminput-6\" value={change_pass_form.values.new_password} onChange={change_pass_form.handleChange} />\r\n                                                            <img className=\"pwd-container-img\"\r\n                                                                title={revealNewPwd ? \"Hide New password\" : \"Show New password\"}\r\n                                                                src={revealNewPwd ? hidePwdImg : showPwdImg}\r\n                                                                onClick={() => setRevealNewPwd(prevState => !prevState)}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {/**Confirm new password */}\r\n                                                    <div className=\"mb-2\">\r\n                                                        <CLabel className=\"custom-label-5\" htmlFor=\"userConfPass\">\r\n                                                            Confirm Password\r\n                                                        </CLabel>\r\n                                                        <div className=\"password-container\">\r\n                                                            <CInput type={revealConfPwd ? \"text\" : \"password\"} name=\"new_password_confirm\" id=\"new_password_confirm\" className=\"custom-forminput-6\" value={change_pass_form.values.new_password_confirm} onChange={change_pass_form.handleChange} />\r\n                                                            <img className=\"pwd-container-img\"\r\n                                                                title={revealConfPwd ? \"Hide Confirm password\" : \"Show Confirm password\"}\r\n                                                                src={revealConfPwd ? hidePwdImg : showPwdImg}\r\n                                                                onClick={() => setRevealConfPwd(prevState => !prevState)} />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {/**BUtton groups */}\r\n                                                    <div className=\"project-form-button-holders mt-3\">\r\n                                                        <CButton className=\"profile-form-btn update-profile\" disabled={!change_pass_form.isValid} type=\"button\" onClick={change_pass_form.handleSubmit}>Update Password</CButton>\r\n                                                        <CButton className=\"profile-form-btn cancel-update\" type=\"button\" onClick={change_pass_form.resetForm}>Cancel</CButton>\r\n                                                    </div>\r\n                                                </CForm>\r\n                                            </CCardBody>\r\n\r\n                                        </CCard>\r\n                                    </div>\r\n                                </CRow>\r\n                            </CContainer>\r\n                        </CTabPane>\r\n                    </CTabContent>\r\n                </CTabs>\r\n            </CContainer>\r\n        </>\r\n    );\r\n};\r\nexport default UserProfile;\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n      <Box sx={{ width: '100%', mr: 1 }}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box sx={{ minWidth: 35 }}>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function LinearWithValueLabel(props) {\r\n  const [progress, setProgress] = React.useState(props.progress);\r\n  \r\n  React.useEffect(() => {\r\n    // const timer = setInterval(() => {\r\n    //   setProgress((prevProgress) => (prevProgress >= 100 ? 10 : prevProgress + 10));\r\n    // }, 800);\r\n    // return () => {\r\n    //   clearInterval(timer);\r\n    // };\r\n  }, []);\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <LinearProgressWithLabel value={progress} />\r\n    </Box>\r\n  );\r\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLinearProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiLinearProgress', slot);\n}\nconst linearProgressClasses = generateUtilityClasses('MuiLinearProgress', ['root', 'colorPrimary', 'colorSecondary', 'determinate', 'indeterminate', 'buffer', 'query', 'dashed', 'dashedColorPrimary', 'dashedColorSecondary', 'bar', 'barColorPrimary', 'barColorSecondary', 'bar1Indeterminate', 'bar1Determinate', 'bar1Buffer', 'bar2Indeterminate', 'bar2Buffer']);\nexport default linearProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4,\n    _t5,\n    _t6;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useTheme from '../styles/useTheme';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getLinearProgressUtilityClass } from './linearProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TRANSITION_DURATION = 4; // seconds\n\nconst indeterminate1Keyframe = keyframes(_t || (_t = _`\n  0% {\n    left: -35%;\n    right: 100%;\n  }\n\n  60% {\n    left: 100%;\n    right: -90%;\n  }\n\n  100% {\n    left: 100%;\n    right: -90%;\n  }\n`));\nconst indeterminate2Keyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    left: -200%;\n    right: 100%;\n  }\n\n  60% {\n    left: 107%;\n    right: -8%;\n  }\n\n  100% {\n    left: 107%;\n    right: -8%;\n  }\n`));\nconst bufferKeyframe = keyframes(_t3 || (_t3 = _`\n  0% {\n    opacity: 1;\n    background-position: 0 -23px;\n  }\n\n  60% {\n    opacity: 0;\n    background-position: 0 -23px;\n  }\n\n  100% {\n    opacity: 1;\n    background-position: -200px -23px;\n  }\n`));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, variant],\n    dashed: ['dashed', `dashedColor${capitalize(color)}`],\n    bar1: ['bar', `barColor${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar1Indeterminate', variant === 'determinate' && 'bar1Determinate', variant === 'buffer' && 'bar1Buffer'],\n    bar2: ['bar', variant !== 'buffer' && `barColor${capitalize(color)}`, variant === 'buffer' && `color${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar2Indeterminate', variant === 'buffer' && 'bar2Buffer']\n  };\n  return composeClasses(slots, getLinearProgressUtilityClass, classes);\n};\n\nconst getColorShade = (theme, color) => {\n  if (color === 'inherit') {\n    return 'currentColor';\n  }\n\n  return theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.5);\n};\n\nconst LinearProgressRoot = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`], styles[ownerState.variant]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'block',\n  height: 4,\n  zIndex: 0,\n  // Fix Safari's bug during composition of different paint.\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  backgroundColor: getColorShade(theme, ownerState.color)\n}, ownerState.color === 'inherit' && ownerState.variant !== 'buffer' && {\n  backgroundColor: 'none',\n  '&::before': {\n    content: '\"\"',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'currentColor',\n    opacity: 0.3\n  }\n}, ownerState.variant === 'buffer' && {\n  backgroundColor: 'transparent'\n}, ownerState.variant === 'query' && {\n  transform: 'rotate(180deg)'\n}));\nconst LinearProgressDashed = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Dashed',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.dashed, styles[`dashedColor${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => {\n  const backgroundColor = getColorShade(theme, ownerState.color);\n  return _extends({\n    position: 'absolute',\n    marginTop: 0,\n    height: '100%',\n    width: '100%'\n  }, ownerState.color === 'inherit' && {\n    opacity: 0.3\n  }, {\n    backgroundImage: `radial-gradient(${backgroundColor} 0%, ${backgroundColor} 16%, transparent 42%)`,\n    backgroundSize: '10px 10px',\n    backgroundPosition: '0 -23px'\n  });\n}, css(_t4 || (_t4 = _`\n    animation: ${0} 3s infinite linear;\n  `), bufferKeyframe));\nconst LinearProgressBar1 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar1',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar1Indeterminate, ownerState.variant === 'determinate' && styles.bar1Determinate, ownerState.variant === 'buffer' && styles.bar1Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : theme.palette[ownerState.color].main\n}, ownerState.variant === 'determinate' && {\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}, ownerState.variant === 'buffer' && {\n  zIndex: 1,\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t5 || (_t5 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n    `), indeterminate1Keyframe));\nconst LinearProgressBar2 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar2',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar2Indeterminate, ownerState.variant === 'buffer' && styles.bar2Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left'\n}, ownerState.variant !== 'buffer' && {\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : theme.palette[ownerState.color].main\n}, ownerState.color === 'inherit' && {\n  opacity: 0.3\n}, ownerState.variant === 'buffer' && {\n  backgroundColor: getColorShade(theme, ownerState.color),\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t6 || (_t6 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;\n    `), indeterminate2Keyframe));\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLinearProgress'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    value,\n    valueBuffer,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const theme = useTheme();\n  const rootProps = {};\n  const inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      let transform = value - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar1.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      let transform = (valueBuffer || 0) - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar2.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(LinearProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other, {\n    children: [variant === 'buffer' ? /*#__PURE__*/_jsx(LinearProgressDashed, {\n      className: classes.dashed,\n      ownerState: ownerState\n    }) : null, /*#__PURE__*/_jsx(LinearProgressBar1, {\n      className: classes.bar1,\n      ownerState: ownerState,\n      style: inlineStyles.bar1\n    }), variant === 'determinate' ? null : /*#__PURE__*/_jsx(LinearProgressBar2, {\n      className: classes.bar2,\n      ownerState: ownerState,\n      style: inlineStyles.bar2\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default LinearProgress;","export default __webpack_public_path__ + \"static/media/Showpass-show.ab5421f5.svg\";","export default __webpack_public_path__ + \"static/media/Hide.31c620fc.svg\";"],"sourceRoot":""}