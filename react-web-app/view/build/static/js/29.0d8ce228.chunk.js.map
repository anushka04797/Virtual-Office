{"version":3,"sources":["pages/not-started/notStarted.js","../node_modules/lodash/_baseUniq.js","../node_modules/lodash/_arrayIncludes.js","../node_modules/lodash/_baseIndexOf.js","../node_modules/lodash/_baseFindIndex.js","../node_modules/lodash/_baseIsNaN.js","../node_modules/lodash/_strictIndexOf.js","../node_modules/lodash/_arrayIncludesWith.js","../node_modules/lodash/_createSet.js","../node_modules/lodash/noop.js","../node_modules/lodash/uniqBy.js"],"names":["NoWbs","useState","setNotStartedWBS","tdooptions","settdooptions","notstaredDetails","setnotstaredDetails","setinitialwbs","wbsinfo","setwbsinfo","history","useHistory","selectedProject","setSelectedProject","fetchproject","setfetchproject","setTdos","projects","useSelector","state","e","Array","from","pm_projects","forEach","item","idx","push","console","log","setnoWbsforProject","setAllAssignee","setallWbs","projectDetails","setProjectDetails","setfilteredProjects","setNoWBS","assigneeNoWbs","setAssigneeNoWbs","myProjectDetails","setmyProjectDetails","noWbs","allassignee","wbslist","details","allAssigneeswithNoWbs","nonewbs","i","length","temp2","temp1","temp3","sortBy","uniqBy","assignedIds","Map","set","assignee_id","assigneesWithNoWbs","undefined","get","id","filter_notStarted_by_projects","options","temp","find","value","index","index1","project","task_delivery_order","filteredProjects","filteredDetails","data","name","sub_task","tdo","title","startDate","date_created","endDate","planned_delivery_date","plannedHours","planned_hours","remainingHrs","remaining_hours","assignees","totalAssignee","totalWBS","wbs_list","noWbsPeople","totalNoWbsPeople","wbsInfo","date_updated","description","estimated_person","planned_value","pm","start_date","status","task_title","work_package_index","work_package_number","assignee","populate_data","React","useEffect","API","then","res","a","list","label","unshift","info","allassignees","initialWBSInfo","populateOption","optionarray","wbsinfo1","optionlist","lg","className","placeholder","searchable","isMulti","onChange","actionMeta","action","filter","map","onClick","pathname","substring","indexOf","first_name","last_name","j","type","size","task","SetCache","require","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","module","exports","array","iteratee","comparator","includes","isCommon","result","seen","outer","computed","seenIndex","baseIndexOf","baseFindIndex","baseIsNaN","strictIndexOf","fromIndex","predicate","fromRight","Set","noop","values","baseIteratee","baseUniq"],"mappings":"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","file":"static/js/29.0d8ce228.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./notStarted.css\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CContainer,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport uniqBy from \"lodash/uniqBy\";\r\nimport sortBy from \"lodash/sortBy\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { API } from \"../../Config\";\r\n\r\nconst NoWbs = () => {\r\n\r\n  const [notStartedWBS, setNotStartedWBS]=useState([])\r\n  const [tdooptions, settdooptions]= useState([])\r\n  const [notstaredDetails, setnotstaredDetails]= useState([])\r\n  const[initialwbs, setinitialwbs]= useState([])\r\n  const[everyproject, seteveryproject]= useState([])\r\n\r\n\r\n  const [wbsinfo, setwbsinfo] = useState([])\r\n  let history = useHistory();\r\n  const [selectedProject, setSelectedProject] = useState([]);\r\n  const [options, setoptions] = useState();\r\n  const [fetchproject, setfetchproject] = useState([]);\r\n  const [tdos, setTdos] = useState([]);\r\n  \r\n  const populateOption=(a)=>{\r\n    let list =[]\r\n    for(let i=0;i<a.length;i++)\r\n    {  console.log(\"aaaaaaaaaaaaaa\",a[i])\r\n    list.push({\r\n        data: a[i],\r\n        label: a[i].project.task_delivery_order.title,\r\n        value: a[i].project.task_delivery_order.id,})\r\n    }\r\n    list.unshift({\r\n      label: \"Select All\",\r\n      value: \"all\",\r\n      data: {},\r\n    })\r\n    console.log(\"tdo list\", list)\r\n    settdooptions(list)\r\n    // for(let i=0;i<a.length;i++)\r\n    // {}\r\n    let info=[]\r\n    for (let i = 0; i < a.length; i++) {\r\n      \r\n      //setwbsinfo(a[i].project)\r\n      info.push({\r\n        data: a[i],\r\n        name: a[i].project.sub_task,\r\n        tdo : a[i].project.task_delivery_order.title,\r\n        id: a[i].project.task_delivery_order.id,\r\n        startDate: a[i].project.date_created,\r\n        endDate: a[i].project.planned_delivery_date,\r\n        allassignees: a[i].allassignees,\r\n        totalAssignee: a[i].assignees.length,\r\n        noWbsPeople: a[i].assignees,\r\n        \r\n      });\r\n    }\r\n\r\n    setnotstaredDetails(info)\r\n   \r\n    let initialWBSInfo=[]\r\n    for (let i = 0; i < a.length; i++) {\r\n      let assignees= a[i].allassignees\r\n      console.log(\"ssssssssss\", assignees)\r\n      initialWBSInfo.push({\r\n        assignees:  a[i].allassignees,\r\n        date_created: a[i].project.date_created,\r\n        date_updated: a[i].project.date_updated,\r\n        description : a[i].project.description,\r\n        estimated_person : a[i].project.estimated_person,\r\n        id : a[i].project.id,\r\n        planned_delivery_date : a[i].project.planned_delivery_date,\r\n        planned_hours : a[i].project.planned_hours,\r\n        planned_value : a[i].project.planned_value,\r\n        pm : a[i].project.pm,\r\n        remaining_hours : a[i].project.remaining_hours,\r\n        start_date : a[i].project.start_date,\r\n        status: a[i].project.status,\r\n        sub_task : a[i].project.sub_task,\r\n        task_delivery_order: a[i].project.task_delivery_order,\r\n        task_title : a[i].project.task_title,\r\n        work_package_index : a[i].project.work_package_index,\r\n        work_package_number : a[i].project.work_package_number\r\n      })\r\n       //for(let i=0; i<assignees.length;i++){\r\n       //  let assignee = {assignee:assignees[i]}\r\n      //   //console.log(typeof assignee)\r\n      //   initialWBSInfo.assignees.push(assignee)\r\n      // }\r\n      //wbsinfo1.push(temp1)\r\n    }\r\n    setinitialwbs(initialWBSInfo)\r\n    console.log(\"wbsinfoarray\", initialWBSInfo)\r\n  \r\n  }\r\n\r\n  const data_population=(filtered)=>{\r\n\r\n  }\r\n\r\n\r\n  const projects = useSelector((state) => {\r\n    let e = [];\r\n    Array.from(state.projects.pm_projects).forEach((item, idx) => {\r\n      e.push(item);\r\n    });\r\n    console.log(\"all Projects\", e);\r\n    return e;\r\n  });\r\n\r\n  const [nowbsforProject, setnoWbsforProject] = useState([]);\r\n  const [allAssignee, setAllAssignee] = useState();\r\n  const [allwbs, setallWbs] = useState();\r\n  const [projectDetails, setProjectDetails] = useState([]);\r\n  const [filteredProjects, setfilteredProjects] = useState(projects);\r\n  const [noWBS, setNoWBS] = useState([]);\r\n  const [assigneeNoWbs, setAssigneeNoWbs] = useState([]);\r\n  let [myProjectDetails, setmyProjectDetails] = useState([]);\r\n\r\n  let noWbs = [];\r\n  let allassignee = [];\r\n  let wbslist = [];\r\n  let details = [];\r\n  const optionlist = (projects) => {\r\n    \r\n    let optionarray = [];\r\n    for (let i = 0; i < projects.length; i++) {\r\n      allassignee[i] = projects[i].assignees;\r\n      wbslist[i] = projects[i].project.wbs_list;\r\n      optionarray.push({\r\n        data: projects[i],\r\n        label: projects[i].project.task_delivery_order.title,\r\n        value: projects[i].project.task_delivery_order.id,\r\n      });\r\n    }\r\n    optionarray.unshift({\r\n      label: \"Select All\",\r\n      value: \"all\",\r\n      data: {},\r\n    });\r\n\r\n    console.log(\"options\", optionarray[0].data);\r\n    console.log(\"allAssignee array\", allassignee);\r\n    console.log(\"wbslist\", wbslist);\r\n    console.log(\"details array \", details);\r\n    setAllAssignee(allassignee);\r\n    setallWbs(wbslist);\r\n\r\n    setTdos(optionarray);\r\n    nonewbs();\r\n\r\n    console.log(\"optionprojects\", projects)\r\n    setmyProjectDetails(projects)\r\n    for (let i = 0; i < projects.length; i++) {\r\n      \r\n      //setwbsinfo(projects[i].project)\r\n      details.push({\r\n        data: projects[i],\r\n        name: projects[i].project.sub_task,\r\n        tdo : projects[i].project.task_delivery_order.title,\r\n        id: projects[i].project.task_delivery_order.id,\r\n        startDate: projects[i].project.date_created,\r\n        endDate: projects[i].project.planned_delivery_date,\r\n        plannedHours: projects[i].project.planned_hours,\r\n        remainingHrs: projects[i].project.remaining_hours,\r\n        assignees: projects[i].assignees,\r\n        totalAssignee: projects[i].assignees.length,\r\n        totalWBS: projects[i].project.wbs_list.length,\r\n        noWbsPeople: allAssigneeswithNoWbs[i],\r\n        totalNoWbsPeople: allAssigneeswithNoWbs[i].length,\r\n      });\r\n    }\r\n\r\n    let wbsinfo1 = []\r\n    for (let i = 0; i < projects.length; i++) {\r\n      \r\n      let assignees= projects[i].assignees\r\n\r\n      let temp1 = {\r\n        assignees: [],\r\n        date_created: projects[i].project.date_created,\r\n        date_updated: projects[i].project.date_updated,\r\n        description : projects[i].project.description,\r\n        estimated_person : projects[i].project.estimated_person,\r\n        id : projects[i].project.id,\r\n        planned_delivery_date : projects[i].project.planned_delivery_date,\r\n        planned_hours : projects[i].project.planned_hours,\r\n        planned_value : projects[i].project.planned_value,\r\n        pm : projects[i].project.pm,\r\n        remaining_hours : projects[i].project.remaining_hours,\r\n        start_date : projects[i].project.start_date,\r\n        status: projects[i].project.status,\r\n        sub_task : projects[i].project.sub_task,\r\n        task_delivery_order: projects[i].project.task_delivery_order,\r\n        task_title : projects[i].project.task_title,\r\n        work_package_index : projects[i].project.work_package_index,\r\n        work_package_number : projects[i].project.work_package_number\r\n      }\r\n      for(let i=0; i<assignees.length;i++){\r\n        let assignee = {assignee:assignees[i]}\r\n        //console.log(typeof assignee)\r\n        temp1.assignees.push(assignee)\r\n      }\r\n      wbsinfo1.push(temp1)\r\n      console.log(\"wbs1\", wbsinfo1)\r\n    }\r\n    setwbsinfo(wbsinfo1)\r\n    console.log(\"details array\", details);\r\n    setProjectDetails(details);\r\n  };\r\n  const populate_data = (filteredProjects) => {\r\n    setmyProjectDetails(filteredProjects)\r\n    console.log(\"filtered projects\", filteredProjects);\r\n    //setwbsinfo(filteredProjects.project)\r\n    nonewbs();\r\n    let filteredDetails = [];\r\n    for (let i = 0; i < filteredProjects.length; i++) {\r\n      filteredDetails.push({\r\n        data: filteredProjects[i],\r\n        name: filteredProjects[i].project.sub_task,\r\n        tdo : filteredProjects[i].project.task_delivery_order.title,\r\n        id: filteredProjects[i].project.task_delivery_order.id,\r\n        startDate: filteredProjects[i].project.date_created,\r\n        endDate: filteredProjects[i].project.planned_delivery_date,\r\n        plannedHours: filteredProjects[i].project.planned_hours,\r\n        remainingHrs: filteredProjects[i].project.remaining_hours,\r\n        assignees: filteredProjects[i].assignees,\r\n        totalAssignee: filteredProjects[i].assignees.length,\r\n        totalWBS: filteredProjects[i].project.wbs_list.length,\r\n        noWbsPeople: assigneeNoWbs[i],\r\n        totalNoWbsPeople: assigneeNoWbs[i].length,\r\n      });\r\n    }\r\n    console.log(\"filtered details array\", filteredDetails);\r\n    setProjectDetails(filteredDetails);\r\n    let wbsInfo = []\r\n    for (let i = 0; i < filteredProjects.length; i++) {\r\n\r\n      let assignees= filteredProjects[i].assignees\r\n\r\n      let temp = {\r\n        assignees:[],\r\n        date_created: filteredProjects[i].project.date_created,\r\n        date_updated: filteredProjects[i].project.date_updated,\r\n        description : filteredProjects[i].project.description,\r\n        estimated_person : filteredProjects[i].project.estimated_person,\r\n        id : filteredProjects[i].project.id,\r\n        planned_delivery_date : filteredProjects[i].project.planned_delivery_date,\r\n        planned_hours : filteredProjects[i].project.planned_hours,\r\n        planned_value : filteredProjects[i].project.planned_value,\r\n        pm : filteredProjects[i].project.pm,\r\n        remaining_hours : filteredProjects[i].project.remaining_hours,\r\n        start_date : filteredProjects[i].project.start_date,\r\n        status: filteredProjects[i].project.status,\r\n        sub_task : filteredProjects[i].project.sub_task,\r\n        task_delivery_order: filteredProjects[i].project.task_delivery_order,\r\n        task_title : filteredProjects[i].project.task_title,\r\n        work_package_index : filteredProjects[i].project.work_package_index,\r\n        work_package_number : filteredProjects[i].project.work_package_number\r\n      }\r\n\r\n      for(let i=0;i<assignees.length;i++){\r\n        let assignee = {assignee:assignees[i]}\r\n        temp.assignees.push(assignee)\r\n      }\r\n      wbsInfo.push(temp)\r\n    }     \r\n    setwbsinfo (wbsInfo)\r\n    console.log(\"wbsinfo\", wbsInfo)\r\n  };\r\n\r\n  let allAssigneeswithNoWbs = [];\r\n  const nonewbs = () => {\r\n    for (let i = 0; i < allassignee.length; i++) {\r\n      let temp1 = [];\r\n      let temp2 = [];\r\n      let temp3 = [];\r\n      temp1 = [...allassignee[i]];\r\n      temp1 = [...sortBy(temp1, \"id\")];\r\n      temp2 = [...wbslist[i]];\r\n\r\n      temp3 = [...uniqBy(temp2, \"assignee_id\")];\r\n      temp3 = [...sortBy(temp3, \"assignee_id\")];\r\n\r\n      console.log(\"temp1\", temp1, \"temp2\", temp3);\r\n      let assignedIds = new Map();\r\n      for (let i = 0; i < temp3.length; i++) {\r\n        assignedIds.set(temp3[i].assignee_id, true);\r\n      }\r\n      let assigneesWithNoWbs = [];\r\n      for (let i = 0; i < temp1.length; i++) {\r\n        if (assignedIds.get(temp1[i].id) == undefined) {\r\n          assigneesWithNoWbs.push(temp1[i]);\r\n          console.log(\"temp1[i]\", temp1[i].id);\r\n        }\r\n      }\r\n      console.log(\"assignees with no wbs\", assigneesWithNoWbs);\r\n\r\n      allAssigneeswithNoWbs.push(assigneesWithNoWbs);\r\n      setAssigneeNoWbs(allAssigneeswithNoWbs);\r\n    }\r\n\r\n    console.log(\"final array\", allAssigneeswithNoWbs);\r\n    setNoWBS(allAssigneeswithNoWbs);\r\n\r\n    console.log(\"project array\", noWbs);\r\n    console.log(\"all assignee\", allassignee);\r\n    console.log(\"all wbs\", wbslist);\r\n    setnoWbsforProject(noWbs);\r\n  };\r\n\r\n  const filter_notStarted_by_projects = (options) => {\r\n    let temp = [];\r\n    console.log(\"filter\", options);\r\n    if (options.find((item) => item.value == \"all\")) {\r\n      temp.push(notstaredDetails);\r\n      console.log(\"temp all\", temp);\r\n    } else {\r\n      for (let index = 0; index < options.length; index++) {\r\n        console.log(\"options len\", options[index].value);\r\n        for (let index1 = 0; index1 < projects.length; index1++) {\r\n          console.log(\"projects len\", projects[index1]);\r\n          if (\r\n            options[index].value ==\r\n            projects[index1].project.task_delivery_order.id\r\n          ) {\r\n            console.log(\r\n              \"id1 \",\r\n              options[index].value,\r\n              \"id2\",\r\n              projects[index1].project.task_delivery_order.id\r\n            );\r\n            temp.push(projects[index1]);\r\n            console.log(\"temp array\", temp);\r\n          }\r\n        }\r\n      }\r\n      console.log(\"filtered array\", temp);\r\n    }\r\n    setfilteredProjects(temp);\r\n    populate_data(temp);\r\n  };\r\n\r\n  const handleProjectChange = (value, actionMeta) => {\r\n    console.log(\"select \", value, \"action \", actionMeta);\r\n    if (actionMeta.action == \"select-option\") {\r\n      if (value.find((item) => item.value == \"all\")) {\r\n       \r\n        filter_notStarted_by_projects(\r\n          tdooptions.filter((item) => item.value != \"all\")\r\n        );\r\n        setSelectedProject(tdooptions.filter((item) => item.value != \"all\"));\r\n      } else {\r\n        setSelectedProject(value);\r\n        filter_notStarted_by_projects(value);\r\n      }\r\n    } else if (actionMeta.action == \"clear\") {\r\n      setSelectedProject([]);\r\n      filter_notStarted_by_projects(tdooptions.filter((item) => item.value != \"all\"));\r\n    } else if (actionMeta.action == \"remove-value\") {\r\n      setSelectedProject(value);\r\n      if (value.length == 0) {\r\n        filter_notStarted_by_projects(\r\n          tdooptions.filter((item) => item.value != \"all\")\r\n        );\r\n      } else {\r\n        filter_notStarted_by_projects(value);\r\n      }\r\n    }\r\n  };\r\n  \r\n  React.useEffect(() => {\r\n    API.get('project/assignees-with-no-wbs/')\r\n    .then((res) => {\r\n      console.log(\"api response\", res.data.data)\r\n      setNotStartedWBS(res.data.data)\r\n      populateOption(res.data.data)\r\n    })\r\n    \r\n\r\n    if (projects.length > 0 && fetchproject.length == 0) {\r\n      setfetchproject(projects);\r\n      optionlist(projects);\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol lg=\"9\"></CCol>\r\n        <CCol lg=\"3\" className=\"mb-3 pl-4\">\r\n          <Select\r\n            className=\"custom-forminput-6\"\r\n            placeholder=\"Filter by TDOs\"\r\n            searchable={true}\r\n            options={tdooptions}\r\n            isMulti\r\n            onChange={handleProjectChange}\r\n            value={selectedProject}\r\n          />\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <div className=\"main-holder-projects\">\r\n        <h3 className=\"projectsHeader\">\r\n          Project Wise WBS Details ({projectDetails.length}){\" \"}\r\n        </h3>\r\n\r\n        <div className=\"card-holder1\">\r\n          <CRow>\r\n            {Array.from(projectDetails).map((item, idx) => (\r\n              \r\n              <CCol lg=\"4\" key={idx}>\r\n                <CCard className=\"project-card1\"\r\n                >\r\n                  {\" \"}\r\n                  {/* on card click project details card will show */}\r\n                  <CCardBody\r\n                  onClick= {()=>{\r\n                    history.push({\r\n                      pathname:\"/dashboard/Projects/my-projects/details/\"+\r\n                      myProjectDetails[idx].project.work_package_number,\r\n                      state: { project: myProjectDetails[idx] },\r\n                  })\r\n                }}>\r\n                    {/* <h6 className=\"id-no1\">Work Package Number: # {item.project.work_package_number}</h6> */}\r\n                    \r\n                    <h5 className=\"card-details1\">\r\n                      <span className=\"p-header-3\">\r\n                        <b>TDO: {item.tdo}</b>\r\n                      </span>{\" \"}\r\n                    </h5>\r\n                    <h5 className=\"card-details1\">\r\n                      <span className=\"p-header-3\">\r\n                        Project Name: {item.name}\r\n                      </span>{\" \"}\r\n                    </h5>\r\n                    <h5 className=\"card-details1\">\r\n                      <span className=\"p-header-3\">\r\n                        Start Date:{\" \"}\r\n                        {item.startDate.substring(\r\n                          0,\r\n                          item.startDate.indexOf(\" \")\r\n                        )}\r\n                      </span>{\" \"}\r\n                    </h5>\r\n                    {/* <h5 className=\"card-details1\">\r\n                      <span className=\"p-header-3\">\r\n                        Planned Hours: {Number(item.plannedHours).toFixed(2)}{\" \"}\r\n                      </span>{\" \"}\r\n                    </h5>\r\n                    <h5 className=\"card-details1\">\r\n                      <span className=\"p-header-3\">\r\n                        Remaining Hours: {Number(item.remainingHrs).toFixed(2)}{\" \"}\r\n                      </span>{\" \"}\r\n                    </h5> */}\r\n                    <h5 className=\"card-details1\">\r\n                      <span className=\"p-header-3\">\r\n                        Planned Delivery Date: {item.endDate}\r\n                      </span>\r\n                    </h5>\r\n                    <h5 className=\"card-details1\">\r\n                      <span className=\"p-header-3\">\r\n                        Assignees({item.totalAssignee}) :\r\n                        {item.totalAssignee > 1 &&\r\n                          Array.from(item.assignees).map(\r\n                            (i, index) =>\r\n                              \"  \" + i.first_name + \" \" + i.last_name + \", \"\r\n                          )}\r\n                        {item.totalAssignee <= 1 &&\r\n                          Array.from(item.assignees).map(\r\n                            (i, index) =>\r\n                              \"  \" + i.first_name + \" \" + i.last_name\r\n                          )}\r\n                      </span>{\" \"}\r\n                      {/*hyperlinked to see number of projects every assignees are assigned*/}\r\n                    </h5>\r\n                    {/* <h5 className=\"card-details1\">\r\n                      <span className=\"p-header-3\">\r\n                        Total Created WBS : {item.totalWBS}\r\n                      </span>{\" \"} */}\r\n                      {/*hyperlinked to see wbs for this porject in board*/}\r\n                    {/* </h5> */}\r\n                    <h5 className=\"card-details1\">\r\n                      <span className=\"p-header-4\">\r\n                        Assignees with No WBS ({item.totalNoWbsPeople}) :\r\n                        {item.totalNoWbsPeople > 1 &&\r\n                          Array.from(item.noWbsPeople).map(\r\n                            (j, index1) =>\r\n                              \"  \" + j.first_name + \" \" + j.last_name + \", \"\r\n                          )}\r\n                        {item.totalNoWbsPeople <= 1 &&\r\n                          Array.from(item.noWbsPeople).map(\r\n                            (j, index1) =>\r\n                              \"  \" + j.first_name + \" \" + j.last_name\r\n                          )}\r\n                      </span>\r\n                    </h5>\r\n                  </CCardBody>\r\n                  <CCardFooter>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"create-wbs-from-modal float-right\"\r\n                      size=\"sm\"\r\n                      onClick={() => {\r\n                        console.log(\"wbsinfo\", wbsinfo[idx])\r\n                        \r\n                        history.push({\r\n                          pathname: \"/dashboard/WBS/create-wbs\",\r\n                          state: { task : wbsinfo[idx] },\r\n                        });\r\n                      }}\r\n                    >\r\n                      Create WBS\r\n                    </Button>\r\n                  </CCardFooter>\r\n                </CCard>\r\n              </CCol>\r\n            ))}\r\n          </CRow>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default NoWbs;\r\n\r\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n"],"sourceRoot":""}