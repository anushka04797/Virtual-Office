{"version":3,"sources":["IdleTimer.js","containers/TheContent.js","containers/TheFooter.js","components/search/MatResult.js","components/search/MatResultTab.js","components/search/MatSearch.js","containers/TheHeader.js","containers/TheHeaderDropdown.js","containers/TheSidebar.js","containers/TheLayout.js","helper.js","routes/DashboardRoutes.js"],"names":["IdleTimer","timeout","onTimeout","onExpired","this","expiredTime","parseInt","localStorage","getItem","Date","now","eventHandler","updateExpiredTime","bind","tracker","startInterval","interval","setInterval","cleanUp","timeoutTracker","clearTimeout","setTimeout","setItem","window","addEventListener","removeItem","clearInterval","removeEventListener","loading","className","TheContent","React","useState","setIsTimeout","history","useHistory","useEffect","timer","sessionStorage","clear","push","console","log","fallback","innerRoutes","map","route","idx","component","path","exact","name","render","props","memo","TheFooter","fixed","href","target","rel","styled","Paper","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","text","secondary","Transition","ref","Slide","direction","PaperComponent","handle","cancel","TabPanel","children","value","index","other","role","hidden","id","Box","sx","p","Typography","a11yProps","DraggableSearchResultTab","setValue","useTheme","Dialog","maxWidth","fullWidth","open","onClose","handleClose","TransitionComponent","DialogTitle","style","cursor","DialogContent","fontSize","fontWeight","marginBottom","searchText","width","bgcolor","Tabs","onChange","event","newValue","centered","indicatorColor","Tab","icon","label","result","employees","length","projects","axis","onChangeIndex","dir","List","Array","from","item","ListItem","secondaryAction","IconButton","edge","title","onClick","ListItemAvatar","Avatar","src","BASE_URL","profile_pic","ListItemText","primary","first_name","last_name","slc_details","slc","pathname","work_package_number","state","project","go_to_project_details","ListItemIcon","sub_task","planned_delivery_date","DialogActions","Button","autoFocus","MatSearch","setSearchText","setOpen","setResult","search","String","API","get","then","res","data","variant","rounded","margin","display","alignItems","InputBase","ml","flex","placeholder","inputProps","e","onKeyPress","key","type","TheHeader","dispatch","useDispatch","sidebarShow","useSelector","sidebar","withSubheader","colorScheme","inHeader","val","includes","changeState","goBack","routes","TheHeaderDropdown","profile_details","profile","inNav","caret","alt","placement","header","tag","to","USER_ID","divider","catch","err","TheSidebar","show","location","useLocation","match","onShowChange","height","has_permission","TheLayout","fetchProjectsThunk","fetchWbsThunk","fetchPersonalDetails","fetchMeetingList","fetchTimecardThunk","fetchAllTimecardsPmThunk","fetchProjectsForPMThunk","fetchEvmsThunk","permission","PERMISSIONS","split","arrayRemoveItem","arr","filter","ele","capitalize","string","undefined","charAt","toUpperCase","slice","toLowerCase","capitalizeFirstLetter","lazy"],"mappings":"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","file":"static/js/29.bd72ce77.chunk.js","sourcesContent":["class IdleTimer {\r\n    constructor({ timeout, onTimeout, onExpired }) {\r\n      this.timeout = timeout;\r\n      this.onTimeout = onTimeout;\r\n  \r\n      const expiredTime = parseInt(localStorage.getItem(\"_expiredTime\"), 10);\r\n      if (expiredTime > 0 && expiredTime < Date.now()) {\r\n        onExpired();\r\n        return;\r\n      }\r\n  \r\n      this.eventHandler = this.updateExpiredTime.bind(this);\r\n      this.tracker();\r\n      this.startInterval();\r\n    }\r\n  \r\n    startInterval() {\r\n      this.updateExpiredTime();\r\n  \r\n      this.interval = setInterval(() => {\r\n        const expiredTime = parseInt(localStorage.getItem(\"_expiredTime\"), 10);\r\n        // console.log('expiredTime',expiredTime)\r\n        if (expiredTime < Date.now()) {\r\n          if (this.onTimeout) {\r\n            this.onTimeout();\r\n            this.cleanUp();\r\n          }\r\n        }\r\n      }, 1000);\r\n    }\r\n  \r\n    updateExpiredTime() {\r\n      if (this.timeoutTracker) {\r\n        clearTimeout(this.timeoutTracker);\r\n      }\r\n      this.timeoutTracker = setTimeout(() => {\r\n        localStorage.setItem(\"_expiredTime\", Date.now() + this.timeout * 1000);\r\n      }, 300);\r\n    }\r\n  \r\n    tracker() {\r\n      window.addEventListener(\"mousemove\", this.eventHandler);\r\n      window.addEventListener(\"scroll\", this.eventHandler);\r\n      window.addEventListener(\"keydown\", this.eventHandler);\r\n    }\r\n  \r\n    cleanUp() {\r\n      localStorage.removeItem(\"_expiredTime\");\r\n      clearInterval(this.interval);\r\n      window.removeEventListener(\"mousemove\", this.eventHandler);\r\n      window.removeEventListener(\"scroll\", this.eventHandler);\r\n      window.removeEventListener(\"keydown\", this.eventHandler);\r\n    }\r\n  }\r\n  export default IdleTimer;\r\n  ","import React, { Suspense, useState } from 'react'\r\nimport {\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  useHistory\r\n} from 'react-router-dom'\r\nimport { CContainer, CFade } from '@coreui/react'\r\nimport IdleTimer from '../IdleTimer'\r\n// routes config\r\nimport innerRoutes from '../routes/DashboardRoutes'\r\n\r\nconst loading = (\r\n  <div className=\"pt-3 text-center\">\r\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\r\n  </div>\r\n)\r\n\r\nconst TheContent = () => {\r\n  const [isTimeout, setIsTimeout] = React.useState(false);\r\n  let history = useHistory()\r\n  React.useEffect(()=>{\r\n    const timer = new IdleTimer({\r\n      timeout: 600, //expire after 10 seconds\r\n      onTimeout: () => {\r\n        setIsTimeout(true);\r\n        sessionStorage.clear()\r\n        // window.location.href='/login'\r\n        history.push('/login')\r\n        console.log('timed out')\r\n        // \r\n      },\r\n      onExpired: () => {\r\n        setIsTimeout(true);\r\n        //do something if expired on load\r\n        sessionStorage.clear()\r\n        history.push('/login')\r\n        console.log('expired')\r\n      }\r\n    });\r\n    return () => {\r\n      timer.cleanUp();\r\n    };\r\n  },[])\r\n  return (\r\n    <main className=\"c-main\">\r\n      <CContainer>\r\n        <Suspense fallback={loading}>\r\n          <Switch>\r\n            {innerRoutes.map((route, idx) => {\r\n              return route.component && (\r\n                <Route\r\n                  key={idx}\r\n                  path={route.path}\r\n                  exact={route.exact}\r\n                  name={route.name}\r\n                  render={props => (\r\n                    <CFade>\r\n                      <route.component {...props} />\r\n                    </CFade>\r\n                  )} />\r\n              )\r\n            })}\r\n            {/* {isTimeout && <Redirect to=\"/login\"/>} */}\r\n          </Switch>\r\n        </Suspense>\r\n      </CContainer>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default React.memo(TheContent)\r\n","import React from 'react'\r\nimport { CFooter } from '@coreui/react'\r\n\r\nconst TheFooter = () => {\r\n  return (\r\n    <CFooter fixed={false}>\r\n      <div>\r\n        <a href=\"http://dma.com.bd:8000\" target=\"_self\" rel=\"noopener noreferrer\">Virtual Office v2.0.0</a>\r\n        <span className=\"ml-1\">&copy; DMA 2022</span>\r\n      </div>\r\n      <div className=\"mfs-auto\">\r\n        <span className=\"mr-1\">Powered by</span>\r\n        <a href=\"https://dma.com.bd\" target=\"_blank\" rel=\"noopener noreferrer\">DMA</a>\r\n      </div>\r\n    </CFooter>\r\n  )\r\n}\r\n\r\nexport default React.memo(TheFooter)\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Paper from '@mui/material/Paper';\r\nimport Draggable from 'react-draggable';\r\nimport Slide from '@mui/material/Slide';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport { CRow } from '@coreui/react';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport ImageIcon from '@mui/icons-material/Image';\r\nimport WorkIcon from '@mui/icons-material/Work';\r\nimport BeachAccessIcon from '@mui/icons-material/BeachAccess';\r\n\r\nimport { Card, CardContent, CardHeader, Divider, List, ListItem, Typography } from '@mui/material';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nfunction PaperComponent(props) {\r\n    return (\r\n        <Draggable\r\n            handle=\"#draggable-dialog-title\"\r\n            cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n        >\r\n            <Paper {...props} />\r\n        </Draggable>\r\n    );\r\n}\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\nexport default function DraggableSearchResult(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Dialog\r\n                maxWidth={\"sm\"}\r\n                fullWidth={true}\r\n                open={props.open}\r\n                onClose={props.handleClose}\r\n                PaperComponent={PaperComponent}\r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                TransitionComponent={Transition}\r\n            >\r\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                    Search Result\r\n                </DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <Typography sx={{ fontSize: 14, fontWeight: 'bold', marginBottom: 3 }} color=\"#000000\" >\r\n                        You searched for '{props.searchText}'\r\n                    </Typography>\r\n                    <CRow>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography sx={{ fontSize: 14, fontWeight: 'bold' }} color=\"#000000\" >\r\n                                    Employees ({props.result?.projects?.length})\r\n                                </Typography>\r\n                                <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\r\n                                    {props.result?.employees?.length > 0 && Array.from(props.result.employees).map((item, idx) => (\r\n                                        <ListItem>\r\n                                            <ListItemAvatar>\r\n                                                <Avatar>\r\n                                                    <ImageIcon />\r\n                                                </Avatar>\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText primary={item.first_name+' '+item.last_name} secondary=\"Jan 9, 2014\" />\r\n                                        </ListItem>\r\n                                    ))}\r\n                                </List>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </CRow>\r\n                    <Divider orientation='vertical' flexItem />\r\n                    <CRow className=\"mt-2\">\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography sx={{ fontSize: 14, fontWeight: 'bold' }} color=\"#000000\" >\r\n                                    Projects ({props.result?.projects?.length})\r\n                                </Typography>\r\n                                <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\r\n                                    {props.result?.projects?.length > 0 && Array.from(props.result.projects).map((item, idx) => (\r\n                                        <ListItem>\r\n                                            <ListItemAvatar>\r\n                                                <Avatar>\r\n                                                    <ImageIcon />\r\n                                                </Avatar>\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText primary={item.sub_task} secondary=\"Jan 9, 2014\" />\r\n                                        </ListItem>\r\n                                    ))}\r\n                                </List>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </CRow>\r\n                    {/* <CRow className=\"mt-2\">\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography sx={{ fontSize: 14, fontWeight:'bold' }} color=\"#000000\" >\r\n                                    Employees\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </CRow> */}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={props.handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    {/* <Button onClick={props.handleClose}>Subscribe</Button> */}\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Paper from '@mui/material/Paper';\r\nimport Draggable from 'react-draggable';\r\nimport Slide from '@mui/material/Slide';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { Avatar, Card, CardContent, CardHeader, Divider, IconButton, List, ListItem, ListItemAvatar, ListItemButton, ListItemIcon, ListItemText, Typography } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport ImageIcon from '@mui/icons-material/Image';\r\nimport { BASE_URL } from '../../Config';\r\nimport PeopleIcon from '@mui/icons-material/PeopleSharp';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport ExtensionSharpIcon from '@mui/icons-material/ExtensionSharp';\r\nimport AssignmentSharpIcon from '@mui/icons-material/AssignmentSharp';\r\nimport AccountCircleSharpIcon from '@mui/icons-material/AccountCircleSharp';\r\nimport CoPresentSharpIcon from '@mui/icons-material/CoPresentSharp';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nfunction PaperComponent(props) {\r\n    return (\r\n        <Draggable\r\n            handle=\"#draggable-dialog-title\"\r\n            cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n        >\r\n            <Paper {...props} />\r\n        </Draggable>\r\n    );\r\n}\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n}));\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ p: 3 }}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\nexport default function DraggableSearchResultTab(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const history = useHistory()\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    const theme = useTheme();\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n    };\r\n    const go_to_project_details=(item)=>{\r\n        console.log(item)\r\n        history.push({ pathname: '/dashboard/Projects/my-projects/details/' + item.work_package_number, state: { project: item } })\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <Dialog\r\n                maxWidth={\"sm\"}\r\n                fullWidth={true}\r\n                open={props.open}\r\n                onClose={props.handleClose}\r\n                PaperComponent={PaperComponent}\r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                TransitionComponent={Transition}\r\n            >\r\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                    Search Result\r\n                </DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <Typography sx={{ fontSize: 14, fontWeight: 'bold', marginBottom: 3 }} color=\"#000000\" >\r\n                        You searched for '{props.searchText}'\r\n                    </Typography>\r\n                    <Box sx={{ width: '100%', bgcolor: 'background.paper' }}>\r\n                        <Tabs value={value} onChange={handleChange} centered indicatorColor=\"primary\">\r\n                            <Tab icon={<PeopleIcon fontSize=\"small\" />} label={\"Employees (\"+props.result?.employees?.length+\")\"} {...a11yProps(0)} />\r\n                            <Tab icon={<ExtensionSharpIcon fontSize=\"small\" />} label={\"Projects (\"+props.result?.projects?.length+\")\"} {...a11yProps(1)} />\r\n                            <Tab icon={<AssignmentSharpIcon fontSize=\"small\" />} label=\"WBS\" {...a11yProps(2)} />\r\n                            <Tab icon={<CoPresentSharpIcon fontSize=\"small\" />} label=\"Meetings\" {...a11yProps(3)} />\r\n                        </Tabs>\r\n                        <SwipeableViews\r\n                            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                            index={value}\r\n                            onChangeIndex={handleChangeIndex}\r\n                        >\r\n                            <TabPanel value={value} index={0} dir={theme.direction}>\r\n                                <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\r\n                                    {props.result?.employees?.length > 0 && Array.from(props.result.employees).map((item, idx) => (\r\n                                        <ListItem key={idx} secondaryAction={\r\n                                            <IconButton edge=\"end\" aria-label=\"View Profile\" title=\"View Profile\" onClick={()=>{props.handleClose();history.push('/dashboard/profile/'+item.id);}}>\r\n                                              <AccountCircleSharpIcon />\r\n                                            </IconButton>\r\n                                          }>\r\n                                            <ListItemAvatar>\r\n                                                <Avatar>\r\n                                                    {/* <ImageIcon /> */}\r\n                                                    <img src={BASE_URL+item.profile_pic}/>\r\n                                                </Avatar>\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText primary={item.first_name+' '+item.last_name} secondary={item.slc_details?.slc?.name} />\r\n                                        </ListItem>\r\n                                    ))}\r\n                                </List>\r\n                            </TabPanel>\r\n                            <TabPanel value={value} index={1} dir={theme.direction}>\r\n                                <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\r\n                                    {props.result?.projects?.length > 0 && Array.from(props.result.projects).map((item, idx) => (\r\n                                        <ListItem key={idx} onClick={()=>{props.handleClose();go_to_project_details(item)}}>\r\n                                            \r\n                                            <ListItemIcon>\r\n                                                <ExtensionSharpIcon/>\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={item.sub_task} secondary={\"Planned Delivery Date: \"+item.planned_delivery_date} />\r\n                                        </ListItem>\r\n                                    ))}\r\n                                </List>\r\n                            </TabPanel>\r\n                            <TabPanel value={value} index={2} dir={theme.direction}>\r\n                                This Section is currently under development\r\n                            </TabPanel>\r\n                            <TabPanel value={value} index={3} dir={theme.direction}>\r\n                                This Section is currently under development\r\n                            </TabPanel>\r\n                        </SwipeableViews>\r\n                    </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={props.handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    {/* <Button onClick={props.handleClose}>Subscribe</Button> */}\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react'\r\nimport Paper from '@mui/material/Paper';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseSharpIcon from '@mui/icons-material/CloseSharp';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport MatResult from './MatResult.js'\r\nimport MatFullScreenSearchResult from './MatFullScreenSearchResult.js'\r\nimport { API } from '../../Config.js';\r\nimport DraggableSearchResultTab from './MatResultTab.js';\r\n\r\nconst MatSearch = () => {\r\n    const [searchText, setSearchText] = useState('')\r\n    const [open,setOpen]=useState(false)\r\n    const [result,setResult]=useState([])\r\n    const search = () => {\r\n        if(String(searchText).length>0){\r\n            API.get('search?key='+searchText).then(res=>{\r\n                console.log(res.data.data)\r\n                setResult(res.data.data)\r\n                setOpen(true)\r\n            })\r\n            \r\n        }\r\n    }\r\n    const handleKeyPress=(event)=>{\r\n        \r\n        if(event.key === 'Enter'){\r\n            search()\r\n          }\r\n    }\r\n    return (\r\n        <>\r\n            <Paper\r\n                component=\"form\" variant='outlined' rounded=\"true\" \r\n                sx={{ p: '2px 4px',margin:1, display: 'flex', alignItems: 'center', width: 400 }}\r\n            >\r\n                {/* <IconButton sx={{ p: '10px' }} aria-label=\"menu\">\r\n                    <MenuIcon />\r\n                </IconButton> */}\r\n                <InputBase\r\n                    sx={{ ml: 1, flex: 1 }}\r\n                    placeholder=\"Search\"\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n                    value={searchText}\r\n                    onChange={(e)=>setSearchText(e.target.value)}\r\n                    onKeyPress={handleKeyPress}\r\n                />\r\n                {String(searchText).length==0?\r\n                <IconButton type=\"button\" sx={{ p: '10px', color:'rgb(0 82 204)' }} aria-label=\"search\" onClick={search}>\r\n                    <SearchIcon/>\r\n                </IconButton>:<IconButton type=\"button\" sx={{ p: '10px', color:'rgb(0 82 204)' }} aria-label=\"search\" onClick={()=>setSearchText('')}>\r\n                    <CloseSharpIcon/>\r\n                </IconButton>}\r\n                {/* <MatResult open={open} handleClose={()=>setOpen(false)} searchText={searchText} result={result}/> */}\r\n                <DraggableSearchResultTab open={open} handleClose={()=>setOpen(false)} searchText={searchText} result={result}/>\r\n                {/* <MatFullScreenSearchResult open={open} handleClose={()=>setOpen(false)}/> */}\r\n                {/* <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" /> */}\r\n                {/* <IconButton color=\"primary\" sx={{ p: '10px' }} aria-label=\"directions\">\r\n                    <DirectionsIcon />\r\n                </IconButton> */}\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MatSearch","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  CHeader,\r\n  CToggler,\r\n  CHeaderBrand,\r\n  CHeaderNav,\r\n  CHeaderNavItem,\r\n  CHeaderNavLink,\r\n  CSubheader,\r\n  CBreadcrumbRouter,\r\n  CLink,\r\n  CButton, CRow, CCol\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { useHistory } from \"react-router-dom\";\r\n// routes config\r\nimport routes from '../routes/DashboardRoutes'\r\nimport { changeState } from '../store/slices/SideBarSlice'\r\nimport {\r\n  TheHeaderDropdown,\r\n  TheHeaderDropdownMssg,\r\n  TheHeaderDropdownNotif,\r\n  TheHeaderDropdownTasks\r\n} from './index'\r\nimport './TheHeader.css';\r\nimport MatSearch from '../components/search/MatSearch';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nconst TheHeader = () => {\r\n  const dispatch = useDispatch()\r\n  const sidebarShow = useSelector(state => state.sidebar.sidebarShow)\r\n  let history = useHistory();\r\n  const toggleSidebar = () => {\r\n    const val = [true, 'responsive'].includes(sidebarShow) ? false : 'responsive'\r\n    dispatch(changeState(val))\r\n  }\r\n\r\n  const toggleSidebarMobile = () => {\r\n    const val = [false, 'responsive'].includes(sidebarShow) ? true : 'responsive'\r\n    dispatch(changeState(val))\r\n  }\r\n  React.useEffect(() => {\r\n    console.log('sidebar --- ', sidebarShow)\r\n  }, [])\r\n  return (\r\n    <CHeader withSubheader className=\"justify-content-between\" colorScheme=\"light\">\r\n      <CToggler\r\n        inHeader\r\n        className=\"ml-md-3 d-lg-none\"\r\n        onClick={toggleSidebarMobile}\r\n      />\r\n      <CToggler\r\n        inHeader\r\n        className=\"ml-3 d-md-down-none\"\r\n        onClick={toggleSidebar}\r\n      />\r\n\r\n      {/* <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\r\n        <CIcon name=\"logo\" height=\"48\" alt=\"Logo\"/>\r\n      </CHeaderBrand> */}\r\n\r\n      <CHeaderNav className=\"d-md-down-none\">\r\n        {/* <CHeaderNavItem className=\"px-3\" >\r\n          <CHeaderNavLink to=\"/dashboard\">Dashboard</CHeaderNavLink>\r\n        </CHeaderNavItem> */}\r\n        {/* <CHeaderNavItem  className=\"px-3\">\r\n          <CHeaderNavLink to=\"/users\">Users</CHeaderNavLink>\r\n        </CHeaderNavItem>\r\n        <CHeaderNavItem className=\"px-3\">\r\n          <CHeaderNavLink>Settings</CHeaderNavLink>\r\n        </CHeaderNavItem> */}\r\n\r\n        <CHeaderNavItem className=\"px-3 justify-content-between\">\r\n          <MatSearch />\r\n        </CHeaderNavItem>\r\n\r\n      </CHeaderNav>\r\n\r\n      <CHeaderNav className=\"px-3\">\r\n        <TheHeaderDropdown />\r\n      </CHeaderNav>\r\n      <CSubheader className=\"px-3 justify-content-between\">\r\n        <CButton className=\"back-button\" onClick={() => history.goBack()}><CIcon name=\"cil-arrow-thick-from-right\" className=\"mr-2\" />Back</CButton>\r\n        <CBreadcrumbRouter\r\n          className=\"border-0 c-subheader-nav m-0 px-0 px-md-3 custom-router\"\r\n          routes={routes}\r\n\r\n        />\r\n\r\n      </CSubheader>\r\n\r\n    </CHeader>\r\n  )\r\n}\r\n\r\nexport default TheHeader\r\n","import React from 'react'\r\nimport {\r\n  CBadge,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n  CImg\r\n} from '@coreui/react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { API, BASE_URL, USER_ID } from '../Config';\r\nimport CIcon from '@coreui/icons-react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst TheHeaderDropdown = () => {\r\n  let history = useHistory();\r\n  const profile_details = useSelector(state=>state.profile.data)\r\n  function logout() {\r\n    API.get('auth/logout/').then((res) => {\r\n      window.sessionStorage.clear();\r\n      history.push('/')\r\n    }).catch(err => {\r\n      sessionStorage.clear()\r\n      history.push('/')\r\n    })\r\n\r\n  }\r\n  return (\r\n    <CDropdown\r\n      inNav\r\n      className=\"c-header-nav-items mx-2\"\r\n      direction=\"down\"\r\n    >\r\n      <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\r\n        <div className=\"c-avatar\">\r\n          <CImg\r\n            src={profile_details.profile_pic!=null?BASE_URL+profile_details.profile_pic:'avatars/user-avatar-default.png'}\r\n            className=\"c-avatar-img\"\r\n            alt=\"admin@bootstrapmaster.com\"\r\n          />\r\n\r\n        </div>\r\n        <span className=\"ml-2  u-name\">{profile_details.first_name}</span>\r\n      </CDropdownToggle>\r\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n        <CDropdownItem\r\n          header\r\n          tag=\"div\"\r\n          color=\"light\"\r\n          className=\"text-center drop-text\"\r\n        >\r\n          <strong>Account</strong>\r\n        </CDropdownItem>\r\n        <CDropdownItem className=\"drop-text\" to={\"/dashboard/profile/\"+sessionStorage.getItem(USER_ID)}>\r\n          <CIcon name=\"cil-user\" className=\"mfe-2\" />Profile\r\n        </CDropdownItem>\r\n\r\n\r\n        <CDropdownItem divider />\r\n        <CDropdownItem onClick={() => { logout() }} className=\"drop-text\">\r\n          <CIcon name=\"cil-account-logout\" className=\"mfe-2\" />\r\n          Log out\r\n        </CDropdownItem>\r\n      </CDropdownMenu>\r\n    </CDropdown>\r\n  )\r\n}\r\n\r\nexport default TheHeaderDropdown\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './TheSidebar.css'\r\nimport ExtensionOutlinedIcon from '@mui/icons-material/ExtensionOutlined';\r\n\r\nimport {\r\n  CSidebar,\r\n  CSidebarBrand,\r\n  CSidebarNav,\r\n  CSidebarMinimizer,\r\n  CSidebarNavDropdown,\r\n  CSidebarNavItem,\r\n  CImg,\r\n} from '@coreui/react'\r\nimport { changeState } from '../store/slices/SideBarSlice';\r\nimport CIcon from '@coreui/icons-react'\r\nimport { has_permission } from '../helper';\r\n// sidebar nav config\r\nimport { useHistory } from 'react-router';\r\nimport { API, USER_ID } from '../Config';\r\nimport {useLocation} from \"react-router-dom\";\r\n\r\nconst TheSidebar = () => {\r\n  const dispatch = useDispatch()\r\n  let history = useHistory()\r\n  const show = useSelector(state => state.sidebar.sidebarShow)\r\n\r\n  const location = useLocation()\r\n  React.useEffect(() => {\r\n\r\n    const path = location.pathname\r\n    console.log(path);\r\n     if (path.match(\"/dashboard/Projects/\"))\r\n     {\r\n       console.log(path);\r\n     }\r\n     if (path.match(\"/dashboard/WBS/\"))\r\n     {\r\n       console.log(path);\r\n     }\r\n     if (path.match(\"/dashboard/EVMS/\"))\r\n     {\r\n       console.log(path);\r\n     }\r\n\r\n  }, [location])\r\n\r\n\r\n  const logout = () => {\r\n    API.get('auth/logout/').then((res) => {\r\n      sessionStorage.clear()\r\n      history.push('/')\r\n    }).catch(err => {\r\n      sessionStorage.clear()\r\n      history.push('/')\r\n    })\r\n\r\n  }\r\n  return (\r\n    <CSidebar colorScheme=\"light\"\r\n      show={show}\r\n      onShowChange={(val) => dispatch(changeState(val))}\r\n    >\r\n      <CSidebarBrand className=\"d-md-down-none custom-color\" to=\"/\">\r\n        <CImg\r\n          className=\"c-sidebar-brand-full\"\r\n          src={'assets/icons/DMA-LOGO-BIG.svg'}\r\n          height={35}\r\n        />\r\n        <h6 className=\"c-sidebar-brand-full name-brand1\">Virtual Office</h6>\r\n\r\n        <CImg\r\n          className=\"c-sidebar-brand-minimized\"\r\n          src={'assets/icons/DMA-logo-small.svg'}\r\n          height={35}\r\n        />\r\n        <span className=\"c-sidebar-brand-minimized name-brand1\">VO</span>\r\n      </CSidebarBrand>\r\n      <CSidebarNav className=\"vo-sidebar\">\r\n\r\n        {/* <CCreateElement\r\n          items={navigation}\r\n          components={{\r\n            CSidebarNavDivider,\r\n            CSidebarNavDropdown,\r\n            CSidebarNavItem,\r\n            CSidebarNavTitle\r\n          }}\r\n        /> */}\r\n        <CSidebarNavItem to=\"/dashboard\" icon=\"cil-list\" name=\"Dashboard\" className=\"vo-navItem \"/>\r\n          {/* <CIcon\r\n            className = \"dashboard-icon\">\r\n           </CIcon>\r\n      \r\n\r\n         {/*  <i className='dashboard-icon'>  </i>*/}\r\n\r\n         \r\n        {/**Projects */}\r\n        <CSidebarNavDropdown icon=\"cil-lightbulb\" name=\"Projects\" className=\"vo-navItem\" route='/dashboard/Projects/'>  \r\n          {has_permission('projects.add_projects') && <CSidebarNavItem to=\"/dashboard/Projects/create-new-project\" name=\"Create New Project\" className=\"vo-navItem\" ></CSidebarNavItem>}\r\n          {has_permission('projects.add_projects') && <CSidebarNavItem to=\"/dashboard/Projects/my-projects\" name=\"My Projects\" className=\"vo-navItem\"></CSidebarNavItem>}\r\n          <CSidebarNavItem to=\"/dashboard/Projects/assigned-projects\" name=\"Assigned Projects\" className=\"vo-navItem\"  ></CSidebarNavItem>\r\n          <CSidebarNavItem to=\"/dashboard/Projects/completed-projects\" name=\"Completed Projects\" className=\"vo-navItem\" ></CSidebarNavItem>\r\n        </CSidebarNavDropdown>\r\n        {/**WBS */}\r\n        <CSidebarNavDropdown icon=\"cil-spreadsheet\"  name=\"WBS\" className=\"vo-navItem\">\r\n          <CSidebarNavItem to=\"/dashboard/WBS/create-wbs\" name=\"Create WBS\" className=\"vo-navItem\"></CSidebarNavItem>\r\n          <CSidebarNavItem to=\"/dashboard/WBS/board\" name=\"Board\" className=\"vo-navItem\" ></CSidebarNavItem>\r\n\r\n        </CSidebarNavDropdown>\r\n        {/**EVMS */}\r\n        {/* <CSidebarNavItem to=\"/dashboard/EVMS\"name=\"EVMS\" icon=\"cil-chart-line\" className=\"vo-navItem\"></CSidebarNavItem> */}\r\n        {has_permission('evms.view_evms') && <CSidebarNavDropdown icon=\"cil-chart-line\"  name=\"EVMS\" className=\"vo-navItem\">\r\n          <CSidebarNavItem to=\"/dashboard/EVMS/create\" name=\"Create EVMS\" className=\"vo-navItem\"></CSidebarNavItem>\r\n          <CSidebarNavItem to=\"/dashboard/EVMS/view\" name=\"View EVMS\" className=\"vo-navItem\"></CSidebarNavItem>\r\n        </CSidebarNavDropdown>}\r\n\r\n        {/*<CSidebarNavItem to=\"/dashboard/employees\" name=\"Employees\" icon=\"cil-people\" className=\"vo-navItem\"></CSidebarNavItem> */}\r\n        \r\n        {/**Timecards */}\r\n        \r\n        {!has_permission('projects.add_projects') && <CSidebarNavDropdown icon=\"cil-library\" name=\"Timecards\" className=\"vo-navItem\">\r\n          <CSidebarNavItem to=\"/dashboard/timecard/generate-timecard\" name=\"This Week\" className=\"vo-navItem\"></CSidebarNavItem>\r\n          <CSidebarNavItem to=\"/dashboard/timecard/view-previous-hours\" name=\"Previous Weeks\" className=\"vo-navItem\"></CSidebarNavItem>\r\n          <CSidebarNavItem to=\"/dashboard/timecard/submitted-timecards\" name=\"Submitted Timecards\" className=\"vo-navItem\"></CSidebarNavItem>\r\n        </CSidebarNavDropdown>}\r\n        {/**timecards if PM */}\r\n        {has_permission('projects.add_projects') && <CSidebarNavDropdown icon=\"cil-library\" name=\"Timecards\" className=\"vo-navItem\">\r\n          <CSidebarNavItem to=\"/dashboard/timecard/generate-timecard\" name=\"This Week\" className=\"vo-navItem\"></CSidebarNavItem>\r\n          <CSidebarNavItem to=\"/dashboard/timecard/view-previous-hours\" name=\"Previous Weeks\" className=\"vo-navItem\"></CSidebarNavItem>\r\n          <CSidebarNavItem to=\"/dashboard/timecard/submitted-timecards\" name=\"Submitted Timecards\" className=\"vo-navItem\"></CSidebarNavItem>\r\n          {/* {has_permission('projects.add_projects') && <CSidebarNavItem to=\"/dashboard/timecard/weekly-timecards\" name=\"Weekly Timecard\" className=\"vo-navItem\"></CSidebarNavItem>} */}\r\n          {/* {has_permission('projects.add_projects') && <CSidebarNavItem to=\"/dashboard/timecard/weekly-timecards\" name=\"Report\" className=\"vo-navItem\"></CSidebarNavItem>} */}\r\n        </CSidebarNavDropdown>}\r\n        {/**Meetings */}\r\n        <CSidebarNavItem to=\"/dashboard/meetings\" icon=\"cil-group\" name=\"Meetings\" className=\"vo-navItem\"></CSidebarNavItem>\r\n        {/**Shared Docs */}\r\n        <CSidebarNavItem to=\"/dashboard/shared-documents\" name=\"Shared Documents\" icon=\"cil-folder-open\" className=\"vo-navItem\"></CSidebarNavItem>\r\n        <hr />\r\n        {/**Profile */}\r\n        <CSidebarNavItem to={\"/dashboard/profile/\"+sessionStorage.getItem(USER_ID)} name=\"Profile\" icon=\"cil-user\" className=\"vo-navItem\"></CSidebarNavItem>\r\n\r\n\r\n        {/**log out */}\r\n        <CSidebarNavItem onClick={logout} name=\"Logout\" icon=\"cil-account-logout\" className=\"vo-navItem\"></CSidebarNavItem>\r\n\r\n      </CSidebarNav>\r\n      {/* <span className=\"copyright-text\">&copy; DMA V1.0.0</span> */}\r\n      <CSidebarMinimizer />\r\n\r\n    </CSidebar>\r\n  )\r\n}\r\n\r\nexport default React.memo(TheSidebar)\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { USER_ID } from '../Config';\r\nimport { fetchPersonalDetails } from '../store/slices/ProfileSlice';\r\nimport { fetchProjectsThunk } from '../store/slices/ProjectsSlice';\r\nimport { fetchWbsThunk } from '../store/slices/WbsSlice';\r\nimport { fetchProjectsForPMThunk } from '../store/slices/ProjectsSlice';\r\nimport {\r\n  TheContent,\r\n  TheSidebar,\r\n  TheFooter,\r\n  TheHeader\r\n} from './index'\r\nimport './TheLayout.css'\r\nimport { has_permission } from '../helper';\r\nimport { fetchEvmsThunk } from '../store/slices/EvmsSlice';\r\nimport { fetchMeetingList } from '../store/slices/MeetingSlice';\r\nimport { fetchAllTimecardsPm, fetchAllTimecardsPmThunk, fetchTimecardThunk } from '../store/slices/TimecardSlice';\r\nconst TheLayout = () => {\r\n  const dispatch = useDispatch()\r\n  React.useEffect(()=>{\r\n    dispatch(fetchProjectsThunk(sessionStorage.getItem(USER_ID)))\r\n    dispatch(fetchWbsThunk(sessionStorage.getItem(USER_ID)))\r\n    dispatch(fetchPersonalDetails(sessionStorage.getItem(USER_ID)))\r\n    dispatch(fetchMeetingList(sessionStorage.getItem(USER_ID)))\r\n    dispatch(fetchTimecardThunk(sessionStorage.getItem(USER_ID)))\r\n    dispatch(fetchAllTimecardsPmThunk(sessionStorage.getItem(USER_ID)))\r\n    if(has_permission('projects.add_projects')){\r\n      console.log('is PM')\r\n      dispatch(fetchProjectsForPMThunk(sessionStorage.getItem(USER_ID)))\r\n      dispatch(fetchEvmsThunk(sessionStorage.getItem(USER_ID)))\r\n    }\r\n  },[])\r\n  return (\r\n    <div className=\"c-app c-default-layout\">\r\n      <TheSidebar/>\r\n      <div className=\"c-wrapper\">\r\n        <TheHeader/>\r\n        <div className=\"c-body pt-10 custom-color-c-app\">\r\n          <TheContent/>\r\n        </div>\r\n        <TheFooter/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TheLayout\r\n","import { PERMISSIONS } from \"./Config\"\r\nimport moment from \"moment\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nexport const user_groups = () => {\r\n    //let temp=[]\r\n    let groups = sessionStorage.getItem('groups').split(',')\r\n    return groups\r\n}\r\n\r\nexport const has_group = (group) => {\r\n    let groups = user_groups()\r\n    if (groups.includes(group)) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\nexport const has_permission=(permission)=>{\r\n    if(sessionStorage.getItem(PERMISSIONS)!=null){\r\n        let permissions = sessionStorage.getItem(PERMISSIONS).split(',')\r\n        return permissions.includes(permission)\r\n    }\r\n    return false\r\n}\r\nexport function arrayRemoveItem(arr, value) {\r\n    return arr.filter(function (ele) {\r\n        // console.log('ele',ele,'value',value)\r\n        return ele != value;\r\n    });\r\n}\r\n\r\nexport const getBuildDate = (epoch) => {\r\n    const buildDate = moment(epoch).format(\"DD-MM-YYY HH:MM\");\r\n    return buildDate;\r\n};\r\nexport function capitalize(string) {\r\n    if (string != undefined) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\r\n    }\r\n    return ''\r\n}\r\n\r\nexport function capitalizeFirstLetter(string=\"\") {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport function unique_elements(array){\r\n    return array.filter((v, i, a) => a.indexOf(v) == i);\r\n}\r\n\r\nexport const exportPDF = (profile_details,startDate,endDate,pdfData,tableData) => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n    doc.setFontSize(12);\r\n  //  doc.rect(130, 30, 600, 40);\r\n    \r\n    const title = profile_details.first_name + \"_\" + profile_details.last_name + \"_\" + \"Timecard_\" + moment(startDate).format(\"DD/MM/YYYY\") + \"-\" + moment(endDate).format(\"DD/MM/YYYY\");\r\n    const headers = [[\r\n       \r\n        \"Date\",\r\n        \"Days\",\r\n        \"Task Title\",\r\n        \"Hours\", \r\n        \"Hours Type\"\r\n       \r\n    ]];\r\n    console.log(\"pdfData\", pdfData)\r\n    //console.log(\"table1111111\", tableData.Task)\r\n    const uData = tableData.map((elt, idx) => [\r\n       \r\n        elt.Date,\r\n        elt.Days,\r\n        elt.Task,\r\n        elt.Total,\r\n        elt.Time,\r\n    ])\r\n    let content = {\r\n        startY: 140,\r\n        head: headers,\r\n        body: uData\r\n    };\r\n    const edate= moment(endDate).format(\"DD/MM/YYYY\")\r\n    const name =profile_details.first_name + \" \" + profile_details.last_name \r\n    doc.setFontSize(18);\r\n    doc.text(90, 50, \"Datasoft Manufacturing & Assembly Gulshan Branch\")\r\n    doc.setFontSize(12);\r\n    doc.text(42,100, \"Employee Time card\")\r\n    doc.text(420, 100, \"Week-Ending: \"+ edate)\r\n    doc.text(42, 120, \"Name: \"+ name)\r\n    doc.text(420, 120, \"NID: \")   \r\n    doc.text(42, 350, \"Submitted : (date & Time)\")\r\n    doc.autoTable(content);\r\n    doc.save(profile_details.first_name + \"_\" + profile_details.last_name + \"_\" + \"Timecard_\" + moment(startDate).format(\"DD/MM/YYYY\") + \"-\" + moment(endDate).format(\"DD/MM/YYYY\") + \".pdf\")\r\n}","import React from 'react';\r\nconst Dashboard = React.lazy(() => import('../pages/dashboard/Dashboard'));\r\n\r\nconst routes = [\r\n    { path: '/dashboard', exact: true, name: 'Dashboard', component: Dashboard },\r\n    { path: '/dashboard/Projects/assigned-projects', exact: true, name: 'Assigned Projects', component: React.lazy(() => import('../pages/ongoing-project-details/ongoingProjectDetails')) },\r\n    { path: '/dashboard/Projects/assigned-projects/details/:work_package_number', exact: true, name: 'Assigned Project Details', component: React.lazy(() => import('../pages/ongoing-project-details-view/OngoingProjectDetailsView')) },\r\n    { path: '/dashboard/Projects/my-projects', exact: true, name: 'My Projects', component: React.lazy(() => import('../pages/my-projects/myProjects')) },\r\n    { path: '/dashboard/Projects/my-projects/details/:work_package_number', exact: true, name: 'My Project Details', component: React.lazy(() => import('../pages/my-projects-details/myProjectsDetails')) },\r\n    { path: '/dashboard/task/details/:work_package_index', exact: true, name: 'My Task Details', component: React.lazy(() => import('../pages/task-details/TaskDetails')) }, //task details\r\n    { path: '/dashboard/Meetings', exact: true, name: 'Meetings', component: React.lazy(() => import('../pages/meetings/Meetings')) },\r\n    { path: '/dashboard/Projects/completed-projects', exact: true, name: 'Completed Projects', component: React.lazy(() => import('../pages/completed-project/completedProject')) },\r\n    { path: '/dashboard/Projects/completed-projects/details/:work_package_number', exact: true, name: 'Completed Projects details', component: React.lazy(() => import('../pages/completed-project-details-view/CompletedProjectDetails')) },\r\n    { path: '/dashboard/Projects/create-new-project', exact: true, name: 'Create New Project', component: React.lazy(() => import('../pages/createProject/createProject')) },\r\n  // { path: '/dashboard/employees', exact: true, name: 'Employees', component: React.lazy(() => import('../pages/employees/Employees')) },\r\n    { path: '/dashboard/EVMS/create', exact: true, name: 'EVMS Create', component: React.lazy(() => import('../pages/create-evms/createEVMS')) },\r\n    { path: '/dashboard/EVMS/view', exact: true, name: 'EVMS View', component: React.lazy(() => import('../pages/evms-view/evmsView')) },\r\n    { path: '/dashboard/EVMS/details', exact: true, name: 'EVMS Details', component: React.lazy(() => import('../pages/evms-details/evmsDetails')) },\r\n\r\n    { path: '/dashboard/WBS/create-wbs', exact: true, name: 'WBS', component: React.lazy(() => import('../pages/WBS-create/createWBS')) },\r\n    { path: '/dashboard/WBS/board', exact: true, name: 'Board', component: React.lazy(() => import('../pages/wbs-board/Board')) },\r\n\r\n    { path: '/dashboard/timecard/generate-timecard', exact: true, name: 'Generate Timecard', component: React.lazy(() => import('../pages/timecards/timeCard')) },\r\n    { path: '/dashboard/timecard/view-previous-hours', exact: true, name: 'Previous Weeks', component: React.lazy(() => import('../pages/timecards/PreviousWeeks')) },\r\n    { path: '/dashboard/timecard/submitted-timecards', exact: true, name: 'Submitted Timecards', component: React.lazy(() => import('../pages/timecards/SubmittedTimecards')) },\r\n    { path: '/dashboard/timecard/weekly-timecards', exact: true, name: 'Weekly Timecard', component: React.lazy(() => import('../pages/weekly-timecards/WeeklyTimecards')) },\r\n    { path: '/dashboard/profile/:id?', exact: true, name: 'Profile', component: React.lazy(() => import('../pages/profile/profileView')) },\r\n    { path: '/dashboard/shared-documents', exact: true, name: 'Shared Documents', component: React.lazy(() => import('../pages/shared-docs/sharedDocs')) }\r\n\r\n]\r\n\r\nexport default routes"],"sourceRoot":""}