{"version":3,"sources":["pages/not-started/notStarted.js","../node_modules/lodash/_baseUniq.js","../node_modules/lodash/_arrayIncludes.js","../node_modules/lodash/_baseIndexOf.js","../node_modules/lodash/_baseFindIndex.js","../node_modules/lodash/_baseIsNaN.js","../node_modules/lodash/_strictIndexOf.js","../node_modules/lodash/_arrayIncludesWith.js","../node_modules/lodash/_createSet.js","../node_modules/lodash/noop.js","../node_modules/lodash/uniqBy.js"],"names":["NoWbs","useState","useHistory","selectedProject","setSelectedProject","fetchproject","setfetchproject","tdos","setTdos","projects","useSelector","state","e","Array","from","pm_projects","forEach","item","idx","push","console","log","setnoWbsforProject","setAllAssignee","setallWbs","projectDetails","setProjectDetails","setfilteredProjects","setNoWBS","assigneeNoWbs","setAssigneeNoWbs","noWbs","allassignee","wbslist","details","allAssigneeswithNoWbs","nonewbs","i","length","temp2","temp1","temp3","sortBy","uniqBy","assignedIds","Map","set","assignee_id","assigneesWithNoWbs","undefined","get","id","filter_notStarted_by_projects","options","temp","find","value","index","index1","project","task_delivery_order","filteredProjects","filteredDetails","data","name","title","startDate","date_created","endDate","planned_delivery_date","plannedHours","planned_hours","remainingHrs","remaining_hours","assignees","totalAssignee","totalWBS","wbs_list","noWbsPeople","totalNoWbsPeople","populate_data","React","useEffect","optionarray","label","unshift","optionlist","lg","className","placeholder","searchable","isMulti","onChange","actionMeta","action","filter","map","substring","indexOf","Number","toFixed","first_name","last_name","j","SetCache","require","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","module","exports","array","iteratee","comparator","includes","isCommon","result","seen","outer","computed","seenIndex","baseIndexOf","baseFindIndex","baseIsNaN","strictIndexOf","fromIndex","predicate","fromRight","Set","noop","values","baseIteratee","baseUniq"],"mappings":"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","file":"static/js/29.5b13f701.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./notStarted.css\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CContainer,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport uniqBy from \"lodash/uniqBy\";\r\nimport sortBy from \"lodash/sortBy\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst NoWbs = () => {\r\n  const [wbsinfo, setwbsinfo] = useState([])\r\n  let history = useHistory();\r\n  const [selectedProject, setSelectedProject] = useState([]);\r\n  const [options, setoptions] = useState();\r\n  const [fetchproject, setfetchproject] = useState([]);\r\n  const [tdos, setTdos] = useState([]);\r\n  \r\n\r\n  const projects = useSelector((state) => {\r\n    let e = [];\r\n    Array.from(state.projects.pm_projects).forEach((item, idx) => {\r\n      e.push(item);\r\n    });\r\n    console.log(\"all Projects\", e);\r\n    return e;\r\n  });\r\n\r\n  const [nowbsforProject, setnoWbsforProject] = useState([]);\r\n  const [allAssignee, setAllAssignee] = useState();\r\n  const [allwbs, setallWbs] = useState();\r\n  const [projectDetails, setProjectDetails] = useState([]);\r\n  const [filteredProjects, setfilteredProjects] = useState(projects);\r\n  const [noWBS, setNoWBS] = useState([]);\r\n  const [assigneeNoWbs, setAssigneeNoWbs] = useState([]);\r\n  let [data1, setdata1] = useState([]);\r\n\r\n  let noWbs = [];\r\n  let allassignee = [];\r\n  let wbslist = [];\r\n  let details = [];\r\n  const optionlist = (projects) => {\r\n    \r\n    let optionarray = [];\r\n    for (let i = 0; i < projects.length; i++) {\r\n      allassignee[i] = projects[i].assignees;\r\n      wbslist[i] = projects[i].project.wbs_list;\r\n      optionarray.push({\r\n        data: projects[i],\r\n        label: projects[i].project.task_delivery_order.title,\r\n        value: projects[i].project.task_delivery_order.id,\r\n      });\r\n    }\r\n    optionarray.unshift({\r\n      label: \"Select All\",\r\n      value: \"all\",\r\n      data: {},\r\n    });\r\n\r\n    console.log(\"options\", optionarray[0].data);\r\n    console.log(\"allAssignee array\", allassignee);\r\n    console.log(\"wbslist\", wbslist);\r\n    console.log(\"details array \", details);\r\n    setAllAssignee(allassignee);\r\n    setallWbs(wbslist);\r\n\r\n    setTdos(optionarray);\r\n    nonewbs();\r\n\r\n    console.log(\"projects\", projects)\r\n    for (let i = 0; i < projects.length; i++) {\r\n      \r\n      //setwbsinfo(projects[i].project)\r\n      details.push({\r\n        data: projects[i],\r\n        name: projects[i].project.task_delivery_order.title,\r\n        id: projects[i].project.task_delivery_order.id,\r\n        startDate: projects[i].project.date_created,\r\n        endDate: projects[i].project.planned_delivery_date,\r\n        plannedHours: projects[i].project.planned_hours,\r\n        remainingHrs: projects[i].project.remaining_hours,\r\n        assignees: projects[i].assignees,\r\n        totalAssignee: projects[i].assignees.length,\r\n        totalWBS: projects[i].project.wbs_list.length,\r\n        noWbsPeople: allAssigneeswithNoWbs[i],\r\n        totalNoWbsPeople: allAssigneeswithNoWbs[i].length,\r\n      });\r\n    }\r\n\r\n    // let wbsinfo1 = []\r\n    // for (let i = 0; i < projects.length; i++) {\r\n    //   wbsinfo1.push({\r\n    //     assignees: projects[i].assignees,\r\n    //     date_created: projects[i].project.date_created,\r\n    //     date_updated: projects[i].project.date_updated,\r\n    //     description : projects[i].project.description,\r\n    //     estimated_person : projects[i].project.estimated_person,\r\n    //     id : projects[i].project.id,\r\n    //     planned_delivery_date : projects[i].project.planned_delivery_date,\r\n    //     planned_hours : projects[i].project.planned_hours,\r\n    //     planned_value : projects[i].project.planned_value,\r\n    //     pm : projects[i].project.pm,\r\n    //     remaining_hours : projects[i].project.remaining_hours,\r\n    //     start_date : projects[i].project.start_date,\r\n    //     status: projects[i].project.status,\r\n    //     sub_task : projects[i].project.sub_task,\r\n    //     task_delivery_order: projects[i].project.task_delivery_order,\r\n    //     task_title : projects[i].project.task_title,\r\n    //     work_package_index : projects[i].project.work_package_index,\r\n    //     work_package_number : projects[i].project.work_package_number\r\n    //   })\r\n    // }\r\n    //setwbsinfo(wbsinfo1)\r\n    console.log(\"details array\", details);\r\n    setProjectDetails(details);\r\n  };\r\n  const populate_data = (filteredProjects) => {\r\n    console.log(\"filtered projects\", filteredProjects);\r\n    //setwbsinfo(filteredProjects.project)\r\n    nonewbs();\r\n    let filteredDetails = [];\r\n    for (let i = 0; i < filteredProjects.length; i++) {\r\n      filteredDetails.push({\r\n        data: filteredProjects[i],\r\n        name: filteredProjects[i].project.task_delivery_order.title,\r\n        id: filteredProjects[i].project.task_delivery_order.id,\r\n        startDate: filteredProjects[i].project.date_created,\r\n        endDate: filteredProjects[i].project.planned_delivery_date,\r\n        plannedHours: filteredProjects[i].project.planned_hours,\r\n        remainingHrs: filteredProjects[i].project.remaining_hours,\r\n        assignees: filteredProjects[i].assignees,\r\n        totalAssignee: filteredProjects[i].assignees.length,\r\n        totalWBS: filteredProjects[i].project.wbs_list.length,\r\n        noWbsPeople: assigneeNoWbs[i],\r\n        totalNoWbsPeople: assigneeNoWbs[i].length,\r\n      });\r\n    }\r\n    console.log(\"filtered details array\", filteredDetails);\r\n    setProjectDetails(filteredDetails);\r\n    let wbsInfo = []\r\n    // for (let i = 0; i < filteredProjects.length; i++) {\r\n    //   wbsInfo.push({\r\n    //     assignees: filteredProjects[i].assignees,\r\n    //     date_created: filteredProjects[i].project.date_created,\r\n    //     date_updated: filteredProjects[i].project.date_updated,\r\n    //     description : filteredProjects[i].project.description,\r\n    //     estimated_person : filteredProjects[i].project.estimated_person,\r\n    //     id : filteredProjects[i].project.id,\r\n    //     planned_delivery_date : filteredProjects[i].project.planned_delivery_date,\r\n    //     planned_hours : filteredProjects[i].project.planned_hours,\r\n    //     planned_value : filteredProjects[i].project.planned_value,\r\n    //     pm : filteredProjects[i].project.pm,\r\n    //     remaining_hours : filteredProjects[i].project.remaining_hours,\r\n    //     start_date : filteredProjects[i].project.start_date,\r\n    //     status: filteredProjects[i].project.status,\r\n    //     sub_task : filteredProjects[i].project.sub_task,\r\n    //     task_delivery_order: filteredProjects[i].project.task_delivery_order,\r\n    //     task_title : filteredProjects[i].project.task_title,\r\n    //     work_package_index : filteredProjects[i].project.work_package_index,\r\n    //     work_package_number : filteredProjects[i].project.work_package_number\r\n    //   })\r\n    // }     \r\n    // setwbsinfo (wbsInfo)\r\n    // console.log(\"wbsinfo\", wbsInfo)\r\n\r\n  };\r\n\r\n  let allAssigneeswithNoWbs = [];\r\n  const nonewbs = () => {\r\n    for (let i = 0; i < allassignee.length; i++) {\r\n      let temp1 = [];\r\n      let temp2 = [];\r\n      let temp3 = [];\r\n      temp1 = [...allassignee[i]];\r\n      temp1 = [...sortBy(temp1, \"id\")];\r\n      temp2 = [...wbslist[i]];\r\n\r\n      temp3 = [...uniqBy(temp2, \"assignee_id\")];\r\n      temp3 = [...sortBy(temp3, \"assignee_id\")];\r\n\r\n      console.log(\"temp1\", temp1, \"temp2\", temp3);\r\n      let assignedIds = new Map();\r\n      for (let i = 0; i < temp3.length; i++) {\r\n        assignedIds.set(temp3[i].assignee_id, true);\r\n      }\r\n      let assigneesWithNoWbs = [];\r\n      for (let i = 0; i < temp1.length; i++) {\r\n        if (assignedIds.get(temp1[i].id) == undefined) {\r\n          assigneesWithNoWbs.push(temp1[i]);\r\n          console.log(\"temp1[i]\", temp1[i].id);\r\n        }\r\n      }\r\n      console.log(\"assignees with no wbs\", assigneesWithNoWbs);\r\n\r\n      allAssigneeswithNoWbs.push(assigneesWithNoWbs);\r\n      setAssigneeNoWbs(allAssigneeswithNoWbs);\r\n    }\r\n\r\n    console.log(\"final array\", allAssigneeswithNoWbs);\r\n    setNoWBS(allAssigneeswithNoWbs);\r\n\r\n    console.log(\"project array\", noWbs);\r\n    console.log(\"all assignee\", allassignee);\r\n    console.log(\"all wbs\", wbslist);\r\n    setnoWbsforProject(noWbs);\r\n  };\r\n\r\n  const filter_notStarted_by_projects = (options) => {\r\n    let temp = [];\r\n    console.log(\"filter\", options);\r\n    if (options.find((item) => item.value == \"all\")) {\r\n      temp.push(projectDetails);\r\n      console.log(\"temp all\", temp);\r\n    } else {\r\n      for (let index = 0; index < options.length; index++) {\r\n        console.log(\"options len\", options[index].value);\r\n        for (let index1 = 0; index1 < projects.length; index1++) {\r\n          console.log(\"projects len\", projects[index1]);\r\n          if (\r\n            options[index].value ==\r\n            projects[index1].project.task_delivery_order.id\r\n          ) {\r\n            console.log(\r\n              \"id1 \",\r\n              options[index].value,\r\n              \"id2\",\r\n              projects[index1].project.task_delivery_order.id\r\n            );\r\n            temp.push(projects[index1]);\r\n            console.log(\"temp array\", temp);\r\n          }\r\n        }\r\n      }\r\n      console.log(\"filtered array\", temp);\r\n    }\r\n    setfilteredProjects(temp);\r\n    populate_data(temp);\r\n  };\r\n\r\n  const handleProjectChange = (value, actionMeta) => {\r\n    console.log(\"select \", value, \"action \", actionMeta);\r\n    if (actionMeta.action == \"select-option\") {\r\n      if (value.find((item) => item.value == \"all\")) {\r\n       \r\n        filter_notStarted_by_projects(\r\n          tdos.filter((item) => item.value != \"all\")\r\n        );\r\n        setSelectedProject(tdos.filter((item) => item.value != \"all\"));\r\n      } else {\r\n        setSelectedProject(value);\r\n        filter_notStarted_by_projects(value);\r\n      }\r\n    } else if (actionMeta.action == \"clear\") {\r\n      setSelectedProject([]);\r\n      filter_notStarted_by_projects(tdos.filter((item) => item.value != \"all\"));\r\n    } else if (actionMeta.action == \"remove-value\") {\r\n      setSelectedProject(value);\r\n      if (value.length == 0) {\r\n        filter_notStarted_by_projects(\r\n          tdos.filter((item) => item.value != \"all\")\r\n        );\r\n      } else {\r\n        filter_notStarted_by_projects(value);\r\n      }\r\n    }\r\n  };\r\n  React.useEffect(() => {\r\n    \r\n    if (projects.length > 0 && fetchproject.length == 0) {\r\n      setfetchproject(projects);\r\n      optionlist(projects);\r\n    }\r\n  }, [projects]);\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol lg=\"9\"></CCol>\r\n        <CCol lg=\"3\" className=\"mb-3 pl-4\">\r\n          <Select\r\n            className=\"custom-forminput-6\"\r\n            placeholder=\"Filter by Projects\"\r\n            searchable={true}\r\n            options={tdos}\r\n            isMulti\r\n            // onChange={}\r\n\r\n            onChange={handleProjectChange}\r\n            value={selectedProject}\r\n          />\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <div className=\"main-holder-projects\">\r\n        <h3 className=\"projectsHeader\">\r\n          Project Wise WBS Details ({projectDetails.length}){\" \"}\r\n        </h3>\r\n\r\n        <div className=\"card-holder1\">\r\n          <CRow>\r\n            {Array.from(projectDetails).map((item, idx) => (\r\n              \r\n              <CCol lg=\"4 \">\r\n                <CCard className=\"project-card1\">\r\n                  {\" \"}\r\n                  {/* on card click project details card will show */}\r\n                  <CCardBody>\r\n                    {/* <h6 className=\"id-no1\">Work Package Number: # {item.project.work_package_number}</h6> */}\r\n                    <h5 className=\"card-details1\">\r\n                      <span className=\"p-header-3\">\r\n                        Project Name: {item.name}\r\n                      </span>{\" \"}\r\n                    </h5>\r\n                    <h5 className=\"card-details1\">\r\n                      <span className=\"p-header-3\">\r\n                        Start Date:{\" \"}\r\n                        {item.startDate.substring(\r\n                          0,\r\n                          item.startDate.indexOf(\" \")\r\n                        )}\r\n                      </span>{\" \"}\r\n                    </h5>\r\n                    <h5 className=\"card-details1\">\r\n                      <span className=\"p-header-3\">\r\n                        Planned Hours: {Number(item.plannedHours).toFixed(2)}{\" \"}\r\n                      </span>{\" \"}\r\n                    </h5>\r\n                    <h5 className=\"card-details1\">\r\n                      <span className=\"p-header-3\">\r\n                        Remaining Hours: {Number(item.remainingHrs).toFixed(2)}{\" \"}\r\n                      </span>{\" \"}\r\n                    </h5>\r\n                    <h5 className=\"card-details1\">\r\n                      <span className=\"p-header-3\">\r\n                        Planned Delivery Date: {item.endDate}\r\n                      </span>\r\n                    </h5>\r\n                    <h5 className=\"card-details1\">\r\n                      <span className=\"p-header-3\">\r\n                        Assignees({item.totalAssignee}) :\r\n                        {item.totalAssignee > 1 &&\r\n                          Array.from(item.assignees).map(\r\n                            (i, index) =>\r\n                              \"  \" + i.first_name + \" \" + i.last_name + \", \"\r\n                          )}\r\n                        {item.totalAssignee <= 1 &&\r\n                          Array.from(item.assignees).map(\r\n                            (i, index) =>\r\n                              \"  \" + i.first_name + \" \" + i.last_name\r\n                          )}\r\n                      </span>{\" \"}\r\n                      {/*hyperlinked to see number of projects every assignees are assigned*/}\r\n                    </h5>\r\n                    <h5 className=\"card-details1\">\r\n                      <span className=\"p-header-3\">\r\n                        Total Created WBS : {item.totalWBS}\r\n                      </span>{\" \"}\r\n                      {/*hyperlinked to see wbs for this porject in board*/}\r\n                    </h5>\r\n                    <h5 className=\"card-details1\">\r\n                      <span className=\"p-header-4\">\r\n                        Assignees with No WBS ({item.totalNoWbsPeople}) :\r\n                        {item.totalNoWbsPeople > 1 &&\r\n                          Array.from(item.noWbsPeople).map(\r\n                            (j, index1) =>\r\n                              \"  \" + j.first_name + \" \" + j.last_name + \", \"\r\n                          )}\r\n                        {item.totalNoWbsPeople <= 1 &&\r\n                          Array.from(item.noWbsPeople).map(\r\n                            (j, index1) =>\r\n                              \"  \" + j.first_name + \" \" + j.last_name\r\n                          )}\r\n                      </span>\r\n                    </h5>\r\n                  </CCardBody>\r\n                  {/* <CCardFooter>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"create-wbs-from-modal float-right\"\r\n                      size=\"sm\"\r\n                      onClick={() => {\r\n                        \r\n                        history.push({\r\n                          pathname: \"/dashboard/WBS/create-wbs\",\r\n                          state: { task : wbsinfo },\r\n                        });\r\n                      }}\r\n                    >\r\n                      Create WBS\r\n                    </Button>\r\n                  </CCardFooter> */}\r\n                </CCard>\r\n              </CCol>\r\n            ))}\r\n          </CRow>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default NoWbs;\r\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n"],"sourceRoot":""}