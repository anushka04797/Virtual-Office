{"version":3,"sources":["pages/sign-in/MatLogin.js"],"names":["Copyright","props","variant","color","align","href","Date","getFullYear","theme","createTheme","SignIn","history","useHistory","useSnackbar","enqueueSnackbar","closeSnackbar","React","intended_route","setIntendedRoute","location","useLocation","state","registration","String","window","split","length","items","formLogin","useFormik","initialValues","email","password","validateOnChange","validateOnBlur","validate","values","console","log","errors","onSubmit","setSubmitting","PUBLIC_API","post","then","res","data","status","success","sessionStorage","setItem","TOKEN","token","expires_after","JSON","stringify","time","getMonth","getDate","getUTCHours","getMinutes","getSeconds","USER_ID","user_id","API","get","Array","from","PERMISSIONS","push","pathname","clear","swal","catch","err","response","message","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","handleSubmit","noValidate","mt","margin","required","fullWidth","id","name","value","onChange","handleChange","label","autoComplete","autoFocus","onKeyPress","event","key","type","mb","disabled","isValid","container","item","xs"],"mappings":"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","file":"static/js/43.c5bdcfea.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useFormik } from 'formik';\r\nimport { API, PERMISSIONS, PUBLIC_API, TOKEN, USER_ID } from \"../../Config\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { LinearProgress } from \"@mui/material\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\n\r\nimport swal from \"sweetalert\";\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"https://dma.com.bd/\">\r\n        Datasoft Manufacturing & Assembly Inc\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function SignIn() {\r\n    let history = useHistory();\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    const [intended_route,setIntendedRoute]=React.useState('/dashboard/WBS/board')\r\n    let location = useLocation()\r\n    React.useEffect(() => {\r\n        if (location.state?.registration) {\r\n          enqueueSnackbar('Registration Succefull, please wait for admin approval.', { variant: 'info' })\r\n        }\r\n        \r\n        if(String(window.location).split('?').length>1){\r\n          let items=String(window.location).split('?')[1].split('=')\r\n          if(items.length>0 && items[0]=='task_details'){\r\n            setIntendedRoute('/dashboard/task/details/'+items[1])\r\n          }\r\n        }\r\n    }, [])\r\n    const handleKeyPress = (event) => {\r\n        if (event.key === 'Enter') {\r\n        formLogin.handleSubmit()\r\n        }\r\n    }\r\n    const validate_login_form = (values) => {\r\n        console.log(values);\r\n        const errors = {};\r\n        if (!values.email) errors.email = \"Email is required!\"\r\n        if (!values.password) errors.password = \"Password is required!\"\r\n        //if (!values.country_id) errors.country_id = \"Country is required!\"\r\n        console.log(errors);\r\n        return errors;\r\n    }\r\n    const handleSubmit = (values, { setSubmitting }) => {\r\n        PUBLIC_API.post('auth/login/', formLogin.values).then((res) => {\r\n            setSubmitting(false)\r\n            console.log('login response', res.data)\r\n            if (res.status == 200 && res.data.success == 'True') {\r\n              sessionStorage.setItem(TOKEN, res.data.token)\r\n              let expires_after = new Date()\r\n              sessionStorage.setItem('TOKEN', JSON.stringify({\r\n                time: new Date(expires_after.getFullYear(), expires_after.getMonth(), expires_after.getDate() + 2, expires_after.getUTCHours(), expires_after.getMinutes(), expires_after.getSeconds()),\r\n                data: res.data.token\r\n              }));\r\n              // sessionStorage.setItem('groups',JSON.parse(res.data.groups))\r\n              sessionStorage.setItem(USER_ID, res.data.user_id)\r\n              API.get('auth/permissions/all/').then((res) => {\r\n                console.log('permissions', res.data.data)\r\n                if (Array.from(res.data.data).length > 0) {\r\n                  sessionStorage.setItem(PERMISSIONS, res.data.data)\r\n                  history.push({ pathname: intended_route, state: { from: 'login' } })\r\n                }\r\n                else {\r\n                  sessionStorage.clear()\r\n                  swal('No Permissions', 'Please contact your admin', 'error')\r\n                }\r\n              })\r\n            }\r\n        }).catch(err => {\r\n            setSubmitting(false)\r\n            console.log(err)\r\n            if (err?.response?.data?.message) {\r\n              enqueueSnackbar(err.response.data.message, { variant: \"warning\" })\r\n            }\r\n            // if(err.response.status == 403){\r\n            //   enqueueSnackbar('Your account is not active yet',{variant:\"warning\"})\r\n            // }\r\n        })\r\n    };\r\n    const formLogin = useFormik({\r\n        initialValues: {\r\n        email: '',\r\n        password: ''\r\n        },\r\n        validateOnChange: true,\r\n        validateOnBlur: true,\r\n        validate: validate_login_form,\r\n        onSubmit: handleSubmit\r\n    })\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <Box\r\n            sx={{\r\n                marginTop: 8,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n            }}\r\n            >\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h4\">\r\n                Virtual Office\r\n            </Typography>\r\n            <Typography component=\"h1\" variant=\"h6\">\r\n                Sign in\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={formLogin.handleSubmit} noValidate sx={{ mt: 1 }}>\r\n                <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={formLogin.values.email}\r\n                onChange={formLogin.handleChange}\r\n                label=\"Email Address\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                />\r\n                <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"password\"\r\n                name=\"password\"\r\n                value={formLogin.values.password}\r\n                onChange={formLogin.handleChange}\r\n                onKeyPress={handleKeyPress}\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                />\r\n                {/* <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n                /> */}\r\n                <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n                // onClick={formLogin.handleSubmit}\r\n                disabled={!formLogin.isValid}\r\n                >\r\n                Sign In\r\n                </Button>\r\n                <Grid container>\r\n                <Grid item xs>\r\n                    <Link href=\"#/forgot-password\" variant=\"body2\">\r\n                    Forgot password?\r\n                    </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Link href=\"#/register\" variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                    </Link>\r\n                </Grid>\r\n                </Grid>\r\n            </Box>\r\n            </Box>\r\n            <Copyright sx={{ mt: 8, mb: 4 }} />\r\n        </Container>\r\n        </ThemeProvider>\r\n    );\r\n}"],"sourceRoot":""}