{"version":3,"sources":["pages/not-started/notStarted.js","../node_modules/lodash/_baseUniq.js","../node_modules/lodash/_arrayIncludes.js","../node_modules/lodash/_baseIndexOf.js","../node_modules/lodash/_baseFindIndex.js","../node_modules/lodash/_baseIsNaN.js","../node_modules/lodash/_strictIndexOf.js","../node_modules/lodash/_arrayIncludesWith.js","../node_modules/lodash/_createSet.js","../node_modules/lodash/noop.js","../node_modules/lodash/uniqBy.js"],"names":["NoWbs","useState","setNotStartedWBS","tdooptions","settdooptions","notstaredDetails","setnotstaredDetails","initialwbs","setinitialwbs","history","useHistory","selectedProject","setSelectedProject","fetchproject","setfetchproject","tdos","setTdos","projects","useSelector","state","e","Array","from","pm_projects","forEach","item","idx","push","filteredProjects","setfilteredProjects","filter_notStarted_by_projects","options","temp","console","log","find","value","index","length","index1","data","project","task_delivery_order","id","a","info","i","everyone","allassignees","name","sub_task","tdo","title","startDate","date_created","endDate","planned_delivery_date","total","Number","assignees","wbs","wbs_list","nowbspeople","taskTitle","task_title","j","assignee","first_name","last_name","itm","assi","initialWBSInfo","date_updated","description","estimated_person","planned_hours","planned_value","pm","remaining_hours","start_date","status","work_package_index","work_package_number","data_populate","React","useEffect","API","get","then","res","list","label","unshift","uniqBy","populateOption","lg","className","placeholder","searchable","isMulti","onChange","actionMeta","action","filter","map","onClick","type","size","pathname","task","SetCache","require","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","module","exports","array","iteratee","comparator","includes","isCommon","result","seen","set","outer","computed","seenIndex","baseIndexOf","baseFindIndex","baseIsNaN","strictIndexOf","fromIndex","predicate","fromRight","Set","noop","values","baseIteratee","baseUniq"],"mappings":"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","file":"static/js/30.798fbf8f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./notStarted.css\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CContainer,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport uniqBy from \"lodash/uniqBy\";\r\nimport sortBy from \"lodash/sortBy\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { API } from \"../../Config\";\r\n\r\nconst NoWbs = () => {\r\n  const [notStartedWBS, setNotStartedWBS] = useState([]);\r\n  const [tdooptions, settdooptions] = useState([]);\r\n  const [notstaredDetails, setnotstaredDetails] = useState([]);\r\n  const [initialwbs, setinitialwbs] = useState([]);\r\n  // const [myprojectDeatils, setmyProjectDetails] = useState([]);\r\n\r\n  const [wbsinfo, setwbsinfo] = useState([]);\r\n  let history = useHistory();\r\n  const [selectedProject, setSelectedProject] = useState([]);\r\n  const [options, setoptions] = useState();\r\n  const [fetchproject, setfetchproject] = useState([]);\r\n  const [tdos, setTdos] = useState([]);\r\n\r\n  const populateOption = (a) => {\r\n    //setmyProjectDetails(a)\r\n    let list = [];\r\n    for (let i = 0; i < a.length; i++) {\r\n      //console.log(\"aaaaaaaaaaaaaa\", a[i]);\r\n      list.push({\r\n        data: a[i],\r\n        label: a[i].project.task_delivery_order.title,\r\n        value: a[i].project.task_delivery_order.id,\r\n      });\r\n    }\r\n    list.unshift({\r\n      label: \"Select All\",\r\n      value: \"all\",\r\n      data: {},\r\n    });\r\n    console.log(\"list\", uniqBy(list, \"value\"));\r\n    setTdos(uniqBy(list, \"value\"));\r\n    settdooptions(uniqBy(list, \"value\"));\r\n\r\n    let info = [];\r\n\r\n    for (let i = 0; i < a.length; i++) {\r\n      let everyone = a[i].allassignees;\r\n\r\n      info.push({\r\n        data: a[i],\r\n        name: a[i].project.sub_task,\r\n        tdo: a[i].project.task_delivery_order.title,\r\n        id: a[i].project.task_delivery_order.id,\r\n        startDate: a[i].project.date_created,\r\n        endDate: a[i].project.planned_delivery_date,\r\n        allassignees: a[i].allassignees,\r\n        everyone: [],\r\n        total: Number(a[i].assignees.length),\r\n        assignees: a[i].assignees,\r\n        wbs: a[i].project.wbs_list.length,\r\n        nowbspeople: [],\r\n        taskTitle: a[i].project.task_title,\r\n      });\r\n      for (let j = 0; j < everyone.length; j++) {\r\n        //console.log(\"every\", everyone[j]);\r\n        let a =\r\n          everyone[j].assignee.first_name +\r\n          \" \" +\r\n          everyone[j].assignee.last_name;\r\n\r\n        info[i].everyone.push(a);\r\n      }\r\n      let itm = a[i].assignees;\r\n      for (let item = 0; item < itm.length; item++) {\r\n        let assi =\r\n          itm[item].assignee.first_name +\r\n          \" \" +\r\n          itm[item].assignee.last_name +\r\n          \",\";\r\n        info[i].nowbspeople.push(assi);\r\n      }\r\n    }\r\n    console.log(\"info array\", info);\r\n    setnotstaredDetails(info);\r\n    setfilteredProjects(info);\r\n    let initialWBSInfo = [];\r\n    for (let i = 0; i < a.length; i++) {\r\n      let assignees = a[i].allassignees;\r\n      initialWBSInfo.push({\r\n        assignees: a[i].allassignees,\r\n        date_created: a[i].project.date_created,\r\n        date_updated: a[i].project.date_updated,\r\n        description: a[i].project.description,\r\n        estimated_person: a[i].project.estimated_person,\r\n        id: a[i].project.id,\r\n        planned_delivery_date: a[i].project.planned_delivery_date,\r\n        planned_hours: a[i].project.planned_hours,\r\n        planned_value: a[i].project.planned_value,\r\n        pm: a[i].project.pm,\r\n        remaining_hours: a[i].project.remaining_hours,\r\n        start_date: a[i].project.start_date,\r\n        status: a[i].project.status,\r\n        sub_task: a[i].project.sub_task,\r\n        task_delivery_order: a[i].project.task_delivery_order,\r\n        task_title: a[i].project.task_title,\r\n        work_package_index: a[i].project.work_package_index,\r\n        work_package_number: a[i].project.work_package_number,\r\n      });\r\n    }\r\n    setinitialwbs(initialWBSInfo);\r\n    console.log(\"wbsinfoarray\", initialWBSInfo);\r\n  };\r\n\r\n  const data_populate = (a) => {\r\n    console.log(\"data passed\", a.length);\r\n    //setmyProjectDetails(a)\r\n    let info = [];\r\n    for (let i = 0; i < a.length; i++) {\r\n      let everyone = a[i].allassignees;\r\n      info.push({\r\n        data: a[i],\r\n        name: a[i].project.sub_task,\r\n        tdo: a[i].project.task_delivery_order.title,\r\n        id: a[i].project.task_delivery_order.id,\r\n        startDate: a[i].project.date_created,\r\n        endDate: a[i].project.planned_delivery_date,\r\n        allassignees: a[i].allassignees,\r\n        everyone: [],\r\n        total: Number(a[i].assignees.length),\r\n        assignees: a[i].assignees,\r\n        wbs: a[i].project.wbs_list.length,\r\n        nowbspeople: [],\r\n        taskTitle: a[i].project.task_title,\r\n      });\r\n      for (let j = 0; j < everyone.length; j++) {\r\n        let a =\r\n          everyone[j].assignee.first_name +\r\n          \" \" +\r\n          everyone[j].assignee.last_name;\r\n\r\n        info[i].everyone.push(a);\r\n      }\r\n      let itm = a[i].assignees;\r\n      for (let item = 0; item < itm.length; item++) {\r\n        let assi =\r\n          itm[item].assignee.first_name +\r\n          \" \" +\r\n          itm[item].assignee.last_name +\r\n          \",\";\r\n        info[i].nowbspeople.push(assi);\r\n      }\r\n    }\r\n    console.log(\"info array from populate\", info);\r\n    setfilteredProjects(info);\r\n    let initialWBSInfo = [];\r\n    for (let i = 0; i < a.length; i++) {\r\n      let assignees = a[i].allassignees;\r\n      initialWBSInfo.push({\r\n        assignees: a[i].allassignees,\r\n        date_created: a[i].project.date_created,\r\n        date_updated: a[i].project.date_updated,\r\n        description: a[i].project.description,\r\n        estimated_person: a[i].project.estimated_person,\r\n        id: a[i].project.id,\r\n        planned_delivery_date: a[i].project.planned_delivery_date,\r\n        planned_hours: a[i].project.planned_hours,\r\n        planned_value: a[i].project.planned_value,\r\n        pm: a[i].project.pm,\r\n        remaining_hours: a[i].project.remaining_hours,\r\n        start_date: a[i].project.start_date,\r\n        status: a[i].project.status,\r\n        sub_task: a[i].project.sub_task,\r\n        task_delivery_order: a[i].project.task_delivery_order,\r\n        task_title: a[i].project.task_title,\r\n        work_package_index: a[i].project.work_package_index,\r\n        work_package_number: a[i].project.work_package_number,\r\n      });\r\n    }\r\n    setinitialwbs(initialWBSInfo);\r\n    console.log(\"wbsinfoarray\", initialWBSInfo);\r\n  };\r\n\r\n  const projects = useSelector((state) => {\r\n    let e = [];\r\n    Array.from(state.projects.pm_projects).forEach((item, idx) => {\r\n      e.push(item);\r\n    });\r\n    //console.log(\"all Projects\", e);\r\n    return e;\r\n  });\r\n\r\n  const [projectDetails, setProjectDetails] = useState([projects]);\r\n  const [filteredProjects, setfilteredProjects] = useState(projects);\r\n\r\n  const filter_notStarted_by_projects = (options) => {\r\n    let temp = [];\r\n    console.log(\"filter\", options);\r\n    if (options.find((item) => item.value == \"all\")) {\r\n      temp.push(notstaredDetails);\r\n      console.log(\"temp all\", temp);\r\n    } else {\r\n      for (let index = 0; index < options.length; index++) {\r\n        for (let index1 = 0; index1 < notstaredDetails.length; index1++) {\r\n          if (\r\n            options[index].value ==\r\n            notstaredDetails[index1].data.project.task_delivery_order.id\r\n          ) {\r\n            console.log(\r\n              options[index].value,\r\n              \"matched! \",\r\n              notstaredDetails[index1].data.project.task_delivery_order.id\r\n            );\r\n\r\n            temp.push(notstaredDetails[index1].data);\r\n          }\r\n        }\r\n      }\r\n      console.log(\"filtered array\", temp);\r\n    }\r\n    // setfilteredProjects(temp);\r\n    // // populate_data(temp);\r\n    data_populate(temp);\r\n  };\r\n\r\n  const handleProjectChange = (value, actionMeta) => {\r\n    console.log(\"select \", value, \"action \", actionMeta);\r\n    if (actionMeta.action == \"select-option\") {\r\n      if (value.find((item) => item.value == \"all\")) {\r\n        filter_notStarted_by_projects(\r\n          tdooptions.filter((item) => item.value != \"all\")\r\n        );\r\n        setSelectedProject(tdooptions.filter((item) => item.value != \"all\"));\r\n        console.log(\"value\", value)\r\n      } else {\r\n        setSelectedProject(value);\r\n        console.log(\"value\", value)\r\n        filter_notStarted_by_projects(value);\r\n      }\r\n    } else if (actionMeta.action == \"clear\") {\r\n      setSelectedProject([]);\r\n      filter_notStarted_by_projects(\r\n        tdooptions.filter((item) => item.value != \"all\")\r\n      );\r\n    } else if (actionMeta.action == \"remove-value\") {\r\n      setSelectedProject(value);\r\n      if (value.length == 0) {\r\n        filter_notStarted_by_projects(\r\n          tdooptions.filter((item) => item.value != \"all\")\r\n        );\r\n      } else {\r\n        filter_notStarted_by_projects(value);\r\n      }\r\n    }\r\n  };\r\n  React.useEffect(()=>{\r\n    if (projects.length > 0 && fetchproject.length == 0) {\r\n      setfetchproject(projects);\r\n      //optionlist(projects);\r\n    }\r\n  },[projects])\r\n  React.useEffect(() => {\r\n    API.get(\"project/assignees-with-no-wbs/\").then((res) => {\r\n      let temp = [];\r\n      console.log(\"api response\", res.data.data);\r\n      for(let i =0;i<res.data.data.length;i++)\r\n      {\r\n        if(res.data.data[i].assignees.length != 0 )\r\n        {\r\n          console.log(\"length\", res.data.data[i].assignees.length)\r\n          temp.push(res.data.data[i])\r\n        }\r\n      }\r\n      console.log(\"temp\", temp)\r\n      setNotStartedWBS(temp);\r\n      populateOption(temp);\r\n    });\r\n\r\n    \r\n  }, []);\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol lg=\"9\"></CCol>\r\n        <CCol lg=\"3\" className=\"mb-3 pl-4\">\r\n          <Select\r\n            className=\"custom-forminput-6\"\r\n            placeholder=\"Filter by TDOs\"\r\n            searchable={true}\r\n            options={tdos}\r\n            isMulti\r\n            onChange={handleProjectChange}\r\n            value={selectedProject}\r\n          />\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <div className=\"main-holder-projects\">\r\n        <h3 className=\"projectsHeader\">\r\n          Project Wise WBS Details ({filteredProjects.length}){\" \"}\r\n        </h3>\r\n\r\n        <div className=\"card-holder1\">\r\n          <CRow>\r\n            {Array.from(filteredProjects).map((item, idx) => (\r\n              <CCol lg=\"4\" key={idx}>\r\n                <CCard className=\"project-card1\">\r\n                  {\" \"}\r\n                  {/* on card click project details card will show */}\r\n                  <CCardBody\r\n                    onClick={() => {\r\n                      //   history.push({\r\n                      //     pathname:\"/dashboard/Projects/my-projects/details/\"+\r\n                      //     myprojectDetails[idx].project.work_package_number,\r\n                      //     state: { project: myprojectDetails[idx] },\r\n                      // })\r\n                    }}\r\n                  >\r\n                    {/* <h6 className=\"id-no1\">Work Package Number: # {item.project.work_package_number}</h6> */}\r\n\r\n                    <h5 className=\"card-details1\">\r\n                      <span className=\"p-header-3\">\r\n                        <b>TDO: {item.tdo}</b>\r\n                      </span>{\" \"}\r\n                    </h5>\r\n                    <h5 className=\"card-details1\">\r\n                      <span className=\"p-header-3\">\r\n                        Project Name: {item.name}\r\n                      </span>{\" \"}\r\n                    </h5>\r\n                    <h5 className=\"card-details1\">\r\n                      <span className=\"p-header-3\">\r\n                        Task Title: {item.taskTitle}\r\n                      </span>{\" \"}\r\n                    </h5>\r\n\r\n                    <h5 className=\"card-details1\">\r\n                      <span className=\"p-header-3\">\r\n                        Planned Delivery Date: {item.endDate}\r\n                      </span>\r\n                    </h5>\r\n                    <h5 className=\"card-details1\">\r\n                      <span className=\"p-header-3\">\r\n                        Assignees :{\" \" + item.everyone}\r\n                        {/* {item.totalAssignee <= 1 &&\r\n                          Array.from(item.allAssignees).map(\r\n                            (i, index) =>\r\n                             \r\n                          )} */}\r\n                      </span>{\" \"}\r\n                    </h5>\r\n                    {/* <h5 className=\"card-details1\">\r\n                      <span className=\"p-header-3\">\r\n                        Total Created WBS : {item.wbs}\r\n                      </span>{\" \"}\r\n                    </h5> */}\r\n                    <h5 className=\"card-details1\">\r\n                      <span className=\"p-header-4\">\r\n                        Assignees with No WBS : {item.nowbspeople}\r\n                        {/* {Array.from(item.nowbsarray).forEach((i, idx)=> {\r\n                           \r\n                            i.assignee.first_name + \" \" + i.assignee.last_name\r\n                          })} */}\r\n                      </span>\r\n                    </h5>\r\n                  </CCardBody>\r\n                  <CCardFooter>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"create-wbs-from-modal float-right\"\r\n                      size=\"sm\"\r\n                      onClick={() => {\r\n                        history.push({\r\n                          pathname: \"/dashboard/WBS/create-wbs\",\r\n                          state: { task: initialwbs[idx] },\r\n                        });\r\n                      }}\r\n                    >\r\n                      Create WBS\r\n                    </Button>\r\n                  </CCardFooter>\r\n                </CCard>\r\n              </CCol>\r\n            ))}\r\n          </CRow>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default NoWbs;\r\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n"],"sourceRoot":""}