{"version":3,"sources":["../node_modules/@mui/material/LinearProgress/linearProgressClasses.js","../node_modules/@mui/material/LinearProgress/LinearProgress.js","pages/WBS-create/createWBS.js"],"names":["getLinearProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_t5","_t6","_excluded","indeterminate1Keyframe","keyframes","indeterminate2Keyframe","bufferKeyframe","getColorShade","theme","color","palette","mode","lighten","main","darken","LinearProgressRoot","styled","name","overridesResolver","props","styles","ownerState","root","capitalize","variant","_extends","position","overflow","display","height","zIndex","colorAdjust","backgroundColor","content","left","top","right","bottom","opacity","transform","LinearProgressDashed","dashed","marginTop","width","backgroundImage","backgroundSize","backgroundPosition","css","LinearProgressBar1","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","transition","transformOrigin","LinearProgressBar2","bar2Indeterminate","bar2Buffer","LinearProgress","React","inProps","ref","useThemeProps","className","value","valueBuffer","other","_objectWithoutPropertiesLoose","classes","slots","bar1","bar2","composeClasses","useUtilityClasses","useTheme","rootProps","inlineStyles","undefined","Math","round","direction","process","_jsxs","clsx","role","children","_jsx","style","CreateNewWBS","dispatch","useDispatch","location","useLocation","useState","assigneeList","setAssigneeList","taskList","setTaskList","projects","useSelector","state","temp","Array","from","data","forEach","item","idx","parseFloat","project","remaining_hours","push","id","label","sub_task","has_permission","pm_projects","find","ele","getTaskList","option","console","log","sortBy","temp_task_list","assignees","element","assignee","sessionStorage","getItem","USER_ID","selectProjectRef","useRef","selectAssigneRef","selectTaskTitleRef","selectedTask","setSelectedTask","selectedSubTask","setSelectedSubTask","selectedProjectEndDate","setSelectedProjectEndDate","getAssigneeList","fetchProjectsAssigneeThunk","work_package_index","temp_array","reset_form","formCreateWbs","resetForm","current","select","clearValue","useFormik","initialValues","work_package_number","reporter","title","description","start_date","end_date","hours_worked","status","progress","comments","deliverable","validateOnChange","validateOnBlur","validate","values","errors","Date","length","onSubmit","setSubmitting","JSON","stringify","API","post","then","res","success","fetchWbsThunk","fetchProjectsThunk","fetchProjectsForPMThunk","swal","catch","err","useEffect","task","all_projects","subtasks","set_selected_project","planned_delivery_date","setValues","options","onChange","newValue","actionMeta","action","touched","getOptionLabel","task_title","getOptionValue","planned_hours","handleChange","max","type","isMulti","assigneeArray","setFieldValue","first_name","last_name","isSubmitting","isValidating","onClick","handleSubmit"],"mappings":"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","file":"static/js/32.aa297493.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLinearProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiLinearProgress', slot);\n}\nconst linearProgressClasses = generateUtilityClasses('MuiLinearProgress', ['root', 'colorPrimary', 'colorSecondary', 'determinate', 'indeterminate', 'buffer', 'query', 'dashed', 'dashedColorPrimary', 'dashedColorSecondary', 'bar', 'barColorPrimary', 'barColorSecondary', 'bar1Indeterminate', 'bar1Determinate', 'bar1Buffer', 'bar2Indeterminate', 'bar2Buffer']);\nexport default linearProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4,\n    _t5,\n    _t6;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useTheme from '../styles/useTheme';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getLinearProgressUtilityClass } from './linearProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TRANSITION_DURATION = 4; // seconds\n\nconst indeterminate1Keyframe = keyframes(_t || (_t = _`\n  0% {\n    left: -35%;\n    right: 100%;\n  }\n\n  60% {\n    left: 100%;\n    right: -90%;\n  }\n\n  100% {\n    left: 100%;\n    right: -90%;\n  }\n`));\nconst indeterminate2Keyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    left: -200%;\n    right: 100%;\n  }\n\n  60% {\n    left: 107%;\n    right: -8%;\n  }\n\n  100% {\n    left: 107%;\n    right: -8%;\n  }\n`));\nconst bufferKeyframe = keyframes(_t3 || (_t3 = _`\n  0% {\n    opacity: 1;\n    background-position: 0 -23px;\n  }\n\n  60% {\n    opacity: 0;\n    background-position: 0 -23px;\n  }\n\n  100% {\n    opacity: 1;\n    background-position: -200px -23px;\n  }\n`));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, variant],\n    dashed: ['dashed', `dashedColor${capitalize(color)}`],\n    bar1: ['bar', `barColor${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar1Indeterminate', variant === 'determinate' && 'bar1Determinate', variant === 'buffer' && 'bar1Buffer'],\n    bar2: ['bar', variant !== 'buffer' && `barColor${capitalize(color)}`, variant === 'buffer' && `color${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar2Indeterminate', variant === 'buffer' && 'bar2Buffer']\n  };\n  return composeClasses(slots, getLinearProgressUtilityClass, classes);\n};\n\nconst getColorShade = (theme, color) => {\n  if (color === 'inherit') {\n    return 'currentColor';\n  }\n\n  return theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.5);\n};\n\nconst LinearProgressRoot = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`], styles[ownerState.variant]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'block',\n  height: 4,\n  zIndex: 0,\n  // Fix Safari's bug during composition of different paint.\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  backgroundColor: getColorShade(theme, ownerState.color)\n}, ownerState.color === 'inherit' && ownerState.variant !== 'buffer' && {\n  backgroundColor: 'none',\n  '&::before': {\n    content: '\"\"',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'currentColor',\n    opacity: 0.3\n  }\n}, ownerState.variant === 'buffer' && {\n  backgroundColor: 'transparent'\n}, ownerState.variant === 'query' && {\n  transform: 'rotate(180deg)'\n}));\nconst LinearProgressDashed = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Dashed',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.dashed, styles[`dashedColor${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => {\n  const backgroundColor = getColorShade(theme, ownerState.color);\n  return _extends({\n    position: 'absolute',\n    marginTop: 0,\n    height: '100%',\n    width: '100%'\n  }, ownerState.color === 'inherit' && {\n    opacity: 0.3\n  }, {\n    backgroundImage: `radial-gradient(${backgroundColor} 0%, ${backgroundColor} 16%, transparent 42%)`,\n    backgroundSize: '10px 10px',\n    backgroundPosition: '0 -23px'\n  });\n}, css(_t4 || (_t4 = _`\n    animation: ${0} 3s infinite linear;\n  `), bufferKeyframe));\nconst LinearProgressBar1 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar1',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar1Indeterminate, ownerState.variant === 'determinate' && styles.bar1Determinate, ownerState.variant === 'buffer' && styles.bar1Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : theme.palette[ownerState.color].main\n}, ownerState.variant === 'determinate' && {\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}, ownerState.variant === 'buffer' && {\n  zIndex: 1,\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t5 || (_t5 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n    `), indeterminate1Keyframe));\nconst LinearProgressBar2 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar2',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar2Indeterminate, ownerState.variant === 'buffer' && styles.bar2Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left'\n}, ownerState.variant !== 'buffer' && {\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : theme.palette[ownerState.color].main\n}, ownerState.color === 'inherit' && {\n  opacity: 0.3\n}, ownerState.variant === 'buffer' && {\n  backgroundColor: getColorShade(theme, ownerState.color),\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t6 || (_t6 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;\n    `), indeterminate2Keyframe));\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLinearProgress'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    value,\n    valueBuffer,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const theme = useTheme();\n  const rootProps = {};\n  const inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      let transform = value - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar1.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      let transform = (valueBuffer || 0) - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar2.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(LinearProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other, {\n    children: [variant === 'buffer' ? /*#__PURE__*/_jsx(LinearProgressDashed, {\n      className: classes.dashed,\n      ownerState: ownerState\n    }) : null, /*#__PURE__*/_jsx(LinearProgressBar1, {\n      className: classes.bar1,\n      ownerState: ownerState,\n      style: inlineStyles.bar1\n    }), variant === 'determinate' ? null : /*#__PURE__*/_jsx(LinearProgressBar2, {\n      className: classes.bar2,\n      ownerState: ownerState,\n      style: inlineStyles.bar2\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default LinearProgress;","import { CContainer, CRow, CCol, CCard, CCardHeader, CCardBody, CForm, CLabel, CInput, CButton, CSelect, CTextarea, CAlert } from '@coreui/react';\r\nimport React, { useState, useRef, useEffect } from 'react'\r\nimport './createWBS.css'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchProjectsThunk, fetchProjectsAssigneeThunk, createWbsThunk, fetchWbsThunk, fetchProjectsForPMThunk } from '../../store/slices/ProjectsSlice';\r\nimport Select from \"react-select\";\r\nimport { API, USER_ID } from '../../Config';\r\nimport { useFormik } from 'formik';\r\nimport swal from 'sweetalert'\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport sortBy from 'lodash/sortBy';\r\nimport { has_permission } from '../../helper.js';\r\nimport { useLocation } from 'react-router-dom';\r\nimport store from '../../store/Store'\r\n\r\nconst CreateNewWBS = () => {\r\n    const dispatch = useDispatch()\r\n    let location = useLocation()\r\n    const remaining_hours = (remaining, total) => {\r\n        return String(parseFloat(total) - parseFloat(remaining))\r\n    }\r\n    \r\n    // const [projects,setProjects] = useState([])\r\n    const [assigneeList, setAssigneeList] = useState([])\r\n    const [taskList, setTaskList] = useState([])\r\n\r\n    const projects = useSelector(state=>{\r\n        let temp = []\r\n        \r\n        Array.from(state.projects.data).forEach((item, idx) => {\r\n            // console.log('remaining hours ', remaining_hours(item.project.remaining_hours, item.project.planned_hours))\r\n            if (parseFloat(item.project.remaining_hours) > 0) {\r\n                temp.push({\r\n                    value: item.project.id,\r\n                    label: item.project.sub_task,\r\n                    data: item\r\n                })\r\n            }\r\n        })\r\n        if (has_permission(\"projects.add_projects\")) {\r\n            Array.from(state.projects.pm_projects).forEach((item, idx) => {\r\n                if (parseFloat(item.project.remaining_hours) > 0) {\r\n                    // console.log(tempitem.label === item.project.sub_task))\r\n                    if (!temp.find(ele => ele.label === item.project.sub_task)){\r\n                        temp.push({\r\n                            value: item.project.id,\r\n                            label: item.project.sub_task,\r\n                            data: item\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        // console.log(\"get project list: \", temp)\r\n        return temp\r\n    })\r\n    //fetcing projects from store\r\n    const getProjectList=()=>{\r\n        let temp = []\r\n        console.log('projects',store.getState().projects.data)\r\n        Array.from(store.getState().projects.data).forEach((item, idx) => {\r\n            // console.log('remaining hours ', remaining_hours(item.project.remaining_hours, item.project.planned_hours))\r\n            if (parseFloat(item.project.remaining_hours) > 0) {\r\n                temp.push({\r\n                    value: item.project.id,\r\n                    label: item.project.sub_task,\r\n                    data: item\r\n                })\r\n            }\r\n        })\r\n        if (has_permission(\"projects.add_projects\")) {\r\n            Array.from(store.getState().projects.pm_projects).forEach((item, idx) => {\r\n                if (parseFloat(item.project.remaining_hours) > 0) {\r\n                    // console.log(tempitem.label === item.project.sub_task))\r\n                    if (!temp.find(ele => ele.label === item.project.sub_task)){\r\n                        temp.push({\r\n                            value: item.project.id,\r\n                            label: item.project.sub_task,\r\n                            data: item\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        // console.log(\"get project list: \", temp)\r\n        // return temp\r\n        // setProjects(temp)\r\n    }\r\n\r\n    const getTaskList = (option) => {\r\n        console.log(\"task list###########: \", option)\r\n        if (!has_permission(\"projects.add_projects\")) {\r\n            var temp_task_list = []\r\n            option.forEach(item => {\r\n                item.assignees.forEach(element => {\r\n                    console.log(element.assignee.id)\r\n                    if(element.assignee.id == sessionStorage.getItem(USER_ID)){\r\n                        temp_task_list.push(item)\r\n                    }\r\n                })\r\n            })\r\n            setTaskList(sortBy(temp_task_list, 'task_title'));\r\n        } else {\r\n            setTaskList(sortBy(option, 'task_title'));\r\n        }\r\n    }\r\n\r\n    const selectProjectRef = useRef();\r\n    const selectAssigneRef = useRef();\r\n    const selectTaskTitleRef = useRef();\r\n\r\n    const [selectedTask, setSelectedTask] = useState(null)\r\n    const [selectedSubTask,setSelectedSubTask]=useState({})\r\n    const [selectedProjectEndDate, setSelectedProjectEndDate] = useState('')\r\n    \r\n    const getAssigneeList = (option) => {\r\n        dispatch(fetchProjectsAssigneeThunk(option?.work_package_index))\r\n        var temp_array = []\r\n        option.assignees.forEach(item => {\r\n            temp_array.push(item.assignee)\r\n        })\r\n        setAssigneeList(sortBy(temp_array, 'first_name'))\r\n        console.log(\"assignees\", option)\r\n    }\r\n\r\n    const handleProjectChange = (newValue, actionMeta) => {\r\n        console.log(`action: ${actionMeta.action}`);\r\n        console.log(\"newValue: \", newValue);\r\n        if (actionMeta.action == 'select-option') {\r\n            // getAssigneeList(newValue);\r\n            setSelectedSubTask(newValue)\r\n            getTaskList(newValue.data.subtasks);\r\n            formCreateWbs.setValues({\r\n                project: newValue.data.project.id,\r\n                work_package_number: newValue.data.project.work_package_number,\r\n                assignee: formCreateWbs.values.assignee,\r\n                reporter: sessionStorage.getItem(USER_ID),\r\n                title: formCreateWbs.values.title,\r\n                description: formCreateWbs.values.description,\r\n                start_date: formCreateWbs.values.start_date,\r\n                end_date: formCreateWbs.values.end_date,\r\n                hours_worked: formCreateWbs.values.hours_worked,\r\n                status: formCreateWbs.values.status,\r\n                progress: formCreateWbs.values.progress,\r\n                comments: formCreateWbs.values.comments,\r\n                deliverable: formCreateWbs.values.deliverable\r\n            })\r\n        }\r\n        else if (actionMeta.action == 'clear') {\r\n            setSelectedSubTask(null)\r\n        }\r\n    };\r\n\r\n    const handleAssigneeChange = (value, actionMeta) => {\r\n        let assigneeArray = []\r\n        value.forEach(item => {\r\n            assigneeArray.push(item.id)\r\n        })\r\n        formCreateWbs.setFieldValue('assignee', assigneeArray)\r\n    }\r\n\r\n    // form validation for WBS create\r\n    const is_before_start_date = (start_date, end_date) => {\r\n        // console.log('start date', new Date(start_date))\r\n        // console.log('end date', new Date(end_date))\r\n        return new Date(end_date) < new Date(start_date)\r\n    }\r\n\r\n    const validate_create_wbs_form = (values) => {\r\n        const errors = {}\r\n        if (!values.project) errors.project = \"Project is required\"\r\n        if (!values.title) errors.title = \"Title is required\"\r\n        if (!values.start_date) errors.start_date = \"Start date is required\"\r\n        if (!values.end_date) errors.end_date = \"End date is required\"\r\n        if (values.start_date && is_before_start_date(values.start_date, values.end_date)) errors.end_date = \"End date can not be past from start date\"\r\n        if (values.assignee.length < 1) errors.assignee = \"Assignee is required\"\r\n        return errors\r\n    }\r\n\r\n    //   create wbs method \r\n    const create_wbs = (values, { setSubmitting }) => {\r\n        console.log('values', JSON.stringify(formCreateWbs.values))\r\n        API.post('wbs/create/', formCreateWbs.values).then((res) => {\r\n            // setSubmitting(false)\r\n            console.log(res)\r\n            if (res.status === 200 && res.data.success === 'True') {\r\n                reset_form()\r\n                setTaskList([])\r\n                dispatch(fetchWbsThunk(sessionStorage.getItem(USER_ID)))\r\n                dispatch(fetchProjectsThunk(sessionStorage.getItem(USER_ID)))\r\n                dispatch(fetchProjectsForPMThunk(sessionStorage.getItem(USER_ID)))\r\n                swal('Created!', 'Successfuly Created', 'success')\r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n            setSubmitting(false)\r\n        })\r\n    }\r\n\r\n    // form reset method \r\n    const reset_form = () => {\r\n        formCreateWbs.resetForm()\r\n        selectProjectRef.current.select.clearValue();\r\n        selectAssigneRef.current.select.clearValue();\r\n        selectTaskTitleRef.current.select.clearValue();\r\n        setAssigneeList([])\r\n    }\r\n\r\n    // use formic for create WBS\r\n    const formCreateWbs = useFormik({\r\n        initialValues: {\r\n            project: \"\",\r\n            work_package_number: \"\",\r\n            assignee: [],\r\n            reporter: sessionStorage.getItem(USER_ID),\r\n            title: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            hours_worked: \"0\",\r\n            status: \"1\",\r\n            progress: \"0\",\r\n            comments: \"\",\r\n            deliverable: \"\"\r\n        },\r\n        validateOnChange: true,\r\n        validateOnBlur: true,\r\n        validate: validate_create_wbs_form,\r\n        onSubmit: create_wbs\r\n    })\r\n\r\n    const handleTaskTitleChange = (newValue, actionMeta) => {\r\n        if (newValue != null){\r\n            getAssigneeList(newValue);\r\n            setSelectedTask(newValue);\r\n            setSelectedProjectEndDate(newValue?.planned_delivery_date)\r\n        }\r\n        if (actionMeta.action == 'select-option') {\r\n            formCreateWbs.setValues({\r\n                project: newValue.id,\r\n                work_package_number: formCreateWbs.values.work_package_number,\r\n                assignee: formCreateWbs.values.assignee,\r\n                reporter: sessionStorage.getItem(USER_ID),\r\n                title: formCreateWbs.values.title,\r\n                description: formCreateWbs.values.description,\r\n                start_date: formCreateWbs.values.start_date,\r\n                end_date: formCreateWbs.values.end_date,\r\n                hours_worked: formCreateWbs.values.hours_worked,\r\n                status: formCreateWbs.values.status,\r\n                progress: formCreateWbs.values.progress,\r\n                comments: formCreateWbs.values.comments,\r\n                deliverable: formCreateWbs.values.deliverable\r\n            })\r\n        }\r\n    }\r\n\r\n    function is_form_submitting() {\r\n        // console.log(formCreateWbs.isSubmitting, formCreateWbs.isValidating)\r\n        if (formCreateWbs.isSubmitting && !formCreateWbs.isValidating) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    function set_selected_project(sub_task){\r\n        let all_projects = projects\r\n        console.log('projects',projects)\r\n        all_projects.forEach((item,idx)=>{\r\n            if(item.label == sub_task){\r\n                setSelectedSubTask(item)\r\n                getTaskList(item.data.subtasks)\r\n            }\r\n        })\r\n    }\r\n    \r\n    React.useEffect(()=>{\r\n        if(location.state?.task){\r\n            let task = location.state.task\r\n            console.log('location data if block',task)\r\n            set_selected_project(task.sub_task)\r\n            setSelectedTask(task)\r\n            getAssigneeList(task)\r\n            setSelectedProjectEndDate(task.planned_delivery_date)\r\n\r\n            formCreateWbs.setValues({\r\n                project: task.id,\r\n                work_package_number: task.work_package_number,\r\n                assignee: formCreateWbs.values.assignee,\r\n                reporter: sessionStorage.getItem(USER_ID),\r\n                title: formCreateWbs.values.title,\r\n                description: formCreateWbs.values.description,\r\n                start_date: formCreateWbs.values.start_date,\r\n                end_date: formCreateWbs.values.end_date,\r\n                hours_worked: formCreateWbs.values.hours_worked,\r\n                status: formCreateWbs.values.status,\r\n                progress: formCreateWbs.values.progress,\r\n                comments: formCreateWbs.values.comments,\r\n                deliverable: formCreateWbs.values.deliverable\r\n            })\r\n        }\r\n        else{\r\n            \r\n        }\r\n    },[])\r\n   \r\n    return (\r\n        <>\r\n            <CContainer>\r\n                <CRow>\r\n                    <div className=\"col-md-8 offset-md-2 col-sm-12\">\r\n                        <CCard className=\"custom-wbs-card-1\">\r\n                            <CCardHeader className=\"project-wbs-1\"> <h4 className=\"section-name-wbscreate\">Create a WBS</h4>\r\n                            </CCardHeader>\r\n                            <CCardBody>\r\n                                <CContainer>\r\n                                    <CForm>\r\n                                        <CRow>\r\n                                            {/**project name */}\r\n                                            <div className=\"col-lg-12 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    Select Project\r\n                                                </CLabel>\r\n                                                <Select\r\n                                                    id=\"project\"\r\n                                                    options={projects}\r\n                                                    // getOptionLabel={option => option.task_delivery_order + \" / \" + option.sub_task}\r\n                                                    // getOptionValue={option => option.id}\r\n                                                    value={selectedSubTask}\r\n                                                    onChange={handleProjectChange}\r\n                                                    ref={selectProjectRef}\r\n                                                />\r\n                                                {formCreateWbs.touched.project && formCreateWbs.errors.project && <small style={{ color: 'red' }}>{formCreateWbs.errors.project}</small>}\r\n                                            </div>\r\n                                            {/* {selectedTask != null ?\r\n                                                <div className=\"col-lg-12 mb-3\">\r\n                                                    <CAlert color=\"primary\">\r\n                                                        <small>\r\n                                                            <b>Planned Delivery Date: </b> {selectedTask.data.project.planned_delivery_date}\r\n                                                            <br />\r\n                                                            <b>Planned Hours: </b> {selectedTask.data.project.planned_hours}\r\n                                                            <br />\r\n                                                            <b>Remaining Hours: </b> {selectedTask.data.project.remaining_hours}\r\n                                                        </small>\r\n                                                    </CAlert>\r\n                                                </div> :\r\n                                                <></>\r\n                                            } */}\r\n                                            {/**task title */}\r\n                                            <div className=\"col-lg-12 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    Task Title\r\n                                                </CLabel>\r\n                                                <Select\r\n                                                    id=\"task_title\"\r\n                                                    options={taskList}\r\n                                                    getOptionLabel={option => option.task_title}\r\n                                                    getOptionValue={option => option.id}\r\n                                                    onChange={handleTaskTitleChange}\r\n                                                    value={selectedTask}\r\n                                                    ref={selectTaskTitleRef}\r\n                                                />\r\n                                                {formCreateWbs.touched.task_title && formCreateWbs.errors.task_title && <small style={{ color: 'red' }}>{formCreateWbs.errors.task_title}</small>}\r\n                                            </div>\r\n                                            {selectedTask != null ?\r\n                                                <div className=\"col-lg-12 mb-3\">\r\n                                                    <CAlert color=\"primary\">\r\n                                                        <small>\r\n                                                            <b>Planned Delivery Date: </b> {selectedTask.planned_delivery_date}\r\n                                                            <br />\r\n                                                            <b>Planned Hours: </b> {selectedTask.planned_hours}\r\n                                                            <br />\r\n                                                            <b>Remaining Hours: </b> {selectedTask.remaining_hours}\r\n                                                            <br />\r\n                                                            <b>Task details: </b> {selectedTask.description}\r\n                                                        </small>\r\n                                                    </CAlert>\r\n                                                </div> :\r\n                                                <></>\r\n                                            }\r\n                                            {/**wbs title */}\r\n                                            <div className=\"col-lg-12 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    WBS Title\r\n                                                </CLabel>\r\n                                                {/* onChange={setWbsTitle} */}\r\n                                                <CInput id=\"title\" name=\"title\" value={formCreateWbs.values.title} onChange={formCreateWbs.handleChange} className=\"custom-forminput-6\"></CInput>\r\n                                                {formCreateWbs.touched.title && formCreateWbs.errors.title && <small style={{ color: 'red' }}>{formCreateWbs.errors.title}</small>}\r\n                                            </div>\r\n                                            {/**WBS description */}\r\n                                            <div className=\"col-lg-12 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    Description\r\n                                                </CLabel>\r\n                                                {/* onChange={setWbsDetails} */}\r\n                                                <CTextarea id=\"description\" name=\"description\" value={formCreateWbs.values.description} onChange={formCreateWbs.handleChange} className=\"custom-forminput-6\"></CTextarea>\r\n                                            </div>\r\n                                            {/**Start date */}\r\n                                            <div className=\"col-lg-6 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    Start date\r\n                                                </CLabel>\r\n                                                {/* onChange={setWbsStartDate} */}\r\n                                                <CInput max={selectedProjectEndDate} type=\"date\" id=\"start_date\" name=\"start_date\" value={formCreateWbs.values.start_date} onChange={formCreateWbs.handleChange} className=\"custom-forminput-6\"></CInput>\r\n                                                {formCreateWbs.touched.start_date && formCreateWbs.errors.start_date && <small style={{ color: 'red' }}>{formCreateWbs.errors.start_date}</small>}\r\n                                            </div>\r\n                                            {/**End date */}\r\n                                            <div className=\"col-lg-6 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    End date\r\n                                                </CLabel>\r\n                                                {/* onChange={setWbsEndDate} */}\r\n                                                <CInput max={selectedProjectEndDate} type=\"date\" id=\"end_date\" name=\"end_date\" value={formCreateWbs.values.end_date} onChange={formCreateWbs.handleChange} className=\"custom-forminput-6\"></CInput>\r\n                                                {formCreateWbs.touched.end_date && formCreateWbs.errors.end_date && <small style={{ color: 'red' }}>{formCreateWbs.errors.end_date}</small>}\r\n\r\n                                            </div>\r\n                                            {/**Assignees */}\r\n                                            <div className=\"col-lg-12 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    Assignee(s)\r\n                                                </CLabel>\r\n                                                <Select className=\"custom-forminput-6\"\r\n                                                    ref={selectAssigneRef}\r\n                                                    options={assigneeList}\r\n                                                    isMulti\r\n                                                    onChange={handleAssigneeChange}\r\n                                                    getOptionLabel={option => option.first_name + \" \" + option.last_name}\r\n                                                    getOptionValue={option => option.id}\r\n                                                />\r\n                                                {formCreateWbs.touched.assignee && formCreateWbs.errors.assignee && <small style={{ color: 'red' }}>{formCreateWbs.errors.assignee}</small>}\r\n                                            </div>\r\n                                            {/**submit buttons */}\r\n                                            <div className=\"col-md-12\">{is_form_submitting() == true ? <LinearProgress /> :\r\n                                                <div className=\"projectwbs-form-button-holders mt-3\">\r\n                                                    <CButton type=\"button\" onClick={formCreateWbs.handleSubmit} className=\"create-btn-prjctwbs create-wbs\">Create WBS</CButton>\r\n                                                    <CButton type=\"button\" onClick={reset_form} className=\"create-btn-prjctwbs cancel-wbs\">Cancel</CButton>\r\n                                                </div>}\r\n                                            </div>\r\n                                        </CRow>\r\n                                    </CForm>\r\n                                </CContainer>\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </div>\r\n                </CRow>\r\n            </CContainer>\r\n        </>\r\n    )\r\n}\r\nexport default CreateNewWBS;"],"sourceRoot":""}