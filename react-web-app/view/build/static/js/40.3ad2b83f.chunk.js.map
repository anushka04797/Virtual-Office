{"version":3,"sources":["pages/timecards/SubmittedTimecards.js"],"names":["SubmittedTimecards","profile_details","useSelector","state","profile","data","submitted_timecards","temp","Array","from","timecardList","user_weekly_submitted_timecards","forEach","item","idx","push","moment","week_end","format","employee","first_name","last_name","total_hours","RHR","SIC","HOL","WFH","OTO","submitted_at","dispatch","useDispatch","React","useEffect","fetchUserSubmittedTimecards","className","md","id","onClick","name","htmlFor","slc_details","slc","department","company","capitalize","items","fields","key","_style","width","_classes","sorter","itemsPerPage","pagination","striped","bordered"],"mappings":"oHAAA,wGA2IeA,UAlIY,WAAO,IAAD,QACzBC,EAAkBC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQC,QACvDC,EAAsBJ,aAAY,SAAAC,GACtC,IAAII,EAAO,GAIX,OAHAC,MAAMC,KAAKN,EAAMO,aAAaC,iCAAiCC,SAAQ,SAACC,EAAMC,GAC5EP,EAAKQ,KAAK,CAAE,WAAcC,IAAOH,EAAKI,UAAUC,OAAO,sBAAuB,KAAQL,EAAKM,SAASC,WAAa,IAAMP,EAAKM,SAASE,UAAW,MAASR,EAAKS,YAAa,IAAmB,MAAZT,EAAKU,IAAc,IAAMV,EAAKU,IAAK,IAAmB,MAAZV,EAAKW,IAAc,IAAMX,EAAKW,IAAK,IAAmB,MAAZX,EAAKY,IAAc,IAAMZ,EAAKY,IAAK,IAAmB,MAAZZ,EAAKa,IAAc,IAAMb,EAAKa,IAAK,IAAmB,MAAZb,EAAKc,IAAc,IAAMd,EAAKc,IAAK,IAAsB,MAAfd,EAAI,IAAkB,IAAMA,EAAI,IAAS,UAAaG,IAAOH,EAAKe,cAAcV,OAAO,sBAAwB,OAASF,IAAOH,EAAKe,cAAcV,OAAO,aAExhBX,KAEHsB,EAAWC,cAiBjB,OAHAC,IAAMC,WAAU,WACdH,EAASI,iBACR,IAED,mCACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,oBAAIC,UAAU,6BAAd,mCAEF,eAAC,IAAD,CACEC,GAAG,IACHC,GAAG,WACHF,UAAU,6BAHZ,UAKE,oBAAIA,UAAU,2BAAd,qBACA,sBAAKA,UAAU,4BAAf,UACE,eAAC,IAAD,CACEA,UAAU,uBACVG,QAAS,aAFX,UAIE,cAAC,IAAD,CAAOC,KAAK,kBAAkBJ,UAAU,SAJ1C,UAMA,eAAC,IAAD,CACEA,UAAU,uBACVG,QAAS,aAFX,UAIE,cAAC,IAAD,CAAOC,KAAK,kBAAkBJ,UAAU,SAJ1C,oBAYR,cAAC,IAAD,CAAMA,UAAU,OAAhB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAQA,UAAU,iBAAiBK,QAAQ,iBAA3C,iCACatC,EAAgBuC,mBAD7B,iBACa,EAA6BC,WAD1C,iBACa,EAAkCC,kBAD/C,iBACa,EAA8CC,eAD3D,aACa,EAAuDL,YAKxE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAQJ,UAAU,iBAAiBK,QAAQ,iBAA3C,4BACkB,IACfK,YAAW3C,EAAgBmB,YAC1B,IACAwB,YAAW3C,EAAgBoB,kBAInC,cAAC,IAAD,CAAMa,UAAU,OAAhB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEW,MAAOvC,EACPwC,OAAQ,CACN,CACEC,IAAK,aACLC,OAAQ,CAAEC,MAAO,OACjBC,SAAU,oBAEZ,OACA,QACA,CACEH,IAAK,MACLI,QAAQ,GAEV,CACEJ,IAAK,MACLI,QAAQ,GAEV,CACEJ,IAAK,MACLI,QAAQ,GAEV,CACEJ,IAAK,MACLI,QAAQ,GAEV,CACEJ,IAAK,MACLI,QAAQ,GAEV,CACEJ,IAAK,MACLI,QAAQ,GAEV,CACEJ,IAAK,YACLI,QAAQ,IAGZC,aAAc,GACdC,YAAU,EACVC,SAAO,EACPC,UAAQ,EACRJ,QAAM,e","file":"static/js/40.3ad2b83f.chunk.js","sourcesContent":["import { CContainer, CRow, CCol, CDataTable, CLabel,CButton } from '@coreui/react'\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { capitalize } from '../../helper';\r\nimport moment from \"moment\";\r\nimport \"./timeCards.css\";\r\nimport { fetchUserSubmittedTimecards } from '../../store/slices/TimecardSlice';\r\n\r\nconst SubmittedTimecards = () => {\r\n  const profile_details = useSelector((state) => state.profile.data);\r\n  const submitted_timecards = useSelector(state => {\r\n    let temp = []\r\n    Array.from(state.timecardList.user_weekly_submitted_timecards).forEach((item, idx) => {\r\n      temp.push({ 'Weekending': moment(item.week_end).format('ddd, MMMM DD, YYYY'), 'Name': item.employee.first_name + ' ' + item.employee.last_name, 'Total': item.total_hours, 'RHR': item.RHR == null ? '-' : item.RHR, 'SIC': item.SIC == null ? '-' : item.SIC, 'HOL': item.HOL == null ? '-' : item.HOL, 'WFH': item.WFH == null ? '-' : item.WFH, 'OTO': item.OTO == null ? '-' : item.OTO, 'PB1': item['PB1'] == null ? '-' : item['PB1'], 'Submitted': moment(item.submitted_at).format('ddd, MMMM DD, YYYY') + ' at ' + moment(item.submitted_at).format('h:mm') })\r\n    })\r\n    return temp\r\n  })\r\n  const dispatch = useDispatch()\r\n  const nextSatDay = () => {\r\n    var satday = new Date();\r\n    for (let i = 0; i < 7; i++) {\r\n      if (satday.getDay() === 6) {\r\n        console.log(\"sat\", satday);\r\n        break;\r\n      } else {\r\n        satday = moment(satday).add(1, \"day\").toDate();\r\n      }\r\n    }\r\n    satday = moment(satday).format('YYYY-MM-DD')\r\n    return satday;\r\n  };\r\n  React.useEffect(() => {\r\n    dispatch(fetchUserSubmittedTimecards())\r\n  }, [])\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow>\r\n          <CCol>\r\n            <h3 className=\"timecards-page-header mb-3\">Submitted Timecards</h3>\r\n          </CCol>\r\n          <CCol\r\n            md=\"8\"\r\n            id=\"tableRef\"\r\n            className=\"d-flex justify-content-end\"\r\n          >\r\n            <h5 className=\"tiny-header--5 mt-3 mr-2\">Export </h5>\r\n            <div className=\"format-buttons mt-3 mb-3 \">\r\n              <CButton\r\n                className=\"file-format-download\"\r\n                onClick={() => {}}\r\n              >\r\n                <CIcon name=\"cil-description\" className=\"mr-2\" /> PDF\r\n              </CButton>\r\n              <CButton\r\n                className=\"file-format-download\"\r\n                onClick={() =>{}}\r\n              >\r\n                <CIcon name=\"cil-spreadsheet\" className=\"mr-2\" />\r\n                Excel\r\n              </CButton>\r\n              {/* <CButton className=\"file-format-download\">Print</CButton> */}\r\n            </div>\r\n          </CCol>\r\n        \r\n      </CRow>\r\n      <CRow className=\"mt-4\">\r\n        <CCol>\r\n          <CLabel className=\"custom-label-5\" htmlFor=\"assigneeSelect\">\r\n            Company : {profile_details.slc_details?.slc?.department?.company?.name}\r\n\r\n          </CLabel>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol>\r\n          <CLabel className=\"custom-label-5\" htmlFor=\"assigneeSelect\">\r\n            Employee Name :{\" \"}\r\n            {capitalize(profile_details.first_name) +\r\n              \" \" +\r\n              capitalize(profile_details.last_name)}\r\n          </CLabel>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mt-5\">\r\n        <CCol>\r\n          <CDataTable\r\n            items={submitted_timecards}\r\n            fields={[\r\n              {\r\n                key: \"Weekending\",\r\n                _style: { width: \"15%\" },\r\n                _classes: \"font-weight-bold\",\r\n              },\r\n              \"Name\",\r\n              \"Total\",\r\n              {\r\n                key: \"RHR\",\r\n                sorter: false\r\n              },\r\n              {\r\n                key: \"SIC\",\r\n                sorter: false\r\n              },\r\n              {\r\n                key: \"HOL\",\r\n                sorter: false\r\n              },\r\n              {\r\n                key: \"PB1\",\r\n                sorter: false\r\n              },\r\n              {\r\n                key: \"WFH\",\r\n                sorter: false\r\n              },\r\n              {\r\n                key: \"OTO\",\r\n                sorter: false\r\n              },\r\n              {\r\n                key: \"Submitted\",\r\n                sorter: false\r\n              }\r\n            ]}\r\n            itemsPerPage={10}\r\n            pagination\r\n            striped\r\n            bordered\r\n            sorter\r\n          />\r\n        </CCol>\r\n      </CRow>\r\n    </CContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SubmittedTimecards"],"sourceRoot":""}