{"version":3,"sources":["pages/timecards/timeCard.js","../node_modules/lodash/orderBy.js","pages/timecards/addTimecardItem.js","pages/timecards/Edit.js"],"names":["TimeCards","profile_details","useSelector","state","profile","data","useState","selectedAssignee","setSelectedAssignee","useDispatch","usersData","setUsersData","pdfData","setPdfData","setPdfTitle","location","useLocation","assigneeList","setAssigneeList","non_submitted_total_tc","setNonSubmittedTotalTC","startDate","setStartDate","endDate","setEndDate","totalHrs","setTotalHrs","setModalData","row","setRow","get_assignee_tc","assignee","console","log","dateRange","start","end","first_name","last_name","API","get","id","then","res","temp","Array","from","forEach","item","idx","push","filteredData","filter","p","date_updated","tableData","hours_total","total_not_submitted","index","length","submitted","element","parseFloat","hours_today","WP","project","work_package_number","sub_task","task_title","Description","actual_work_done","Type","time_type","date_created","orderBy","capitalize","string","undefined","charAt","toUpperCase","slice","toLowerCase","modaladdItem","setmodalAddItem","show_edit_modal","setShowEditModal","React","useEffect","window","scrollTo","has_permission","sessionStorage","getItem","USER_ID","value","label","find","user","unshift","assignee_id","editForm","useFormik","initialValues","assigneeSelect","assigneeSelectPM","todate","validateOnBlur","validateOnChange","validate","values","errors","onSubmit","temp_hrs","colourStyles","option","provided","fontSize","sdate","Date","edate","i","getDay","moment","subtract","toDate","format","nextSatDay","satday","add","show","onClose","employee","onAdd","handleSubmit","className","xl","lg","md","htmlFor","closeMenuOnSelect","minHeight","placeholder","isClearable","isMulti","onChange","classNamePrefix","options","styles","slc_details","slc","department","company","name","type","onClick","items","fields","key","_style","width","_classes","primary","hover","striped","bordered","sorter","size","itemsPerPage","pagination","scopedSlots","Action","color","class","role","Number","toFixed","swal","title","text","icon","buttons","dangerMode","willDelete","doc","jsPDF","setFontSize","content","startY","head","body","map","elt","day","time","toLocaleString","hour","minute","hour12","autoTable","lastAutoTable","finalY","exportPDF","formData","FormData","append","output","FILE_API","post","save","open","style","backgroundColor","disabled","baseOrderBy","require","isArray","module","exports","collection","iteratees","orders","guard","AddTimecardItms","props","modal","setModal","holidays","holiday_title","projects","setProjects","selectedProject","setselectedProject","worktypes","description","dispatch","formAddTimecard","timecardList","user_hours_used_left","hours","hours_type","wbs","hour_description","parseInt","resetForm","setSelectedType","setWbsList","setSelectedWbs","fetchHolidays","fetchUserHoursUsedAndLeft","temp_projects","selectedType","wbsList","selectedWbs","closeOnBackdrop","closeButton","loseMenuOnSelect","setValues","touched","actionMeta","setFieldValue","min","e","target","wbslistArray","wbs_list","EditTimeCard","formEditTimeCard","setSubmitting","put","status","statusText","catch","err","toggle","rows","handleChange","defaultValue","t"],"mappings":"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","file":"static/js/34.a81f51eb.chunk.js","sourcesContent":["import {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CForm,\r\n  CLabel,\r\n  CButton,\r\n  CDataTable,\r\n  CBadge\r\n} from \"@coreui/react\";\r\nimport orderBy from 'lodash/orderBy';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./timeCards.css\";\r\nimport Select from \"react-select\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FILE_API, USER_ID } from \"../../Config\";\r\nimport { API } from \"../../Config\";\r\nimport { has_permission } from \"../../helper\";\r\nimport { useFormik } from \"formik\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport moment from \"moment\";\r\nimport swal from \"sweetalert\";\r\nimport AddTimecardItms from \"./addTimecardItem\";\r\nimport EditTimeCard from \"./Edit\";\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst TimeCards = () => {\r\n  const profile_details = useSelector((state) => state.profile.data);\r\n  const [selectedAssignee,setSelectedAssignee]=useState()\r\n  const dispatch = useDispatch()\r\n  const [update,setUpdate]=useState(0)\r\n  const [usersData, setUsersData] = useState([]);\r\n  const [pdfData, setPdfData] = useState([]);\r\n  const [pdfTitle, setPdfTitle] = useState();\r\n  let location = useLocation();\r\n  const [assigneeList, setAssigneeList] = useState([]);\r\n  const [non_submitted_total_tc,setNonSubmittedTotalTC]=useState(0)\r\n  // const [selectedEmployee, setSelectedEmployee] = useState(initialState)\r\n  {\r\n    /**fetch all assignees for PM */\r\n  }\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [totalHrs, setTotalHrs] = useState(0);\r\n  const [modalData, setModalData] = useState(\"\");\r\n  const [row, setRow] = useState();\r\n\r\n  const getTimeCards = (values) => {\r\n    \r\n    console.log(\"working\");\r\n    setStartDate(values.startDate);\r\n    setEndDate(values.todate);\r\n    var temp_hrs = 0;\r\n    // const section = document.querySelector(\"#tableRef\");\r\n    // section.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n    if (\r\n      has_permission(\"projects.add_projects\") &&\r\n      has_permission(\"wbs.change_timecard\") &&\r\n      has_permission(\"wbs.add_timecard\")\r\n    ) {\r\n      // console.log('values from timecards', values)\r\n      API.get(\"wbs/user/time-card/list/\" + values.assigneeSelectPM + \"/\").then(\r\n        (res) => {\r\n          console.log(res.data.data);\r\n          let temp = [];\r\n          Array.from(res.data.data).forEach((item, idx) => {\r\n            temp.push({ data: item });\r\n          });\r\n\r\n          let filteredData = [];\r\n          filteredData = temp.filter(\r\n            (p) =>\r\n              p.data.date_updated >= values.startDate &&\r\n              p.data.date_updated <= values.todate\r\n          );\r\n          // console.log('timecard for id', filteredData)\r\n          setPdfData(filteredData);\r\n          var tableData = [];\r\n          for (let index = 0; index < filteredData.length; index++) {\r\n            const element = filteredData[index];\r\n            temp_hrs += parseFloat(element.data.hours_today);\r\n            tableData.push({\r\n              WP: element.data.project?.work_package_number\r\n                ? element.data.project.work_package_number\r\n                : \"-\",\r\n              \"Project Name\": element.data.project?.sub_task\r\n                ? element.data.project.sub_task\r\n                : \"-\",\r\n              \"Task Title\": element.data.project.task_title\r\n                ? element.data.project.task_title\r\n                : \"-\",\r\n              Description: element.data.actual_work_done\r\n                ? element.data.actual_work_done\r\n                : \"-\",\r\n              \"Hour(s)\": element.data.hours_today,\r\n              Type: element.data.time_type,\r\n              \"Date Created\": element.data.date_created,\r\n              data: element.data,\r\n            });\r\n          }\r\n          setTotalHrs(temp_hrs);\r\n          setUsersData(tableData);\r\n        }\r\n      );\r\n    } else {\r\n      // console.log('values from timecards', values)\r\n      API.get(\"wbs/user/time-card/list/\" + values.assigneeSelect + \"/\").then(\r\n        (res) => {\r\n          let temp = [];\r\n          console.log(\"zzzzzzzz\", profile_details);\r\n          setPdfTitle(\r\n            profile_details.first_name + \" \" + profile_details.last_name\r\n          );\r\n          Array.from(res.data.data).forEach((item, idx) => {\r\n            // temp.push({data:item.date_updated >=values.startDate && item.date_updated <= values.todate})\r\n            temp.push({ data: item });\r\n          });\r\n\r\n          let filteredData = [];\r\n          filteredData = temp.filter(\r\n            (p) =>\r\n              p.data.date_updated >= values.startDate &&\r\n              p.data.date_updated <= values.todate\r\n          );\r\n          console.log(\"timecard for id\", filteredData);\r\n\r\n          setPdfData(filteredData);\r\n          setModalData(filteredData);\r\n\r\n          var tableData = [];\r\n          for (let index = 0; index < filteredData.length; index++) {\r\n            const element = filteredData[index];\r\n            temp_hrs += parseFloat(element.data.hours_today);\r\n            tableData.push({\r\n              \"WP\": element.data.project\r\n                ? element.data.project.work_package_number\r\n                : \"-\",\r\n              \"Project Name\":\r\n                element.data.project != null\r\n                  ? element.data.project?.sub_task\r\n                  : \"-\",\r\n              \"Task Title\":\r\n                element.data.project != null\r\n                  ? element.data.project.task_title\r\n                  : \"-\",\r\n              Description: element.data.actual_work_done\r\n                ? element.data.actual_work_done\r\n                : \"\",\r\n              \"Hour(s)\": element.data.hours_today,\r\n              Type: element.data.time_type,\r\n              \"Date Created\": element.data.date_created,\r\n              data: element.data,\r\n            });\r\n            //console.log(\"table\", tableData);\r\n          }\r\n          console.log(\"table\", tableData);\r\n          setUsersData(tableData);\r\n          setTotalHrs(temp_hrs);\r\n        }\r\n      );\r\n    }\r\n  };\r\n  const get_assignee_tc=(assignee)=>{\r\n    console.log('get_tc',assignee)\r\n    const { start, end } = dateRange();\r\n    setPdfTitle(assignee.first_name+' '+assignee.last_name)\r\n    API.get(\r\n      \"wbs/user/time-card/list/\" + assignee.id + \"/\"\r\n    ).then((res) => {\r\n      console.log('assignee tc',res.data)\r\n      // setPdfTitle(\r\n      //   profile_details.first_name + \" \" + profile_details.last_name\r\n      // );\r\n      let temp = [];\r\n      Array.from(res.data.data).forEach((item, idx) => {\r\n        temp.push({ data: item });\r\n      });\r\n      let filteredData = temp;\r\n      filteredData = temp.filter(\r\n        (p) => p.data.date_updated >= start && p.data.date_updated <= end\r\n      );\r\n      setPdfData(filteredData);\r\n      var tableData = [];\r\n      let hours_total = 0\r\n      let total_not_submitted=0\r\n      for (let index = 0; index < filteredData.length; index++) {\r\n        if(filteredData[index].data.submitted==false){\r\n          total_not_submitted++;\r\n        }\r\n        const element = filteredData[index];\r\n        hours_total += parseFloat(element.data.hours_today)\r\n        tableData.push({\r\n          WP: element.data.project\r\n            ? element.data.project.work_package_number\r\n            : \"-\",\r\n          \"Project Name\":\r\n            element.data.project != null\r\n              ? element.data.project?.sub_task\r\n              : \"-\",\r\n          \"Task Title\":\r\n            element.data.project != null\r\n              ? element.data.project?.task_title\r\n              : \"-\",\r\n          Description: element.data?.actual_work_done\r\n            ? element.data?.actual_work_done\r\n            : \"-\",\r\n          \"Hour(s)\": element.data.hours_today,\r\n          Type: element.data.time_type,\r\n          \"Date Created\": element.data.date_created,\r\n          data: element.data,\r\n          \"id\":element.data.id\r\n        });\r\n      }\r\n      setTotalHrs(hours_total)\r\n      setUsersData(orderBy(tableData,'id','desc'));\r\n      setNonSubmittedTotalTC(total_not_submitted)\r\n    });\r\n  }\r\n  function capitalize(string) {\r\n    if (string != undefined) {\r\n      return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\r\n    }\r\n    return \"\";\r\n  }\r\n  \r\n  const [modaladdItem, setmodalAddItem] = useState(false);\r\n  const [show_edit_modal, setShowEditModal] = useState(false);\r\n  const handleAssigneeChange = (option) => {\r\n    setSelectedAssignee(option);\r\n    setPdfTitle(option.label);\r\n    get_assignee_tc(option.data)\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    console.log('executing effect')\r\n    window.scrollTo(0, 0);\r\n    const { start, end } = dateRange();\r\n    \r\n    // setSelectedAssignee({label:profile_details.first_name+' '+profile_details.last_name,value:profile_details.id,data:profile_details})\r\n    setTotalHrs(0);\r\n    if (\r\n      has_permission(\"projects.change_projectassignee\") ||\r\n      has_permission(\"projects.add_projectassignee\")\r\n    ) {\r\n      API.get(\r\n        \"project/assignees/all/\" + sessionStorage.getItem(USER_ID) + \"/\"\r\n      ).then((res) => {\r\n        let temp = [];\r\n        Array.from(res.data.data).forEach((item, idx) => {\r\n          temp.push({\r\n            data: item,\r\n            value: item.id,\r\n            label:\r\n              capitalize(item.first_name) + \" \" + capitalize(item.last_name),\r\n          });\r\n        });\r\n        if(!temp.find(item=>item.value == res.data.user.id)){\r\n          temp.unshift({\r\n            data: res.data.user,\r\n            value: res.data.user.id,\r\n            label:\r\n              capitalize(res.data.user.first_name) +\r\n              \" \" +\r\n              capitalize(res.data.user.last_name),\r\n          });\r\n          \r\n        }\r\n        setAssigneeList(orderBy(temp,'label'));\r\n        if(selectedAssignee==null || selectedAssignee==undefined){\r\n          if (location.state?.assignee && temp.length>0) {\r\n            let assignee_id = location.state.assignee;\r\n            setSelectedAssignee(temp.find(item=>item.value==assignee_id));\r\n            get_assignee_tc(temp.find(item=>item.value==assignee_id).data)\r\n          }\r\n          else{\r\n            setSelectedAssignee({\r\n              data: res.data.user,\r\n              value: res.data.user.id,\r\n              label:\r\n                capitalize(res.data.user.first_name) +\r\n                \" \" +\r\n                capitalize(res.data.user.last_name),\r\n            })\r\n            get_assignee_tc(res.data.user)\r\n          }\r\n          setPdfTitle(capitalize(res.data.user.first_name) + \" \" + capitalize(res.data.user.last_name))\r\n        }\r\n        \r\n      });\r\n    }\r\n    else{\r\n      if(selectedAssignee==null || selectedAssignee==undefined){\r\n        setSelectedAssignee({\r\n          data: profile_details,\r\n          value: profile_details.id,\r\n          label:\r\n            capitalize(profile_details.first_name) +\r\n            \" \" +\r\n            capitalize(profile_details.last_name),\r\n        })\r\n        setPdfTitle(capitalize(profile_details.first_name) + \" \" + capitalize(profile_details.last_name))\r\n        get_assignee_tc(profile_details)\r\n      }\r\n    }\r\n    \r\n  }, []);\r\n  // useEffect(()=>{\r\n  //   if (location.state?.assignee && assigneeList.length>0) {\r\n  //     let assignee_id = location.state.assignee;\r\n      \r\n  //     setSelectedAssignee(assigneeList.find(item=>item.value==assignee_id));\r\n      \r\n  //   }\r\n  // },[assigneeList])\r\n  \r\n  const validateEditForm = (values) => {\r\n    const errors = {};\r\n\r\n    if (!values.startDate)\r\n      errors.startDate = \"Start Date selection is required\";\r\n    if (!values.todate) errors.todate = \"To date selection is required\";\r\n    return errors;\r\n  };\r\n\r\n  const editForm = useFormik({\r\n    initialValues: {\r\n      assigneeSelect: sessionStorage.getItem(USER_ID),\r\n      assigneeSelectPM: sessionStorage.getItem(USER_ID),\r\n      startDate: \"\",\r\n      todate: \"\",\r\n    },\r\n    validateOnBlur: true,\r\n    validateOnChange: true,\r\n    validate: validateEditForm,\r\n    onSubmit: getTimeCards,\r\n  });\r\n\r\n  const colourStyles = {\r\n    // control: (styles, state) => ({ ...styles,height:\"35px\", fontSize: '14px !important', lineHeight: '1.42857', borderRadius: \"8px\",borderRadius:\".25rem\",color:\"rgb(133,133,133)\",border:state.isFocused ? '2px solid #0065ff' :'inherit'}),\r\n    option: (provided, state) => ({ ...provided, fontSize: \"14px !important\" }),\r\n  };\r\n  {\r\n    /**export fetched tabledata to excel */\r\n  }\r\n  const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n  const fileExtension = \".xlsx\";\r\n  \r\n  const exportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Timecard of\" + \" \" + selectedAssignee.data.first_name+' '+selectedAssignee.data.last_name;\r\n    const headers = [\r\n      [  \r\n        \"WP\", \r\n        \"Project Name\",\r\n        \"Task Title\",\r\n        \"Description\",\r\n        \"Hour(s)\",\r\n        \"Type\",\r\n        \"Date Created\", \r\n      ],\r\n    ];\r\n    const uData = pdfData.map((elt, idx) => [\r\n      elt.data.project.work_package_number,\r\n      elt.data.project.sub_task,\r\n      elt.data.project.task_title,\r\n      elt.data.actual_work_done,\r\n      elt.data.hours_today,\r\n      elt.data.time_type,\r\n      elt.data.date_created,\r\n    ]);\r\n    let content = {\r\n      startY: 145,\r\n      head: headers,\r\n      body: uData,\r\n    };\r\n\r\n     let day = new Date();\r\n     let time = day.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\r\n      day=moment(day).format(\"DD/MM/YY\")\r\n      const edate= moment(endDate).format(\"DD/MM/YYYY\")\r\n      doc.setFontSize(17)\r\n      doc.text(170, 50, \"Datasoft Manufacturing & Assembly\")\r\n      doc.setFontSize(13)\r\n      doc.text(245,75, \"Gulshan Branch\")\r\n      doc.setFontSize(11)\r\n      doc.text(42,105, \"Employee Time Card\")\r\n      doc.text(410, 105, \"Week-Ending: \"+ edate)//+ edate)\r\n      doc.text(42, 125, \"Name: \"+ selectedAssignee.data.first_name+' '+selectedAssignee.data.last_name)//+ name)\r\n     \r\n      let date = new Date();\r\n      doc.autoTable(content);\r\n      doc.text(42, doc.lastAutoTable.finalY+25, \"From \" + startDate + \" to \" + endDate )\r\n      doc.text(250, doc.lastAutoTable.finalY+25, \" Total Hours \" + Number(totalHrs).toFixed(2))\r\n      doc.text(396, doc.lastAutoTable.finalY+25, \"Submitted on : \" + time + \"  \" + day);\r\n      // doc.save(\"Timecard of\" + \" \" + pdfTitle + \".pdf\");\r\n      return doc\r\n  };\r\n\r\n  const showModal = (tableItem) => {\r\n    setRow(tableItem.data);\r\n    setShowEditModal(true);\r\n  };\r\n  \r\n\r\n  const onAddItem = () => {\r\n    setmodalAddItem(false);\r\n    get_assignee_tc(selectedAssignee.data)\r\n  };\r\n \r\n  const onSubmit = () => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once submitted, you will not be able to revert!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        let temp = '';\r\n        for (let i = 0; i < usersData.length; i++) {\r\n          //console.log(\"data\", usersData[i]);\r\n          // temp.push(usersData[i].data.id)\r\n          if (i == usersData.length - 1) {\r\n            temp += usersData[i].data.id\r\n          }\r\n          else {\r\n            temp += (usersData[i].data.id + ',')\r\n          }\r\n        }\r\n\r\n        let doc = exportPDF()\r\n        let formData = new FormData()\r\n        formData.append('employee', selectedAssignee.value)\r\n        formData.append('time_cards', temp)\r\n        formData.append('week_start', startDate)\r\n        formData.append('week_end', endDate)\r\n        formData.append('pdf_file', doc.output('datauristring'))\r\n\r\n        FILE_API.post(\"wbs/time-card/submit/\", formData).then((res) => {\r\n          console.log(res.data);\r\n          // dispatch(fetchAllTimecardsPmThunk(selectedAssignee.value))\r\n          get_assignee_tc(selectedAssignee.data)\r\n          doc.save(\"Timecard of\" + \" \" + selectedAssignee.data.first_name + \".pdf\");\r\n          window.open(doc.output('bloburl'), '_blank');\r\n          swal(\r\n            \"Submitted\",\r\n            \"Your selected time cards are submitted!\",\r\n            \"success\"\r\n          );\r\n        });\r\n      }\r\n    });\r\n  };\r\n  \r\n  const dateRange = () => {\r\n    var sdate = new Date();\r\n    var edate = new Date();\r\n\r\n    for (let i = 0; i < 7; i++) {\r\n      if (sdate.getDay() === 0) {\r\n        console.log(\"start\", sdate);\r\n        break;\r\n      } else {\r\n        sdate = moment(sdate).subtract(1, \"day\").toDate();\r\n      }\r\n    }\r\n    console.log(\"end date\", edate);\r\n\r\n    setStartDate(moment(sdate).format(\"YYYY-MM-DD\"));\r\n    setEndDate(nextSatDay());\r\n    // editForm.setValues({\r\n    //   assigneeSelect: sessionStorage.getItem(USER_ID),\r\n    //   assigneeSelectPM: sessionStorage.getItem(USER_ID),\r\n    //   startDate: moment(sdate).format('YYYY-MM-DD'),\r\n    //   todate:  moment(edate).format('YYYY-MM-DD'),\r\n    // })\r\n    return {\r\n      start: moment(sdate).format(\"YYYY-MM-DD\"),\r\n      // end: moment(edate).format(\"YYYY-MM-DD\"),\r\n      end: nextSatDay(),\r\n    };\r\n  };\r\n  const nextSatDay = () => {\r\n    var satday = new Date();\r\n    for (let i = 0; i < 7; i++) {\r\n      if (satday.getDay() === 6) {\r\n        console.log(\"sat\", satday);\r\n        break;\r\n      } else {\r\n        satday = moment(satday).add(1, \"day\").toDate();\r\n      }\r\n    }\r\n    satday = moment(satday).format('YYYY-MM-DD')\r\n    return satday;\r\n  };\r\n\r\n  const show_add_item_btn = () => {\r\n    if (editForm.values.assigneeSelectPM == sessionStorage.getItem(USER_ID)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {row != null && row != undefined && (\r\n        <EditTimeCard\r\n          data={row}\r\n          show={show_edit_modal}\r\n          onClose={() => {\r\n            setShowEditModal(false);get_assignee_tc(selectedAssignee.data);\r\n          }}\r\n        />\r\n      )}\r\n      {selectedAssignee && <AddTimecardItms\r\n        // toggle={toggleModal}\r\n        employee={selectedAssignee.value}\r\n        show={modaladdItem}\r\n        onClose={onAddItem}\r\n        onAdd={editForm.handleSubmit}\r\n      ></AddTimecardItms>}\r\n      <CContainer>\r\n\r\n        <CRow className=\"justify-content-between\">\r\n          <CCol>\r\n            <h3 className=\"timecards-page-header mb-3\">Actual Hours of this week</h3>\r\n          </CCol>\r\n          {/* <CCol\r\n            md=\"8\"\r\n            id=\"tableRef\"\r\n            className=\"d-flex justify-content-end\"\r\n          >\r\n            <h5 className=\"tiny-header--5 mt-3 mr-2\">Export </h5>\r\n            <div className=\"format-buttons mt-3 mb-3 \">\r\n              <CButton\r\n                className=\"file-format-download\"\r\n                onClick={() => exportPDF()}\r\n              >\r\n                <CIcon name=\"cil-description\" className=\"mr-2\" /> PDF\r\n              </CButton>\r\n              <CButton\r\n                className=\"file-format-download\"\r\n                onClick={() =>\r\n                  exportToCSV(usersData, \"Timecard of\" + \" \" + pdfTitle)\r\n                }\r\n              >\r\n                <CIcon name=\"cil-spreadsheet\" className=\"mr-2\" />\r\n                Excel\r\n              </CButton>\r\n            </div>\r\n          </CCol> */}\r\n        </CRow>\r\n        <CForm>\r\n          <CRow>\r\n            {/**assignees */}\r\n            <CCol xl=\"3\" lg=\"3\" md=\"6\">\r\n              {/* {!has_permission(\"projects.add_projects\") && (\r\n                <div>\r\n                  <CLabel className=\"custom-label-5\" htmlFor=\"assigneeSelect\">\r\n                    Select Employee\r\n                  </CLabel>\r\n                  <CInput\r\n                    name=\"assigneeSelect\"\r\n                    type=\"text\"\r\n                    value={\r\n                      capitalize(profile_details.first_name) +\r\n                      \" \" +\r\n                      capitalize(profile_details.last_name)\r\n                    }\r\n                    onChange={editForm.handleChange}\r\n                    readOnly\r\n                  />\r\n                </div>\r\n              )} */}\r\n              {/**IF PM */}\r\n              {has_permission(\"projects.add_projects\") && (\r\n                <div>\r\n                  <CLabel className=\"custom-label-5\" htmlFor=\"assigneeSelectPM\">\r\n                    Select Employee\r\n                  </CLabel>\r\n                  <Select\r\n                    closeMenuOnSelect={true}\r\n                    aria-labelledby=\"assigneeSelectPM\"\r\n                    id=\"assigneeSelectPM\"\r\n                    minHeight=\"35px\"\r\n                    placeholder={capitalize(profile_details.first_name) +\r\n                      \" \" +\r\n                      capitalize(profile_details.last_name)}\r\n                    isClearable={false}\r\n                    isMulti={false}\r\n                    onChange={handleAssigneeChange}\r\n                    classNamePrefix=\"custom-forminput-6\"\r\n                    options={assigneeList}\r\n                    styles={colourStyles}\r\n                    value={selectedAssignee}\r\n                  />\r\n                </div>\r\n              )}\r\n              {/**If PM but no assignee list **/}\r\n              {/* {has_group('pm')&& (assigneeList.length == 0) &&\r\n                  <div>\r\n                      <CLabel className=\"custom-label-5\" htmlFor=\"assigneeSelect\">\r\n                          Select Employee\r\n                      </CLabel>\r\n                      <CInput name=\"assigneeSelect\" type=\"text\" value={capitalize(profile_details.first_name) + ' ' + capitalize(profile_details.last_name)} onChange={editForm.handleChange} readOnly />\r\n                  </div>\r\n              } */}\r\n            </CCol>\r\n            <CRow className=\"mt-4\">\r\n              <CCol>\r\n                <CLabel className=\"custom-label-5\" htmlFor=\"assigneeSelect\">\r\n                  Company : {selectedAssignee?.data?.slc_details?.slc?.department?.company?.name}\r\n                </CLabel>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol md=\"4\">\r\n                <CLabel className=\"custom-label-5\" htmlFor=\"assigneeSelect\">\r\n                  Employee Name :{\" \"}\r\n                  {capitalize(selectedAssignee?.data?.first_name) +\r\n                    \" \" +\r\n                    capitalize(selectedAssignee?.data?.last_name)}\r\n                </CLabel>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol>\r\n                <CLabel className=\"custom-label-5\" htmlFor=\"assigneeSelect\">\r\n                  Weekending : {moment(nextSatDay()).format('dddd, DD MMMM YYYY')}\r\n                </CLabel>\r\n              </CCol>\r\n            </CRow>\r\n\r\n            {/* {usersData.length > 0 && (\r\n              <div className=\"alert alert-info\" role=\"alert\">\r\n                Showing actual hours from {moment(startDate).format(\"DD-MM-YYYY\")} to{\" \"}\r\n                {moment(endDate).format(\"DD-MM-YYYY\")}\r\n              </div>\r\n            )} */}\r\n            {show_add_item_btn() == true && (\r\n              <div className=\"format-buttons mt-3 mb-3\">\r\n                <CButton\r\n                  className=\"file-format-download\"\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    setmodalAddItem(true);\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  + Add Item\r\n                </CButton>\r\n              </div>\r\n            )}\r\n\r\n            {/**table for displaying all the entries */}\r\n            <CCol md=\"12\">\r\n              <div className=\"\">\r\n                <CDataTable\r\n                  items={usersData}\r\n                  fields={[\r\n                    {\r\n                      key: \"WP\",\r\n                      _style: { width: \"5%\" },\r\n                      _classes: \"font-weight-bold\",\r\n                    },\r\n                    \"Project Name\",\r\n                    \"Task Title\",\r\n                    \"Description\",\r\n                    \"Hour(s)\",\r\n                    \"Type\",\r\n                    \"Date Created\",\r\n                    \"Action\",\r\n                  ]}\r\n                  primary\r\n                  hover\r\n                  striped\r\n                  bordered\r\n                  sorter\r\n                  //columnFilter\r\n                  size=\"sm\"\r\n                  itemsPerPage={20}\r\n                  pagination\r\n                  scopedSlots={{\r\n                    Action: (item) => (\r\n                      <td>\r\n                        {item.data.submitted == false ? (\r\n                          <CBadge>\r\n                            <CButton\r\n                              onClick={() => {\r\n                                showModal(item);\r\n                              }}\r\n                              size=\"sm\"\r\n                              type=\"button\"\r\n                              color=\"primary\"\r\n                            >\r\n                              Edit\r\n                            </CButton>\r\n                          </CBadge>\r\n                        ) : (\r\n                          \"N/A\"\r\n                        )}\r\n                      </td>\r\n                    ),\r\n                  }}\r\n                />\r\n                {totalHrs != 0 && (\r\n                  <div class=\"alert alert-info\" role=\"alert\">\r\n                    <CRow>\r\n                      <CCol md=\"5\"></CCol>\r\n                      <CCol md=\"3\">\r\n                        {\r\n                          <small>\r\n                            {\"     \"}\r\n                            From <b>\r\n                              {moment(startDate).format(\"DD-MMM-YY\")}\r\n                            </b> to <b>{moment(endDate).format(\"DD-MMM-YY\")}</b>\r\n                          </small>\r\n                        }\r\n                      </CCol>\r\n                      <CCol md=\"4\">\r\n                        {\r\n                          <small>\r\n                            {\"   \"}\r\n                            Total <b>{Number(totalHrs).toFixed(2)} {Number(totalHrs).toFixed(2) > 1 ? 'hours' : 'hour'}&nbsp;</b>\r\n                          </small>\r\n                        }\r\n                      </CCol>\r\n                    </CRow>\r\n                  </div>\r\n                )}\r\n                <CRow className=\"justify-content-end mb-5\">\r\n                  <CCol md=\"1\" className=\"justify-content-end\">\r\n                    <CButton\r\n                      className=\"file-format-download\"\r\n                      type=\"button\"\r\n                      onClick={onSubmit}\r\n                      style={{ backgroundColor: '#e55353' }}\r\n                      disabled={non_submitted_total_tc==0}\r\n                    >\r\n                      Submit\r\n                    </CButton>\r\n                    {/* <CButton className=\"file-format-download\">Print</CButton> */}\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n        </CForm>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\nexport default TimeCards;\r\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n","import { useFormik } from \"formik\";\r\nimport {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CForm,\r\n  CLabel,\r\n  CInput,\r\n  CButton,\r\n  CModal,\r\n  CModalBody,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalTitle,\r\n  CTextarea,\r\n} from \"@coreui/react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./timeCards.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport { API, USER_ID } from \"../../Config\";\r\nimport swal from 'sweetalert'\r\nimport { fetchHolidays } from \"../../store/slices/HolidaySlice\";\r\nimport { fetchUserHoursUsedAndLeft } from \"../../store/slices/TimecardSlice\";\r\n\r\nconst AddTimecardItms = (props) => {\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    setModal(!modal);\r\n  };\r\n  const holidays=useSelector((state)=>{\r\n    let items=[]\r\n    Array.from(state.holidays.data).forEach((item,idx)=>{\r\n      items.push({label:item.holiday_title,value:item.id,data:item})\r\n    })\r\n    return items\r\n  })\r\n  const [projects,setProjects]=useState([])\r\n  const [selectedProject, setselectedProject]=useState(\"\")\r\n  // const projects = useSelector((state) => {\r\n  //   let projectsArray = [];\r\n\r\n  //   Array.from(state.projects.data).forEach((item, idx) => {\r\n  //     projectsArray.push({\r\n  //       value: item.project.id,\r\n  //       label: item.project.sub_task,\r\n  //       data: item,\r\n  //     });\r\n  //   });\r\n  //   return projectsArray;\r\n  // });\r\n  const worktypes= useSelector(state=>{\r\n    let temp=[]\r\n    Array.from(state.worktypes.data).forEach((item,idx)=>{\r\n      temp.push({label:item.title,value:item.title,description:item.description,data:item})\r\n    })\r\n    return temp\r\n  })\r\n  const dispatch = useDispatch()\r\n  const hours_spent_left=useSelector(state=>state.timecardList.user_hours_used_left)\r\n  const onSave = (values) => {\r\n    console.log(\"values\", formAddTimecard.values);\r\n    const data={\r\n      hours_type:formAddTimecard.values.hours_type,\r\n      hours:formAddTimecard.values.hours,\r\n      hour_description:formAddTimecard.values.hour_description?formAddTimecard.values.hour_description:'',\r\n      assignee:props.employee,\r\n      actual_work_done:formAddTimecard.values.actual_work_done,\r\n      project:formAddTimecard.values.project,\r\n      wbs:formAddTimecard.values.wbs,\r\n      task_title:formAddTimecard.values.task_title\r\n    }\r\n    API.post('wbs/time-card/add/', data).then((res) => {\r\n      console.log(res.data)\r\n      props.onClose()\r\n      // props.onAdd()\r\n      toggleModal()\r\n      formAddTimecard.resetForm()\r\n      \r\n      setSelectedType({label : null, value : null })\r\n      setWbsList()\r\n      setSelectedWbs(null)\r\n      setselectedProject(null)\r\n      swal('Added!', 'Successfuly Added', 'success')\r\n    })\r\n\r\n    setModal(false)\r\n  }\r\n\r\n  const validateAddItemForm=(values)=>{\r\n    const errors = {};\r\n    if (!values.hours_type) errors.hours_type = \"Hour Type is required!\"\r\n    if (!values.hours) errors.hours = \"Hour is required!\"\r\n    if (!values.project) errors.project = \"Project is required!\"\r\n    if (!values.wbs) errors.wbs = \"Wbs is required!\"\r\n    if (!values.actual_work_done) errors.actual_work_done = \"Details is required!\"\r\n    if (parseInt(values.hours) < 1) errors.hours = \"Invalid hours value!\"\r\n    return errors;\r\n  }\r\n  \r\n  const formAddTimecard = useFormik({\r\n    initialValues: {\r\n      project: \"\",\r\n      task_title: \"\",\r\n      actual_work_done: \"\",\r\n      hours: \"\",\r\n      hours_type: \"\",\r\n      wbs: \"\",\r\n      hour_description:\"\",\r\n      assignee: props.employee\r\n    },\r\n    validateOnChange: true,\r\n    validateOnBlur: true,\r\n    validate: validateAddItemForm,\r\n    onSubmit: onSave,\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log('add tc props',props.employee);\r\n    dispatch(fetchHolidays());\r\n    dispatch(fetchUserHoursUsedAndLeft())\r\n    let temp_projects=[]\r\n    API.get('project/assigned/all/'+props.employee+'/').then(res=>{\r\n      console.log('assigned projects',res.data)\r\n      for(let index=0;index<res.data.data.length;index++){\r\n        temp_projects.push({label:res.data.data[index].project.sub_task,value:res.data.data[index].project.id,data:res.data.data[index]})\r\n      }\r\n      console.log('temp p',temp_projects)\r\n      setProjects(temp_projects)\r\n    })\r\n    \r\n  }, [props]);\r\n\r\n  const [selectedType, setSelectedType] = useState({ label: \"\", value: \"\" });\r\n  const [wbsList, setWbsList] = useState();\r\n  const [selectedWbs, setSelectedWbs] = useState();\r\n\r\n  const handleHoursTypeChange = (option) => {\r\n    setSelectedType(option);\r\n    \r\n    if(option.label != 'RHR' && option.label != 'WFH' && option.label != 'OTO' && option.label != 'OTS'){\r\n      console.log('if')\r\n      \r\n      formAddTimecard.setValues({\r\n        hours_type:option.value,\r\n        actual_work_done:option.description,\r\n      });\r\n    }\r\n    else{\r\n      console.log('else')\r\n      formAddTimecard.setValues({\r\n        hours_type:option.value,\r\n        actual_work_done:'',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleHolidayChange=(value,actionMeta)=>{\r\n    console.log(value)\r\n    formAddTimecard.setFieldValue('hours',value.data.hours)\r\n  }\r\n\r\n  const handlewbsChange = (option) => {\r\n    setSelectedWbs(option);\r\n    console.log(\"WBS\", option);\r\n    formAddTimecard.setFieldValue(\r\n      \"wbs\",\r\n      option.value,\r\n    );\r\n  };\r\n\r\n  const handleProjectChange = (option) => {\r\n    setselectedProject(option)\r\n    console.log(\"selected Project\", option.value)\r\n     formAddTimecard.setFieldValue(\"project\", option.value);\r\n     let wbslistArray = [];\r\n     for (let i = 0; i < option.data.project.wbs_list.length; i++) {\r\n       if (parseInt(option.data.project.wbs_list[i].assignee_id) == parseInt(props.employee)) {\r\n         wbslistArray.push({\r\n           value: option.data.project.wbs_list[i].id,\r\n           label: option.data.project.wbs_list[i].title,\r\n           data: option.data.project.wbs_list[i],\r\n        });\r\n      }\r\n    }\r\n    setWbsList(wbslistArray);\r\n  };\r\n\r\n  const reset_form = () => {\r\n    formAddTimecard.resetForm();\r\n    setSelectedType({label : null, value : null })\r\n    setWbsList()\r\n    setSelectedWbs(null)\r\n    setselectedProject(null)\r\n\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <CModal\r\n        closeOnBackdrop={false}\r\n        show={props.show}\r\n        onClose={()=>{props.onClose();formAddTimecard.resetForm()}}\r\n        size=\"lg\"\r\n      >\r\n        <CForm>\r\n          <CModalHeader closeButton>\r\n            Enter New Timecard Item Details\r\n          </CModalHeader>\r\n          <CModalBody>\r\n            <CRow>\r\n              <CCol className=\"col-md-12 mb-3\">\r\n                {/*Type : {row?.time_type}*/}\r\n                <CLabel\r\n                  className=\"custom-label-5\"\r\n                  htmlFor=\"assigneeSelectPM\"\r\n                  loseMenuOnSelect={true}\r\n                  isClearable={false}\r\n                  isMulti={false}\r\n                >\r\n                  Hour Type :\r\n                </CLabel>\r\n                <Select\r\n                  id=\"hours_type\"\r\n                  name=\"hours_type\"\r\n                  options={worktypes}\r\n                  onChange={handleHoursTypeChange}\r\n                  value={selectedType}\r\n                />\r\n                {formAddTimecard.touched.hours_type && formAddTimecard.errors.hours_type && <small style={{ color: 'red' }}>{formAddTimecard.errors.hours_type}</small>}\r\n              </CCol>\r\n              {selectedType.label == 'HOL' && <CCol className=\"col-md-12 mb-3\">\r\n                <CLabel className=\"custom-label-wbs5\">Select Holiday : </CLabel>\r\n                <Select\r\n                  id=\"project\"\r\n                  name=\"project\"\r\n                  className=\"custom-forminput-5\"\r\n                  onChange={handleHolidayChange}\r\n                  options={holidays}\r\n                />\r\n              </CCol>}\r\n              <CCol className=\"col-md-12 mb-3\">\r\n                <CLabel className=\"custom-label-wbs5\"> Hours : </CLabel>\r\n                <CInput\r\n                  type=\"number\"\r\n                  aria-label=\"default input example\"\r\n                  id=\"hours\"\r\n                  name=\"hours\"\r\n                  className=\"custom-forminput-5\"\r\n                  placeholder=\"0.00\"\r\n                  //onChange={formAddTimecard.handleChange}\r\n                  disabled={selectedType.value == 'HOL'}\r\n                  min=\"0.00\"\r\n                  onChange={(e) => {\r\n                    formAddTimecard.setFieldValue(\r\n                      \"hours\",\r\n                      e.target.value\r\n                    );\r\n                  }}\r\n                  value={formAddTimecard.values.hours}\r\n                />\r\n                {formAddTimecard.touched.hours && formAddTimecard.errors.hours && <small style={{ color: 'red' }}>{formAddTimecard.errors.hours}</small>}\r\n              </CCol>\r\n\r\n              <CCol className=\"col-md-12 mb-3\">\r\n                  <CLabel\r\n                    className=\"custom-label-wbs5\"\r\n                    htmlFor=\"assigneeSelectPM\"\r\n                    loseMenuOnSelect={true}\r\n                    isClearable={false}\r\n                    isMulti={false}\r\n                  >\r\n                    Project :{\" \"}\r\n                  </CLabel>\r\n\r\n                  <Select\r\n                    id=\"project\"\r\n                    name=\"project\"\r\n                    className=\"custom-forminput-5\"\r\n                    onChange={handleProjectChange}\r\n                    options={projects}\r\n                    value = {selectedProject}\r\n                  />\r\n                  {formAddTimecard.touched.project && formAddTimecard.errors.project && <small style={{ color: 'red' }}>{formAddTimecard.errors.project}</small>}\r\n                </CCol>\r\n\r\n                <CCol className=\"col-md-12 mb-3\">\r\n                  {/*Type : {row?.time_type}*/}\r\n                  <CLabel\r\n                    className=\"custom-label-5\"\r\n                    htmlFor=\"assigneeSelectPM\"\r\n                    loseMenuOnSelect={true}\r\n                    isClearable={false}\r\n                    isMulti={false}\r\n                  >\r\n                    WBS :\r\n                  </CLabel>\r\n                  <Select\r\n                    id=\"wbs\"\r\n                    name=\"wbs\"\r\n                    className=\"custom-forminput-5\"\r\n                    options={wbsList}\r\n                    onChange={handlewbsChange}\r\n                    value={selectedWbs}\r\n                  />\r\n                  {formAddTimecard.touched.wbs && formAddTimecard.errors.wbs && <small style={{ color: 'red' }}>{formAddTimecard.errors.wbs}</small>}\r\n                </CCol>\r\n                <CCol className=\"col-md-12 mb-3\">\r\n                  <CLabel>Actual Work :</CLabel>\r\n                  <CTextarea\r\n                    type=\"text\"\r\n                    id=\"actual_work_done\"\r\n                    name=\"actual_work_done\"\r\n                    className=\"custom-forminput-5\"\r\n                    //onChange={formAddTimecard.handleChange}\r\n                    onChange={(e) => {\r\n                      formAddTimecard.setFieldValue(\r\n                        \"actual_work_done\",\r\n                        e.target.value\r\n                      );\r\n                    }}\r\n                    value={formAddTimecard.values.actual_work_done}\r\n                  />\r\n                  {formAddTimecard.touched.actual_work_done && formAddTimecard.errors.actual_work_done && <small style={{ color: 'red' }}>{formAddTimecard.errors.actual_work_done}</small>}\r\n                </CCol>\r\n            </CRow>\r\n          </CModalBody>\r\n        </CForm>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\" type=\"button\" onClick={formAddTimecard.handleSubmit}>\r\n            Add\r\n          </CButton>{\" \"}\r\n          <CButton color=\"secondary\" type=\"button\" onClick={()=>{props.onClose();reset_form()}}>\r\n            Cancel\r\n\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </>\r\n  );\r\n};\r\nexport default AddTimecardItms;\r\n","import { useFormik } from 'formik'\r\nimport React, { useEffect } from 'react'\r\nimport {\r\n    CContainer,\r\n    CRow,\r\n    CCol,\r\n    CForm,\r\n    CLabel,\r\n    CInput,\r\n    CButton,\r\n    CDataTable,\r\n    CBadge,\r\n    CModal,\r\n    CModalBody,\r\n    CModalHeader,\r\n    CModalFooter,\r\n    CModalTitle,\r\n    CTextarea,\r\n  } from \"@coreui/react\";\r\n  import Select from \"react-select\";\r\nimport { API } from '../../Config';\r\nimport swal from 'sweetalert';\r\nimport { useSelector } from 'react-redux';\r\nconst EditTimeCard = (props) => {\r\n    const types = [\r\n        { label: \"RHR\", value: \"RHR\" },\r\n        { label: \"SIC\", value: \"SIC\" },\r\n        { label: \"VAC\", value: \"VAC\" },\r\n        { label: \"OTS\", value: \"OTS\" },\r\n        { label: \"OTO\", value: \"OTO\" },\r\n        { label: \"HOL\", value: \"HOL\" },\r\n        { label: \"WFH\", value: \"WFH\" },\r\n        { label: \"COM\", value: \"COM\" },\r\n        { label: \"PB1\", value: \"PB1\" },\r\n        { label: \"PB2\", value: \"PB2\" },\r\n    ];\r\n    const worktypes= useSelector(state=>{\r\n        let temp=[]\r\n        Array.from(state.worktypes.data).forEach((item,idx)=>{\r\n          temp.push({label:item.title,value:item.title,description:item.description,data:item})\r\n        })\r\n        return temp\r\n      })\r\n    const edit_time_card=(values,{setSubmitting})=>{\r\n        console.log(values)\r\n        API.put('wbs/time-card/update/'+props.data.id+'/',values).then(res=>{\r\n            console.log(res.data)\r\n            if(res.status == 200 && res.statusText == 'OK'){\r\n                formEditTimeCard.resetForm()\r\n                props.onClose()\r\n                swal('Well Done!','Your timecard is updated','success')\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    \r\n    const formEditTimeCard=useFormik({\r\n        initialValues:{\r\n            actual_work_done:'',\r\n            time_type:'',\r\n            hours_today:'',\r\n        },\r\n        onSubmit:edit_time_card\r\n    })\r\n    const handleSelectChange=(value,actionMeta)=>{\r\n        console.log(value)\r\n        formEditTimeCard.setFieldValue('time_type',value.value)\r\n    }\r\n    useEffect(()=>{\r\n        if(props.data){\r\n            formEditTimeCard.setValues({\r\n                actual_work_done:props.data.actual_work_done,\r\n                time_type:props.data.time_type,\r\n                hours_today:props.data.hours_today,\r\n            })\r\n        }\r\n    },[props.data])\r\n\r\n    const oncancel = () => {\r\n        formEditTimeCard.setValues({\r\n            actual_work_done:props.data.actual_work_done,\r\n            time_type:props.data.time_type,\r\n            hours_today:props.data.hours_today,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CModal\r\n                //show={showModal}\r\n                show={props.show}\r\n                onClose={()=>props.onClose()}\r\n                toggle={props.toggle}\r\n            >\r\n                <CModalHeader closeButton>\r\n                    {\" \"}\r\n                    Project Name (Work Package) : {props.data?.project != null ? (props.data.project.sub_task + '(' + props.data?.project.work_package_number + ')') : 'N/A'}\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CRow>\r\n                        <CCol className=\"col-md-12 mb-3\">\r\n                            <CLabel class=\"form-label\">  Task Title : </CLabel>\r\n                            <CInput value={props.data?.project!=null?props.data.project.task_title:'N/A'} disabled ></CInput>\r\n                        </CCol>\r\n                        <CCol className=\"col-md-12 mb-3\">\r\n                            <CLabel class=\"form-label\">Actual Work :</CLabel>\r\n                            <CTextarea\r\n                                class=\"form-control\"\r\n                                id=\"actual_work_done\"\r\n                                name='actual_work_done'\r\n                                rows=\"3\"\r\n                                value={formEditTimeCard.values.actual_work_done}\r\n                                onChange={formEditTimeCard.handleChange}\r\n                            >\r\n                                {\" \"}\r\n                            </CTextarea>\r\n\r\n                        </CCol>\r\n                        <CCol className=\"col-md-12 mb-3\" >\r\n                            <CLabel class=\"form-label\"> Hour(s):</CLabel>\r\n\r\n                            <CInput\r\n                                className=\"custom-forminput-5\"\r\n                                type=\"number\"\r\n                                aria-label=\"default input example\"\r\n                                id='hours_today'\r\n                                name='hours_today'\r\n                                value={formEditTimeCard.values.hours_today}\r\n                                onChange={formEditTimeCard.handleChange}\r\n                            ></CInput>\r\n                            {/*{sethour(props.data?.sethour)}*/}\r\n                        </CCol>\r\n                        <CCol className=\"col-md-12 mb-3\">\r\n                            {/*Type : {props.data?.time_type}*/}\r\n                            <CLabel\r\n                                className=\"custom-label-5\"\r\n                                htmlFor=\"assigneeSelectPM\"\r\n                                loseMenuOnSelect={true}\r\n                                isClearable={false}\r\n                                isMulti={false}\r\n                            >\r\n                                Type :\r\n                            </CLabel>\r\n                            <Select options={worktypes} onChange={handleSelectChange} defaultValue={types.filter(t=>t.value === props.data?.time_type)} />\r\n                        </CCol>\r\n                    </CRow>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"primary\" onClick={formEditTimeCard.handleSubmit}>\r\n                        save\r\n                    </CButton>{\" \"}\r\n                    <CButton color=\"secondary\" onClick={()=>{props.onClose(); oncancel()}}>\r\n                        Cancel\r\n                    </CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditTimeCard"],"sourceRoot":""}