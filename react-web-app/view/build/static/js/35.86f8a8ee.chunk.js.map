{"version":3,"sources":["pages/timecards/timeCard.js","../node_modules/lodash/orderBy.js","pages/timecards/addTimecardItem.js","pages/timecards/Edit.js"],"names":["TimeCards","profile_details","useSelector","state","profile","data","useState","selectedAssignee","setSelectedAssignee","useDispatch","update","usersData","setUsersData","pdfData","setPdfData","setPdfTitle","location","useLocation","assigneeList","setAssigneeList","non_submitted_total_tc","setNonSubmittedTotalTC","startDate","setStartDate","endDate","setEndDate","totalHrs","setTotalHrs","setModalData","row","setRow","get_assignee_tc","assignee","console","log","dateRange","start","end","first_name","last_name","API","get","id","then","res","temp","Array","from","forEach","item","idx","push","filteredData","filter","p","date_updated","tableData","hours_total","total_not_submitted","index","length","submitted","element","parseFloat","hours_today","WP","project","work_package_number","sub_task","task_title","Description","actual_work_done","Type","time_type","date_created","orderBy","capitalize","string","undefined","charAt","toUpperCase","slice","toLowerCase","modaladdItem","setmodalAddItem","show_edit_modal","setShowEditModal","React","useEffect","window","scrollTo","has_permission","sessionStorage","getItem","USER_ID","value","label","find","user","unshift","assignee_id","editForm","useFormik","initialValues","assigneeSelect","assigneeSelectPM","todate","validateOnBlur","validateOnChange","validate","values","errors","onSubmit","temp_hrs","colourStyles","option","provided","fontSize","sdate","Date","edate","i","getDay","moment","subtract","toDate","format","nextSatDay","satday","add","show","onClose","employee","onAdd","handleSubmit","className","xl","lg","md","htmlFor","closeMenuOnSelect","minHeight","placeholder","isClearable","isMulti","onChange","classNamePrefix","options","styles","slc_details","slc","department","company","name","type","onClick","items","fields","key","_style","width","_classes","primary","hover","striped","bordered","sorter","size","itemsPerPage","pagination","scopedSlots","Action","color","disabled","class","role","Number","toFixed","swal","title","text","icon","buttons","dangerMode","willDelete","doc","jsPDF","setFontSize","content","startY","head","body","map","elt","day","time","toLocaleString","hour","minute","hour12","autoTable","lastAutoTable","finalY","exportPDF","formData","FormData","append","output","FILE_API","post","days","todayDate","save","open","style","backgroundColor","baseOrderBy","require","isArray","module","exports","collection","iteratees","orders","guard","AddTimecardItms","props","modal","setModal","holidays","holiday_title","projects","setProjects","selectedProject","setselectedProject","worktypes","description","dispatch","formAddTimecard","hours_spent_left","hours","hours_type","wbs","hour_description","parseInt","resetForm","setSelectedType","setWbsList","setSelectedWbs","fetchHolidays","fetchUserHoursUsedAndLeft","temp_projects","selectedType","wbsList","selectedWbs","closeOnBackdrop","closeButton","loseMenuOnSelect","setValues","touched","actionMeta","setFieldValue","min","e","target","wbslistArray","wbs_list","EditTimeCard","formEditTimeCard","setSubmitting","put","status","statusText","catch","err","toggle","defaultValue","t","handleChange","rows"],"mappings":"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","file":"static/js/35.86f8a8ee.chunk.js","sourcesContent":["import {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CForm,\r\n  CLabel,\r\n  CButton,\r\n  CDataTable,\r\n  CBadge,\r\n} from \"@coreui/react\";\r\nimport orderBy from \"lodash/orderBy\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./timeCards.css\";\r\nimport Select from \"react-select\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FILE_API, USER_ID } from \"../../Config\";\r\nimport { API } from \"../../Config\";\r\nimport { has_permission } from \"../../helper\";\r\nimport { useFormik } from \"formik\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport moment from \"moment\";\r\nimport swal from \"sweetalert\";\r\nimport AddTimecardItms from \"./addTimecardItem\";\r\nimport EditTimeCard from \"./Edit\";\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst TimeCards = () => {\r\n  const profile_details = useSelector((state) => state.profile.data);\r\n  const [selectedAssignee, setSelectedAssignee] = useState();\r\n  const dispatch = useDispatch();\r\n  const [update, setUpdate] = useState(0);\r\n  const [usersData, setUsersData] = useState([]);\r\n  const [pdfData, setPdfData] = useState([]);\r\n  const [pdfTitle, setPdfTitle] = useState();\r\n  let location = useLocation();\r\n  const [assigneeList, setAssigneeList] = useState([]);\r\n  const [non_submitted_total_tc, setNonSubmittedTotalTC] = useState(0);\r\n  // const [selectedEmployee, setSelectedEmployee] = useState(initialState)\r\n  {\r\n    /**fetch all assignees for PM */\r\n  }\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [totalHrs, setTotalHrs] = useState(0);\r\n  const [modalData, setModalData] = useState(\"\");\r\n  const [row, setRow] = useState();\r\n\r\n  const getTimeCards = (values) => {\r\n    console.log(\"working\");\r\n    setStartDate(values.startDate);\r\n    setEndDate(values.todate);\r\n    var temp_hrs = 0;\r\n    // const section = document.querySelector(\"#tableRef\");\r\n    // section.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n    if (\r\n      has_permission(\"projects.add_projects\") &&\r\n      has_permission(\"wbs.change_timecard\") &&\r\n      has_permission(\"wbs.add_timecard\")\r\n    ) {\r\n      // console.log('values from timecards', values)\r\n      API.get(\"wbs/user/time-card/list/\" + values.assigneeSelectPM + \"/\").then(\r\n        (res) => {\r\n          console.log(res.data.data);\r\n          let temp = [];\r\n          Array.from(res.data.data).forEach((item, idx) => {\r\n            temp.push({ data: item });\r\n          });\r\n\r\n          let filteredData = [];\r\n          filteredData = temp.filter(\r\n            (p) =>\r\n              p.data.date_updated >= values.startDate &&\r\n              p.data.date_updated <= values.todate\r\n          );\r\n          // console.log('timecard for id', filteredData)\r\n          setPdfData(filteredData);\r\n          var tableData = [];\r\n          for (let index = 0; index < filteredData.length; index++) {\r\n            const element = filteredData[index];\r\n            temp_hrs += parseFloat(element.data.hours_today);\r\n            tableData.push({\r\n              WP: element.data.project?.work_package_number\r\n                ? element.data.project.work_package_number\r\n                : \"-\",\r\n              \"Project Name\": element.data.project?.sub_task\r\n                ? element.data.project.sub_task\r\n                : \"-\",\r\n              \"Task Title\": element.data.project.task_title\r\n                ? element.data.project.task_title\r\n                : \"-\",\r\n              Description: element.data.actual_work_done\r\n                ? element.data.actual_work_done\r\n                : \"-\",\r\n              \"Hour(s)\": element.data.hours_today,\r\n              Type: element.data.time_type,\r\n              \"Date Created\": element.data.date_created,\r\n              data: element.data,\r\n            });\r\n          }\r\n          setTotalHrs(temp_hrs);\r\n          setUsersData(tableData);\r\n        }\r\n      );\r\n    } else {\r\n      // console.log('values from timecards', values)\r\n      API.get(\"wbs/user/time-card/list/\" + values.assigneeSelect + \"/\").then(\r\n        (res) => {\r\n          let temp = [];\r\n          setPdfTitle(\r\n            profile_details.first_name + \" \" + profile_details.last_name\r\n          );\r\n          Array.from(res.data.data).forEach((item, idx) => {\r\n            // temp.push({data:item.date_updated >=values.startDate && item.date_updated <= values.todate})\r\n            temp.push({ data: item });\r\n          });\r\n\r\n          let filteredData = [];\r\n          filteredData = temp.filter(\r\n            (p) =>\r\n              p.data.date_updated >= values.startDate &&\r\n              p.data.date_updated <= values.todate\r\n          );\r\n          console.log(\"timecard for id\", filteredData);\r\n\r\n          setPdfData(filteredData);\r\n          setModalData(filteredData);\r\n\r\n          var tableData = [];\r\n          for (let index = 0; index < filteredData.length; index++) {\r\n            const element = filteredData[index];\r\n            temp_hrs += parseFloat(element.data.hours_today);\r\n            tableData.push({\r\n              WP: element.data.project\r\n                ? element.data.project.work_package_number\r\n                : \"-\",\r\n              \"Project Name\":\r\n                element.data.project != null\r\n                  ? element.data.project?.sub_task\r\n                  : \"-\",\r\n              \"Task Title\":\r\n                element.data.project != null\r\n                  ? element.data.project.task_title\r\n                  : \"-\",\r\n              Description: element.data.actual_work_done\r\n                ? element.data.actual_work_done\r\n                : \"\",\r\n              \"Hour(s)\": element.data.hours_today,\r\n              Type: element.data.time_type,\r\n              \"Date Created\": element.data.date_created,\r\n              data: element.data,\r\n            });\r\n            //console.log(\"table\", tableData);\r\n          }\r\n          console.log(\"table\", tableData);\r\n          setUsersData(tableData);\r\n          setTotalHrs(temp_hrs);\r\n        }\r\n      );\r\n    }\r\n  };\r\n  const get_assignee_tc = (assignee) => {\r\n    console.log(\"get_tc\", assignee);\r\n\r\n    const { start, end } = dateRange();\r\n    setPdfTitle(assignee.first_name + \" \" + assignee.last_name);\r\n    API.get(\"wbs/user/time-card/list/\" + assignee.id + \"/\").then((res) => {\r\n      console.log(\"assignee tc\", res.data);\r\n      // setPdfTitle(\r\n      //   profile_details.first_name + \" \" + profile_details.last_name\r\n      // );\r\n      let temp = [];\r\n      Array.from(res.data.data).forEach((item, idx) => {\r\n        temp.push({ data: item });\r\n      });\r\n      let filteredData = temp;\r\n      filteredData = temp.filter(\r\n        (p) => p.data.date_updated >= start && p.data.date_updated <= end\r\n      );\r\n      console.log(\"filtered\", filteredData);\r\n      setPdfData(filteredData);\r\n      var tableData = [];\r\n      let hours_total = 0;\r\n      let total_not_submitted = 0;\r\n      for (let index = 0; index < filteredData.length; index++) {\r\n        if (filteredData[index].data.submitted == false) {\r\n          total_not_submitted++;\r\n        }\r\n        const element = filteredData[index];\r\n        hours_total += parseFloat(element.data.hours_today);\r\n        tableData.push({\r\n          WP: element.data.project\r\n            ? element.data.project.work_package_number\r\n            : \"-\",\r\n          \"Project Name\":\r\n            element.data.project != null ? element.data.project?.sub_task : \"-\",\r\n          \"Task Title\":\r\n            element.data.project != null\r\n              ? element.data.project?.task_title\r\n              : \"-\",\r\n          Description: element.data?.actual_work_done\r\n            ? element.data?.actual_work_done\r\n            : \"-\",\r\n          \"Hour(s)\": element.data.hours_today,\r\n          Type: element.data.time_type,\r\n          \"Date Created\": element.data.date_created,\r\n          data: element.data,\r\n          id: element.data.id,\r\n        });\r\n      }\r\n      setTotalHrs(hours_total);\r\n      setUsersData(orderBy(tableData, \"id\", \"desc\"));\r\n      setNonSubmittedTotalTC(total_not_submitted);\r\n      console.log(\"selected\", selectedAssignee);\r\n    });\r\n  };\r\n  function capitalize(string) {\r\n    if (string != undefined) {\r\n      return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  const [modaladdItem, setmodalAddItem] = useState(false);\r\n  const [show_edit_modal, setShowEditModal] = useState(false);\r\n  const handleAssigneeChange = (option) => {\r\n    setSelectedAssignee(option);\r\n    setPdfTitle(option.label);\r\n    get_assignee_tc(option.data);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    console.log(\"executing effect\");\r\n    window.scrollTo(0, 0);\r\n    const { start, end } = dateRange();\r\n\r\n    // setSelectedAssignee({label:profile_details.first_name+' '+profile_details.last_name,value:profile_details.id,data:profile_details})\r\n    setTotalHrs(0);\r\n    if (\r\n      has_permission(\"projects.change_projectassignee\") ||\r\n      has_permission(\"projects.add_projectassignee\")\r\n    ) {\r\n      API.get(\r\n        \"project/assignees/all/\" + sessionStorage.getItem(USER_ID) + \"/\"\r\n      ).then((res) => {\r\n        let temp = [];\r\n        Array.from(res.data.data).forEach((item, idx) => {\r\n          temp.push({\r\n            data: item,\r\n            value: item.id,\r\n            label:\r\n              capitalize(item.first_name) + \" \" + capitalize(item.last_name),\r\n          });\r\n        });\r\n        if (!temp.find((item) => item.value == res.data.user.id)) {\r\n          temp.unshift({\r\n            data: res.data.user,\r\n            value: res.data.user.id,\r\n            label:\r\n              capitalize(res.data.user.first_name) +\r\n              \" \" +\r\n              capitalize(res.data.user.last_name),\r\n          });\r\n        }\r\n        setAssigneeList(orderBy(temp, \"label\"));\r\n        if (selectedAssignee == null || selectedAssignee == undefined) {\r\n          if (location.state?.assignee && temp.length > 0) {\r\n            let assignee_id = location.state.assignee;\r\n            setSelectedAssignee(temp.find((item) => item.value == assignee_id));\r\n            get_assignee_tc(\r\n              temp.find((item) => item.value == assignee_id).data\r\n            );\r\n          } else {\r\n            setSelectedAssignee({\r\n              data: res.data.user,\r\n              value: res.data.user.id,\r\n              label:\r\n                capitalize(res.data.user.first_name) +\r\n                \" \" +\r\n                capitalize(res.data.user.last_name),\r\n            });\r\n            get_assignee_tc(res.data.user);\r\n          }\r\n          setPdfTitle(\r\n            capitalize(res.data.user.first_name) +\r\n              \" \" +\r\n              capitalize(res.data.user.last_name)\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      if (selectedAssignee == null || selectedAssignee == undefined) {\r\n        setSelectedAssignee({\r\n          data: profile_details,\r\n          value: profile_details.id,\r\n          label:\r\n            capitalize(profile_details.first_name) +\r\n            \" \" +\r\n            capitalize(profile_details.last_name),\r\n        });\r\n        setPdfTitle(\r\n          capitalize(profile_details.first_name) +\r\n            \" \" +\r\n            capitalize(profile_details.last_name)\r\n        );\r\n        get_assignee_tc(profile_details);\r\n      }\r\n    }\r\n  }, [update]);\r\n  useEffect(() => {\r\n    if (location.state?.assignee && assigneeList.length > 0) {\r\n      let assignee_id = location.state.assignee;\r\n      console.log(\"predefined id\", assignee_id);\r\n      console.log(\r\n        \"found user\",\r\n        assigneeList.find((item) => item.value == assignee_id)\r\n      );\r\n      // setSelectedAssignee(assigneeList.find(item=>item.value==assignee_id))\r\n      setSelectedAssignee(\r\n        assigneeList.find((item) => item.value == assignee_id)\r\n      );\r\n      setPdfTitle(assigneeList.find((item) => item.value == assignee_id).label);\r\n      get_assignee_tc(\r\n        assigneeList.find((item) => item.value == assignee_id).data\r\n      );\r\n      console.log(\r\n        assigneeList.find((item) => item.value == assignee_id).data,\r\n        \"from useeffect\"\r\n      );\r\n    }\r\n  }, [assigneeList]);\r\n  const validateEditForm = (values) => {\r\n    const errors = {};\r\n\r\n    if (!values.startDate)\r\n      errors.startDate = \"Start Date selection is required\";\r\n    if (!values.todate) errors.todate = \"To date selection is required\";\r\n    return errors;\r\n  };\r\n\r\n  const editForm = useFormik({\r\n    initialValues: {\r\n      assigneeSelect: sessionStorage.getItem(USER_ID),\r\n      assigneeSelectPM: sessionStorage.getItem(USER_ID),\r\n      startDate: \"\",\r\n      todate: \"\",\r\n    },\r\n    validateOnBlur: true,\r\n    validateOnChange: true,\r\n    validate: validateEditForm,\r\n    onSubmit: getTimeCards,\r\n  });\r\n\r\n  const colourStyles = {\r\n    // control: (styles, state) => ({ ...styles,height:\"35px\", fontSize: '14px !important', lineHeight: '1.42857', borderRadius: \"8px\",borderRadius:\".25rem\",color:\"rgb(133,133,133)\",border:state.isFocused ? '2px solid #0065ff' :'inherit'}),\r\n    option: (provided, state) => ({ ...provided, fontSize: \"14px !important\" }),\r\n  };\r\n  {\r\n    /**export fetched tabledata to excel */\r\n  }\r\n  const fileType =\r\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n  const fileExtension = \".xlsx\";\r\n\r\n  const exportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title =\r\n      \"Timecard of\" +\r\n      \" \" +\r\n      selectedAssignee.data.first_name +\r\n      \" \" +\r\n      selectedAssignee.data.last_name;\r\n    const headers = [\r\n      [\r\n        \"WP\",\r\n        \"Project Name\",\r\n        \"Task Title\",\r\n        \"Description\",\r\n        \"Hour(s)\",\r\n        \"Type\",\r\n        \"Date Created\",\r\n      ],\r\n    ];\r\n    const uData = pdfData.map((elt, idx) => [\r\n      elt.data.project.work_package_number,\r\n      elt.data.project.sub_task,\r\n      elt.data.project.task_title,\r\n      elt.data.actual_work_done,\r\n      elt.data.hours_today,\r\n      elt.data.time_type,\r\n      elt.data.date_created,\r\n    ]);\r\n    let content = {\r\n      startY: 145,\r\n      head: headers,\r\n      body: uData,\r\n    };\r\n\r\n    let day = new Date();\r\n    let time = day.toLocaleString(\"en-US\", {\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n      hour12: true,\r\n    });\r\n    day = moment(day).format(\"DD/MM/YY\");\r\n    const edate = moment(endDate).format(\"DD/MM/YYYY\");\r\n    doc.setFontSize(17);\r\n    doc.text(170, 50, \"Datasoft Manufacturing & Assembly\");\r\n    doc.setFontSize(13);\r\n    doc.text(245, 75, \"Gulshan Branch\");\r\n    doc.setFontSize(11);\r\n    doc.text(42, 105, \"Employee Time Card\");\r\n    doc.text(410, 105, \"Week-Ending: \" + edate); //+ edate)\r\n    doc.text(\r\n      42,\r\n      125,\r\n      \"Name: \" +\r\n        selectedAssignee.data.first_name +\r\n        \" \" +\r\n        selectedAssignee.data.last_name\r\n    ); //+ name)\r\n\r\n    let date = new Date();\r\n    doc.autoTable(content);\r\n    doc.text(\r\n      42,\r\n      doc.lastAutoTable.finalY + 25,\r\n      \"From \" + startDate + \" to \" + endDate\r\n    );\r\n    doc.text(\r\n      250,\r\n      doc.lastAutoTable.finalY + 25,\r\n      \" Total Hours \" + Number(totalHrs).toFixed(2)\r\n    );\r\n    doc.text(\r\n      396,\r\n      doc.lastAutoTable.finalY + 25,\r\n      \"Submitted on : \" + time + \"  \" + day\r\n    );\r\n    return doc;\r\n  };\r\n\r\n  const showModal = (tableItem) => {\r\n    setRow(tableItem.data);\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  const onAddItem = () => {\r\n    setmodalAddItem(false);\r\n    get_assignee_tc(selectedAssignee.data);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once submitted, you will not be able to revert!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        let temp = \"\";\r\n        for (let i = 0; i < usersData.length; i++) {\r\n          //console.log(\"data\", usersData[i]);\r\n          // temp.push(usersData[i].data.id)\r\n          if (i == usersData.length - 1) {\r\n            temp += usersData[i].data.id;\r\n          } else {\r\n            temp += usersData[i].data.id + \",\";\r\n          }\r\n        }\r\n\r\n        let doc = exportPDF();\r\n        let formData = new FormData();\r\n        formData.append(\"employee\", selectedAssignee.value);\r\n        formData.append(\"time_cards\", temp);\r\n        formData.append(\"week_start\", startDate);\r\n        formData.append(\"week_end\", endDate);\r\n        formData.append(\"pdf_file\", doc.output(\"datauristring\"));\r\n\r\n        FILE_API.post(\"wbs/time-card/submit/\", formData).then((res) => {\r\n          console.log(res.data);\r\n          let day = new Date();\r\n          const weekday = [\r\n            \"Sunday\",\r\n            \"Monday\",\r\n            \"Tuesday\",\r\n            \"Wednesday\",\r\n            \"Thursday\",\r\n            \"Friday\",\r\n            \"Saturday\",\r\n          ];\r\n          let days = weekday[day.getDay()];\r\n          let todayDate = moment(day).format(\"DD-MM-YYYY\");\r\n\r\n          // dispatch(fetchAllTimecardsPmThunk(selectedAssignee.value))\r\n          get_assignee_tc(selectedAssignee.data);\r\n          doc.save(\r\n            selectedAssignee.data.first_name +\r\n              \"_\" +\r\n              selectedAssignee.data.last_name +\r\n              \"_\" +\r\n              days +\r\n              \"_\" +\r\n              todayDate +\r\n              \".pdf\"\r\n          );\r\n          window.open(doc.output(\"bloburl\"), \"_blank\");\r\n          swal(\r\n            \"Submitted\",\r\n            \"Your selected time cards are submitted!\",\r\n            \"success\"\r\n          );\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const dateRange = () => {\r\n    var sdate = new Date();\r\n    var edate = new Date();\r\n\r\n    for (let i = 0; i < 7; i++) {\r\n      if (sdate.getDay() === 0) {\r\n        console.log(\"start\", sdate);\r\n        break;\r\n      } else {\r\n        sdate = moment(sdate).subtract(1, \"day\").toDate();\r\n      }\r\n    }\r\n    console.log(\"end date\", edate);\r\n\r\n    setStartDate(moment(sdate).format(\"YYYY-MM-DD\"));\r\n    setEndDate(nextSatDay());\r\n    // editForm.setValues({\r\n    //   assigneeSelect: sessionStorage.getItem(USER_ID),\r\n    //   assigneeSelectPM: sessionStorage.getItem(USER_ID),\r\n    //   startDate: moment(sdate).format('YYYY-MM-DD'),\r\n    //   todate:  moment(edate).format('YYYY-MM-DD'),\r\n    // })\r\n    return {\r\n      start: moment(sdate).format(\"YYYY-MM-DD\"),\r\n      // end: moment(edate).format(\"YYYY-MM-DD\"),\r\n      end: nextSatDay(),\r\n    };\r\n  };\r\n  const nextSatDay = () => {\r\n    var satday = new Date();\r\n    for (let i = 0; i < 7; i++) {\r\n      if (satday.getDay() === 6) {\r\n        console.log(\"sat\", satday);\r\n        break;\r\n      } else {\r\n        satday = moment(satday).add(1, \"day\").toDate();\r\n      }\r\n    }\r\n    satday = moment(satday).format(\"YYYY-MM-DD\");\r\n    return satday;\r\n  };\r\n\r\n  const show_add_item_btn = () => {\r\n    if (editForm.values.assigneeSelectPM == sessionStorage.getItem(USER_ID)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {row != null && row != undefined && (\r\n        <EditTimeCard\r\n          data={row}\r\n          show={show_edit_modal}\r\n          onClose={() => {\r\n            setShowEditModal(false);\r\n            get_assignee_tc(selectedAssignee.data);\r\n          }}\r\n        />\r\n      )}\r\n      {selectedAssignee && (\r\n        <AddTimecardItms\r\n          // toggle={toggleModal}\r\n          employee={selectedAssignee.value}\r\n          show={modaladdItem}\r\n          onClose={onAddItem}\r\n          onAdd={editForm.handleSubmit}\r\n        ></AddTimecardItms>\r\n      )}\r\n      <CContainer>\r\n        <CRow className=\"justify-content-between\">\r\n          <CCol>\r\n            <h3 className=\"timecards-page-header mb-3\">\r\n              Actual Hours of this week\r\n            </h3>\r\n          </CCol>\r\n        </CRow>\r\n        <CForm>\r\n          <CRow>\r\n            {/**assignees */}\r\n            <CCol xl=\"3\" lg=\"3\" md=\"6\">\r\n              {has_permission(\"projects.add_projects\") && (\r\n                <div>\r\n                  <CLabel className=\"custom-label-5\" htmlFor=\"assigneeSelectPM\">\r\n                    Select Employee\r\n                  </CLabel>\r\n                  <Select\r\n                    closeMenuOnSelect={true}\r\n                    aria-labelledby=\"assigneeSelectPM\"\r\n                    id=\"assigneeSelectPM\"\r\n                    minHeight=\"35px\"\r\n                    placeholder={\r\n                      capitalize(profile_details.first_name) +\r\n                      \" \" +\r\n                      capitalize(profile_details.last_name)\r\n                    }\r\n                    isClearable={false}\r\n                    isMulti={false}\r\n                    onChange={handleAssigneeChange}\r\n                    classNamePrefix=\"custom-forminput-6\"\r\n                    options={assigneeList}\r\n                    styles={colourStyles}\r\n                    value={selectedAssignee}\r\n                  />\r\n                </div>\r\n              )}\r\n            </CCol>\r\n            <CRow className=\"mt-4\">\r\n              <CCol>\r\n                <CLabel className=\"custom-label-5\" htmlFor=\"assigneeSelect\">\r\n                  Company :{\" \"}\r\n                  {\r\n                    selectedAssignee?.data?.slc_details?.slc?.department\r\n                      ?.company?.name\r\n                  }\r\n                </CLabel>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol md=\"4\">\r\n                <CLabel className=\"custom-label-5\" htmlFor=\"assigneeSelect\">\r\n                  Employee Name :{\" \"}\r\n                  {capitalize(selectedAssignee?.data?.first_name) +\r\n                    \" \" +\r\n                    capitalize(selectedAssignee?.data?.last_name)}\r\n                </CLabel>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol>\r\n                <CLabel className=\"custom-label-5\" htmlFor=\"assigneeSelect\">\r\n                  Weekending :{\" \"}\r\n                  {moment(nextSatDay()).format(\"dddd, DD MMMM YYYY\")}\r\n                </CLabel>\r\n              </CCol>\r\n            </CRow>\r\n            {show_add_item_btn() == true && (\r\n              <div className=\"format-buttons mt-3 mb-3\">\r\n                <CButton\r\n                  className=\"file-format-download\"\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    setmodalAddItem(true);\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  + Add Item\r\n                </CButton>\r\n              </div>\r\n            )}\r\n\r\n            {/**table for displaying all the entries */}\r\n            <CCol md=\"12\">\r\n              <div className=\"\">\r\n                <CDataTable\r\n                  items={usersData}\r\n                  fields={[\r\n                    {\r\n                      key: \"WP\",\r\n                      _style: { width: \"5%\" },\r\n                      _classes: \"font-weight-bold\",\r\n                    },\r\n                    \"Project Name\",\r\n                    \"Task Title\",\r\n                    \"Description\",\r\n                    \"Hour(s)\",\r\n                    \"Type\",\r\n                    \"Date Created\",\r\n                    \"Action\",\r\n                  ]}\r\n                  primary\r\n                  hover\r\n                  striped\r\n                  bordered\r\n                  sorter\r\n                  //columnFilter\r\n                  size=\"sm\"\r\n                  itemsPerPage={20}\r\n                  pagination\r\n                  scopedSlots={{\r\n                    Action: (item) => (\r\n                      <td>\r\n                        {item.data.submitted == false ? (\r\n                          <CBadge>\r\n                            <CButton\r\n                              onClick={() => {\r\n                                showModal(item);\r\n                              }}\r\n                              size=\"sm\"\r\n                              type=\"button\"\r\n                              color=\"primary\"\r\n                            >\r\n                              Edit\r\n                            </CButton>\r\n                          </CBadge>\r\n                        ) : (\r\n                          <CBadge>\r\n                            <CButton\r\n                              size=\"sm\"\r\n                              type=\"button\"\r\n                              color=\"secondary\"\r\n                              disabled\r\n                            >\r\n                              Edit\r\n                            </CButton>\r\n                          </CBadge>\r\n                        )}\r\n                      </td>\r\n                    ),\r\n                  }}\r\n                />\r\n                {totalHrs != 0 && (\r\n                  <div class=\"alert alert-info\" role=\"alert\">\r\n                    <CRow>\r\n                      <CCol md=\"5\"></CCol>\r\n                      <CCol md=\"3\">\r\n                        {\r\n                          <small>\r\n                            {\"     \"}\r\n                            From <b>\r\n                              {moment(startDate).format(\"DD-MMM-YY\")}\r\n                            </b>{\" \"}\r\n                            to <b>{moment(endDate).format(\"DD-MMM-YY\")}</b>\r\n                          </small>\r\n                        }\r\n                      </CCol>\r\n                      <CCol md=\"4\">\r\n                        {\r\n                          <small>\r\n                            {\"   \"}\r\n                            Total{\" \"}\r\n                            <b>\r\n                              {Number(totalHrs).toFixed(2)}{\" \"}\r\n                              {Number(totalHrs).toFixed(2) > 1\r\n                                ? \"hours\"\r\n                                : \"hour\"}\r\n                              &nbsp;\r\n                            </b>\r\n                          </small>\r\n                        }\r\n                      </CCol>\r\n                    </CRow>\r\n                  </div>\r\n                )}\r\n                <CRow className=\"justify-content-end mb-5\">\r\n                  <CCol md=\"1\" className=\"justify-content-end\">\r\n                    <CButton\r\n                      className=\"file-format-download\"\r\n                      type=\"button\"\r\n                      onClick={onSubmit}\r\n                      style={{ backgroundColor: \"#e55353\" }}\r\n                      disabled={non_submitted_total_tc == 0}\r\n                    >\r\n                      Submit\r\n                    </CButton>\r\n                    {/* <CButton className=\"file-format-download\">Print</CButton> */}\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n        </CForm>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\nexport default TimeCards;\r\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n","import { useFormik } from \"formik\";\r\nimport {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CForm,\r\n  CLabel,\r\n  CInput,\r\n  CButton,\r\n  CModal,\r\n  CModalBody,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalTitle,\r\n  CTextarea,\r\n} from \"@coreui/react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./timeCards.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport { API, USER_ID } from \"../../Config\";\r\nimport swal from 'sweetalert'\r\nimport { fetchHolidays } from \"../../store/slices/HolidaySlice\";\r\nimport { fetchUserHoursUsedAndLeft } from \"../../store/slices/TimecardSlice\";\r\nimport { hours_spent_left } from \"../../helper\";\r\n\r\nconst AddTimecardItms = (props) => {\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    setModal(!modal);\r\n  };\r\n  const holidays=useSelector((state)=>{\r\n    let items=[]\r\n    Array.from(state.holidays.data).forEach((item,idx)=>{\r\n      items.push({label:item.holiday_title,value:item.id,data:item})\r\n    })\r\n    return items\r\n  })\r\n  const [projects,setProjects]=useState([])\r\n  const [selectedProject, setselectedProject]=useState(\"\")\r\n  \r\n  const worktypes= useSelector(state=>{\r\n    let temp=[]\r\n    Array.from(state.worktypes.data).forEach((item,idx)=>{\r\n      temp.push({label:item.title,value:item.title,description:item.description,data:item})\r\n    })\r\n    return temp\r\n  })\r\n  const dispatch = useDispatch()\r\n  const hours_left=hours_spent_left(props.employee.id)\r\n  const onSave = (values) => {\r\n    console.log(\"values\", formAddTimecard.values);\r\n    const data={\r\n      hours_type:formAddTimecard.values.hours_type,\r\n      hours:formAddTimecard.values.hours,\r\n      hour_description:formAddTimecard.values.hour_description?formAddTimecard.values.hour_description:'',\r\n      assignee:props.employee,\r\n      actual_work_done:formAddTimecard.values.actual_work_done,\r\n      project:formAddTimecard.values.project,\r\n      wbs:formAddTimecard.values.wbs,\r\n      task_title:formAddTimecard.values.task_title\r\n    }\r\n    API.post('wbs/time-card/add/', data).then((res) => {\r\n      console.log(res.data)\r\n      props.onClose()\r\n      // props.onAdd()\r\n      toggleModal()\r\n      formAddTimecard.resetForm()\r\n      \r\n      setSelectedType({label : null, value : null })\r\n      setWbsList()\r\n      setSelectedWbs(null)\r\n      setselectedProject(null)\r\n      swal('Added!', 'Successfuly Added', 'success')\r\n    })\r\n\r\n    setModal(false)\r\n  }\r\n\r\n  const validateAddItemForm=(values)=>{\r\n    const errors = {};\r\n    if (!values.hours_type) errors.hours_type = \"Hour Type is required!\"\r\n    if (!values.hours) errors.hours = \"Hour is required!\"\r\n    if (!values.project) errors.project = \"Project is required!\"\r\n    if (!values.wbs) errors.wbs = \"Wbs is required!\"\r\n    if (!values.actual_work_done) errors.actual_work_done = \"Details is required!\"\r\n    if (parseInt(values.hours) < 1) errors.hours = \"Invalid hours value!\"\r\n    return errors;\r\n  }\r\n  \r\n  const formAddTimecard = useFormik({\r\n    initialValues: {\r\n      project: \"\",\r\n      task_title: \"\",\r\n      actual_work_done: \"\",\r\n      hours: \"\",\r\n      hours_type: \"\",\r\n      wbs: \"\",\r\n      hour_description:\"\",\r\n      assignee: props.employee\r\n    },\r\n    validateOnChange: true,\r\n    validateOnBlur: true,\r\n    validate: validateAddItemForm,\r\n    onSubmit: onSave,\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log('add tc props',props.employee);\r\n    dispatch(fetchHolidays());\r\n    dispatch(fetchUserHoursUsedAndLeft())\r\n    let temp_projects=[]\r\n    API.get('project/assigned/all/'+props.employee+'/').then(res=>{\r\n      console.log('assigned projects',res.data)\r\n      for(let index=0;index<res.data.data.length;index++){\r\n        temp_projects.push({label:res.data.data[index].project.sub_task,value:res.data.data[index].project.id,data:res.data.data[index]})\r\n      }\r\n      console.log('temp p',temp_projects)\r\n      setProjects(temp_projects)\r\n    })\r\n    \r\n  }, [props]);\r\n\r\n  const [selectedType, setSelectedType] = useState({ label: \"\", value: \"\" });\r\n  const [wbsList, setWbsList] = useState();\r\n  const [selectedWbs, setSelectedWbs] = useState();\r\n\r\n  const handleHoursTypeChange = (option) => {\r\n    setSelectedType(option);\r\n    \r\n    if(option.label != 'RHR' && option.label != 'WFH' && option.label != 'OTO' && option.label != 'OTS'){\r\n      console.log('if')\r\n      \r\n      formAddTimecard.setValues({\r\n        hours_type:option.value,\r\n        actual_work_done:option.description,\r\n      });\r\n    }\r\n    else{\r\n      console.log('else')\r\n      formAddTimecard.setValues({\r\n        hours_type:option.value,\r\n        actual_work_done:'',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleHolidayChange=(value,actionMeta)=>{\r\n    console.log(value)\r\n    formAddTimecard.setFieldValue('hours',value.data.hours)\r\n  }\r\n\r\n  const handlewbsChange = (option) => {\r\n    setSelectedWbs(option);\r\n    console.log(\"WBS\", option);\r\n    formAddTimecard.setFieldValue(\r\n      \"wbs\",\r\n      option.value,\r\n    );\r\n  };\r\n\r\n  const handleProjectChange = (option) => {\r\n    setselectedProject(option)\r\n    console.log(\"selected Project\", option.value)\r\n     formAddTimecard.setFieldValue(\"project\", option.value);\r\n     let wbslistArray = [];\r\n     for (let i = 0; i < option.data.project.wbs_list.length; i++) {\r\n       if (parseInt(option.data.project.wbs_list[i].assignee_id) == parseInt(props.employee)) {\r\n         wbslistArray.push({\r\n           value: option.data.project.wbs_list[i].id,\r\n           label: option.data.project.wbs_list[i].title,\r\n           data: option.data.project.wbs_list[i],\r\n        });\r\n      }\r\n    }\r\n    setWbsList(wbslistArray);\r\n  };\r\n\r\n  const reset_form = () => {\r\n    formAddTimecard.resetForm();\r\n    setSelectedType({label : null, value : null })\r\n    setWbsList()\r\n    setSelectedWbs(null)\r\n    setselectedProject(null)\r\n\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <CModal\r\n        closeOnBackdrop={false}\r\n        show={props.show}\r\n        onClose={()=>{props.onClose();formAddTimecard.resetForm()}}\r\n        size=\"lg\"\r\n      >\r\n        <CForm>\r\n          <CModalHeader closeButton>\r\n            Enter New Timecard Item Details\r\n          </CModalHeader>\r\n          <CModalBody>\r\n            <CRow>\r\n              <CCol className=\"col-md-12 mb-3\">\r\n                {/*Type : {row?.time_type}*/}\r\n                <CLabel\r\n                  className=\"custom-label-5\"\r\n                  htmlFor=\"assigneeSelectPM\"\r\n                  loseMenuOnSelect={true}\r\n                  isClearable={false}\r\n                  isMulti={false}\r\n                >\r\n                  Hour Type :\r\n                </CLabel>\r\n                <Select\r\n                  id=\"hours_type\"\r\n                  name=\"hours_type\"\r\n                  options={worktypes}\r\n                  onChange={handleHoursTypeChange}\r\n                  value={selectedType}\r\n                />\r\n                {formAddTimecard.touched.hours_type && formAddTimecard.errors.hours_type && <small style={{ color: 'red' }}>{formAddTimecard.errors.hours_type}</small>}\r\n              </CCol>\r\n              {selectedType.label == 'HOL' && <CCol className=\"col-md-12 mb-3\">\r\n                <CLabel className=\"custom-label-wbs5\">Select Holiday : </CLabel>\r\n                <Select\r\n                  id=\"project\"\r\n                  name=\"project\"\r\n                  className=\"custom-forminput-5\"\r\n                  onChange={handleHolidayChange}\r\n                  options={holidays}\r\n                />\r\n              </CCol>}\r\n              <CCol className=\"col-md-12 mb-3\">\r\n                <CLabel className=\"custom-label-wbs5\"> Hour(s) : </CLabel>\r\n                <CInput\r\n                  type=\"number\"\r\n                  aria-label=\"default input example\"\r\n                  id=\"hours\"\r\n                  name=\"hours\"\r\n                  className=\"custom-forminput-5\"\r\n                  placeholder=\"0.00\"\r\n                  //onChange={formAddTimecard.handleChange}\r\n                  disabled={selectedType.value == 'HOL' ||selectedType.value == 'SIC' || selectedType.value == 'VAC'}\r\n                  min=\"0.00\"\r\n                  onChange={(e) => {\r\n                    formAddTimecard.setFieldValue(\r\n                      \"hours\",\r\n                      e.target.value\r\n                    );\r\n                  }}\r\n                  value={formAddTimecard.values.hours}\r\n                />\r\n                {formAddTimecard.touched.hours && formAddTimecard.errors.hours && <small style={{ color: 'red' }}>{formAddTimecard.errors.hours}</small>}\r\n              </CCol>\r\n\r\n              <CCol className=\"col-md-12 mb-3\">\r\n                  <CLabel\r\n                    className=\"custom-label-wbs5\"\r\n                    htmlFor=\"assigneeSelectPM\"\r\n                    loseMenuOnSelect={true}\r\n                    isClearable={false}\r\n                    isMulti={false}\r\n                  >\r\n                    Project :{\" \"}\r\n                  </CLabel>\r\n\r\n                  <Select\r\n                    id=\"project\"\r\n                    name=\"project\"\r\n                    className=\"custom-forminput-5\"\r\n                    onChange={handleProjectChange}\r\n                    options={projects}\r\n                    value = {selectedProject}\r\n                  />\r\n                  {formAddTimecard.touched.project && formAddTimecard.errors.project && <small style={{ color: 'red' }}>{formAddTimecard.errors.project}</small>}\r\n                </CCol>\r\n\r\n                <CCol className=\"col-md-12 mb-3\">\r\n                  {/*Type : {row?.time_type}*/}\r\n                  <CLabel\r\n                    className=\"custom-label-5\"\r\n                    htmlFor=\"assigneeSelectPM\"\r\n                    loseMenuOnSelect={true}\r\n                    isClearable={false}\r\n                    isMulti={false}\r\n                  >\r\n                    WBS :\r\n                  </CLabel>\r\n                  <Select\r\n                    id=\"wbs\"\r\n                    name=\"wbs\"\r\n                    className=\"custom-forminput-5\"\r\n                    options={wbsList}\r\n                    onChange={handlewbsChange}\r\n                    value={selectedWbs}\r\n                  />\r\n                  {formAddTimecard.touched.wbs && formAddTimecard.errors.wbs && <small style={{ color: 'red' }}>{formAddTimecard.errors.wbs}</small>}\r\n                </CCol>\r\n                <CCol className=\"col-md-12 mb-3\">\r\n                  <CLabel>Actual Work :</CLabel>\r\n                  <CTextarea\r\n                    type=\"text\"\r\n                    id=\"actual_work_done\"\r\n                    name=\"actual_work_done\"\r\n                    className=\"custom-forminput-5\"\r\n                    //onChange={formAddTimecard.handleChange}\r\n                    onChange={(e) => {\r\n                      formAddTimecard.setFieldValue(\r\n                        \"actual_work_done\",\r\n                        e.target.value\r\n                      );\r\n                    }}\r\n                    value={formAddTimecard.values.actual_work_done}\r\n                  />\r\n                  {formAddTimecard.touched.actual_work_done && formAddTimecard.errors.actual_work_done && <small style={{ color: 'red' }}>{formAddTimecard.errors.actual_work_done}</small>}\r\n                </CCol>\r\n            </CRow>\r\n          </CModalBody>\r\n        </CForm>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\" type=\"button\" onClick={formAddTimecard.handleSubmit}>\r\n            Add\r\n          </CButton>{\" \"}\r\n          <CButton color=\"secondary\" type=\"button\" onClick={()=>{props.onClose();reset_form()}}>\r\n            Cancel\r\n\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </>\r\n  );\r\n};\r\nexport default AddTimecardItms;\r\n","import { useFormik } from \"formik\";\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CForm,\r\n  CLabel,\r\n  CInput,\r\n  CButton,\r\n  CDataTable,\r\n  CBadge,\r\n  CModal,\r\n  CModalBody,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalTitle,\r\n  CTextarea,\r\n} from \"@coreui/react\";\r\nimport Select from \"react-select\";\r\nimport { API } from \"../../Config\";\r\nimport swal from \"sweetalert\";\r\nimport { useSelector } from \"react-redux\";\r\nconst EditTimeCard = (props) => {\r\n  const types = [\r\n    { label: \"RHR\", value: \"RHR\" },\r\n    { label: \"SIC\", value: \"SIC\" },\r\n    { label: \"VAC\", value: \"VAC\" },\r\n    { label: \"OTS\", value: \"OTS\" },\r\n    { label: \"OTO\", value: \"OTO\" },\r\n    { label: \"HOL\", value: \"HOL\" },\r\n    { label: \"WFH\", value: \"WFH\" },\r\n    { label: \"COM\", value: \"COM\" },\r\n    { label: \"PB1\", value: \"PB1\" },\r\n    { label: \"PB2\", value: \"PB2\" },\r\n  ];\r\n  const worktypes = useSelector((state) => {\r\n    let temp = [];\r\n    Array.from(state.worktypes.data).forEach((item, idx) => {\r\n      temp.push({\r\n        label: item.title,\r\n        value: item.title,\r\n        description: item.description,\r\n        data: item,\r\n      });\r\n    });\r\n    return temp;\r\n  });\r\n  const edit_time_card = (values, { setSubmitting }) => {\r\n    console.log(values);\r\n    API.put(\"wbs/time-card/update/\" + props.data.id + \"/\", values)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.status == 200 && res.statusText == \"OK\") {\r\n          formEditTimeCard.resetForm();\r\n          props.onClose();\r\n          swal(\"Well Done!\", \"Your timecard is updated\", \"success\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const formEditTimeCard = useFormik({\r\n    initialValues: {\r\n      actual_work_done: \"\",\r\n      time_type: \"\",\r\n      hours_today: \"\",\r\n    },\r\n    onSubmit: edit_time_card,\r\n  });\r\n  const handleSelectChange = (value, actionMeta) => {\r\n    console.log(value);\r\n    formEditTimeCard.setFieldValue(\"time_type\", value.value);\r\n  };\r\n  useEffect(() => {\r\n    if (props.data) {\r\n      formEditTimeCard.setValues({\r\n        actual_work_done: props.data.actual_work_done,\r\n        time_type: props.data.time_type,\r\n        hours_today: props.data.hours_today,\r\n      });\r\n    }\r\n  }, [props.data]);\r\n\r\n  const oncancel = () => {\r\n    formEditTimeCard.setValues({\r\n      actual_work_done: props.data.actual_work_done,\r\n      time_type: props.data.time_type,\r\n      hours_today: props.data.hours_today,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CModal\r\n        //show={showModal}\r\n        show={props.show}\r\n        onClose={() => props.onClose()}\r\n        toggle={props.toggle}\r\n        size=\"lg\"\r\n      >\r\n        <CModalHeader closeButton>\r\n          {\" \"}\r\n          Project Name (Work Package) :{\" \"}\r\n          {props.data?.project != null\r\n            ? props.data.project.sub_task +\r\n              \"(\" +\r\n              props.data?.project.work_package_number +\r\n              \")\"\r\n            : \"N/A\"}\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            <CCol className=\"col-md-12 mb-3\">\r\n              {/*Type : {props.data?.time_type}*/}\r\n              <CLabel\r\n                className=\"custom-label-5\"\r\n                htmlFor=\"assigneeSelectPM\"\r\n                loseMenuOnSelect={true}\r\n                isClearable={false}\r\n                isMulti={false}\r\n              >\r\n                Type :\r\n              </CLabel>\r\n              <Select\r\n                options={worktypes}\r\n                onChange={handleSelectChange}\r\n                defaultValue={types.filter(\r\n                  (t) => t.value === props.data?.time_type\r\n                )}\r\n              />\r\n            </CCol>\r\n            <CCol className=\"col-md-12 mb-3\">\r\n              <CLabel class=\"form-label\"> Hour(s):</CLabel>\r\n\r\n              <CInput\r\n                className=\"custom-forminput-5\"\r\n                type=\"number\"\r\n                aria-label=\"default input example\"\r\n                id=\"hours_today\"\r\n                name=\"hours_today\"\r\n                placeholder=\"0.00\"\r\n                min=\"0.00\"\r\n                value={formEditTimeCard.values.hours_today}\r\n                onChange={formEditTimeCard.handleChange}\r\n              ></CInput>\r\n              {/*{sethour(props.data?.sethour)}*/}\r\n            </CCol>\r\n            <CCol className=\"col-md-12 mb-3\">\r\n              <CLabel class=\"form-label\"> Task Title : </CLabel>\r\n              <CInput\r\n                value={\r\n                  props.data?.project != null\r\n                    ? props.data.project.task_title\r\n                    : \"N/A\"\r\n                }\r\n                disabled\r\n              ></CInput>\r\n            </CCol>\r\n            <CCol className=\"col-md-12 mb-3\">\r\n              <CLabel class=\"form-label\">Actual Work :</CLabel>\r\n              <CTextarea\r\n                class=\"form-control\"\r\n                id=\"actual_work_done\"\r\n                name=\"actual_work_done\"\r\n                rows=\"3\"\r\n                value={formEditTimeCard.values.actual_work_done}\r\n                onChange={formEditTimeCard.handleChange}\r\n              >\r\n                {\" \"}\r\n              </CTextarea>\r\n            </CCol>\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\" onClick={formEditTimeCard.handleSubmit}>\r\n            save\r\n          </CButton>{\" \"}\r\n          <CButton\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              props.onClose();\r\n              oncancel();\r\n            }}\r\n          >\r\n            Cancel\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditTimeCard;\r\n"],"sourceRoot":""}