{"version":3,"sources":["pages/holidays/holidaylist.js","../node_modules/lodash/orderBy.js"],"names":["Holidaylist","useState","setallHolidays","holidayData","setholidayData","excelData","setExcelData","totalHolidays","setTotalHolidays","year","setYear","ExcelJS","require","workbook","Workbook","sheet","addWorksheet","mergeCells","customcell","getCell","value","font","size","bold","alignment","horizontal","vertical","customcell1","getRow","values","name","family","height","columns","key","width","i","length","addRow","title","holiday_title","start","start_date","end","end_date","hours","days","xlsx","writeBuffer","buffer","blob","Blob","type","saveAs","useEffect","API","get","then","res","console","log","data","tableData","push","Hours","totalDays","Days","thisYear","Date","getFullYear","holidayTable","className","md","id","onClick","doc","jsPDF","setFontSize","uData","map","elt","idx","content","startY","head","body","text","autoTable","save","exportPdf","exoprtExcel","items","fields","primary","hover","striped","bordered","sorter","itemsPerPage","pagination","baseOrderBy","isArray","module","exports","collection","iteratees","orders","guard","undefined"],"mappings":"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","file":"static/js/38.62546008.chunk.js","sourcesContent":["import {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CForm,\r\n  CLabel,\r\n  CButton,\r\n  CDataTable,\r\n  CBadge,\r\n} from \"@coreui/react\";\r\nimport orderBy from \"lodash/orderBy\";\r\nimport React, { useState, useEffect } from \"react\";\r\n//import \"./timeCards.css\";\r\nimport Select from \"react-select\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FILE_API, USER_ID } from \"../../Config\";\r\nimport { API } from \"../../Config\";\r\nimport { has_permission } from \"../../helper\";\r\nimport { useFormik } from \"formik\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport moment from \"moment\";\r\nimport swal from \"sweetalert\";\r\n\r\nimport { saveAs } from \"file-saver\";\r\n//import AddTimecardItms from \"./addTimecardItem\";\r\n//import EditTimeCard from \"./Edit\";\r\nimport \"./holidays.css\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Holidaylist = () => {\r\n  const [allholidays, setallHolidays] = useState([]);\r\n  const [holidayData, setholidayData] = useState([]);\r\n  const [excelData, setExcelData] = useState([])\r\n  const [totalHolidays, setTotalHolidays] = useState(0)\r\n  const [year, setYear]=useState(0)\r\n\r\n  const holidayTable = (data) => {\r\n    var tableData = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      tableData.push({\r\n        // Year: data[i].Year,\r\n        \"Holiday Title\": data[i].holiday_title,\r\n        \"Start Date\": data[i].start_date,\r\n        \"End Date\": data[i].end_date,\r\n        Hours: data[i].hours,\r\n        \"Days\" : data[i].hours/8,\r\n        \r\n       \r\n      });\r\n      console.log(\"table data \", tableData);\r\n    }\r\n    let totalDays = 0 \r\n    for(let i=0;i<data.length;i++)\r\n    {\r\n      totalDays = totalDays+tableData[i].Days\r\n    }\r\n    console.log(\"total days\", totalDays)\r\n    let thisYear = new Date()\r\n    thisYear = thisYear.getFullYear()\r\n    setYear(thisYear)\r\n    setTotalHolidays(totalDays)\r\n    setholidayData(tableData);\r\n  };\r\n\r\n  async function exoprtExcel () {\r\n    \r\n    const ExcelJS = require(\"exceljs\");\r\n    const workbook = new ExcelJS.Workbook();\r\n    const sheet = workbook.addWorksheet(\"sheet1\");\r\n\r\n    sheet.mergeCells(\"B1:D2\");\r\n    const customcell = sheet.getCell(\"C1\");\r\n    customcell.value = \"Datasoft Manufacturing & Assembly\";\r\n    customcell.font = {\r\n      size: 15,\r\n      bold: true,\r\n    };\r\n    sheet.getCell(\"C1\").alignment = {\r\n      horizontal: \"center\",\r\n      vertical: \"center\",\r\n    };\r\n    sheet.mergeCells(\"B3:D3\");\r\n    const customcell1 = sheet.getCell(\"C3\");\r\n    customcell1.value = \"Gulshan Branch\";\r\n    customcell1.font = {\r\n      size: 13,\r\n      bold: true,\r\n    };\r\n    customcell1.alignment = {\r\n      horizontal: \"center\",\r\n      vertical: \"center\",\r\n    };\r\n\r\n    sheet.mergeCells(\"A5:B5\");\r\n    sheet.getCell(\"A5\").value = \"List of Holidays (\" + year+ \")\" ;\r\n    sheet.getCell(\"A5\").font={\r\n      bold: true,\r\n    }\r\n    sheet.getCell(\"E5\").value = \"Total Holidays \"+ totalHolidays;\r\n    sheet.getCell(\"E5\").font={\r\n      bold: true,\r\n    }\r\n    sheet.mergeCells(\"F6:G6\");\r\n    \r\n    sheet.mergeCells(\"A6:D6\");\r\n\r\n    sheet.getRow(8).values = [\r\n      // \"Year\",\r\n      \"Holiday Title\",\r\n      \"Start Date\",\r\n      \"End Date\",\r\n      \"Hours\",\r\n      \"Days\",\r\n    ];\r\n    sheet.getRow(8).font = {\r\n      name: \"Arial Black\",\r\n      family: 3,\r\n\r\n      size: 10,\r\n    };\r\n\r\n    sheet.getRow(9).height = 20;\r\n    sheet.columns = [\r\n      // { key: \"year\", width: 10 },\r\n      { key: \"title\", width: 30 },\r\n      { key: \"start\", width: 15 },\r\n      { key: \"end\", width: 15 },\r\n      { key: \"hours\", width: 15 },\r\n      { key: \"days\", width: 15 },\r\n      \r\n    ];\r\n    \r\n    for (let i = 0; i < excelData.length; i++) {\r\n      sheet.addRow({\r\n        // year: excelData[i].Year,\r\n        title: excelData[i].holiday_title,\r\n        start: excelData[i].start_date,\r\n        end: excelData[i].end_date,\r\n        hours: excelData[i].hours,\r\n        days: excelData[i].hours/8,\r\n      });\r\n    }\r\n\r\n    const buffer = await workbook.xlsx.writeBuffer(excelData);\r\n    const fileType = \"application/octet-stream\";\r\n    const fileExtension = \".xlsx\";\r\n    const blob = new Blob([buffer], { type: fileType });\r\n    \r\n    const fileName = \"List-of-Holidays\"+fileExtension;\r\n    saveAs(blob, fileName);\r\n  };\r\n\r\n\r\n\r\n  const exportPdf =()=>{\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n    const doc = new jsPDF(orientation, unit, size);\r\n    doc.setFontSize(15);\r\n\r\n    const headers = [[\r\n      // \"Year\",\r\n      \"Holiday Title\",\r\n      \"Start Date\",\r\n      \"End Date\",\r\n      \"Hours\",\r\n      \"Days\",\r\n    ],\r\n  ];\r\n  const uData = excelData.map((elt, idx) => [\r\n       \r\n    // elt.Year,\r\n    elt.holiday_title,\r\n    elt.start_date,\r\n    elt.end_date,\r\n    elt.hours,\r\n    elt.hours/8,\r\n])\r\nconsole.log(\"pdfData\", uData)\r\n  let content = {\r\n    startY: 140,\r\n    head: headers,\r\n    body: uData,\r\n};\r\n\r\n    doc.setFontSize(18);\r\n    doc.text(165, 50, \"Datasoft Manufacturing & Assembly\")\r\n    doc.setFontSize(14);\r\n    doc.text(230, 65,\"Gulshan Branch\")\r\n    doc.setFontSize(12);\r\n    doc.text(42,100, \"List of Holidays (\" + year+ \")\")\r\n    doc.text(450, 100, \"Total Holidays \"+ totalHolidays)\r\n    doc.autoTable(content);\r\n\r\n    \r\n    doc.save(\"List-of-Holidays.pdf\")\r\n  }\r\n  useEffect(() => {\r\n    API.get(\"organizations/holiday/all/\").then((res) => {\r\n      console.log(\"res\", res.data.data);\r\n      setallHolidays(res.data.data);\r\n      holidayTable(res.data.data);\r\n      setExcelData(res.data.data);\r\n    });\r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <CContainer>\r\n      <CRow className=\"justify-content-between\">\r\n        <CCol md=\"12\">\r\n          <CRow className=\"justify-content-between\">\r\n            <CCol>\r\n              <h3 className=\"timecards-page-header mb-3\">List of Holidays ({year})</h3>\r\n            </CCol>\r\n            <CCol md=\"8\" id=\"tableRef\" className=\"d-flex justify-content-end\">\r\n              <h5 className=\"tiny-header--5 mt-3 mr-2\">Export </h5>\r\n              <div className=\"format-buttons mt-3 mb-3 \">\r\n                <CButton\r\n                  className=\"file-format-download\"\r\n                  onClick={() => exportPdf()}\r\n                >\r\n                  <CIcon name=\"cil-description\" className=\"mr-2\" /> PDF\r\n                </CButton>\r\n                <CButton\r\n                  className=\"file-format-download\"\r\n                  onClick={\r\n                    () => exoprtExcel()\r\n                    //exportToCSV(usersData, \"Timecard of\" + \" \" + pdfTitle)\r\n                  }\r\n                >\r\n                  <CIcon name=\"cil-spreadsheet\" className=\"mr-2\" />\r\n                  Excel\r\n                </CButton>\r\n                {/* <CButton className=\"file-format-download\">Print</CButton> */}\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <CDataTable\r\n            items={holidayData}\r\n            fields={[\r\n              // \"Year\",\r\n              \"Holiday Title\",\r\n              \"Start Date\",\r\n              \"End Date\",\r\n              \"Hours\",\r\n              \"Days\", \r\n\r\n            ]}\r\n            primary\r\n            hover\r\n            striped\r\n            bordered\r\n            sorter\r\n            //columnFilter\r\n            size=\"sm\"\r\n            itemsPerPage={20}\r\n            pagination\r\n          />\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"justify-content-end mb-5\">\r\n        <CCol md=\"2\" className=\"justify-content-end tiny-header--5\">\r\n          Total Holidays {totalHolidays}\r\n        </CCol>\r\n      </CRow>\r\n    </CContainer>\r\n  );\r\n};\r\n\r\nexport default Holidaylist;\r\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n"],"sourceRoot":""}